/**
 * System REST API
 * This is a REST API through which clients can interact with System - an **open**, **collaborative**, and **ever-growing knowledge base** of all the world\'s systems.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Configuration } from './configuration';
import { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import { RequestArgs, BaseAPI } from './base';
/**
 * Add study flow context enum.
 * @export
 * @enum {string}
 */
export declare enum AddFlowContext {
    Relationship = "relationship",
    QuickProject = "quick_project"
}
/**
 * Add subscription seat input.
 * @export
 * @interface AddSubscriptionSeatIn
 */
export interface AddSubscriptionSeatIn {
    /**
     *
     * @type {Array<string>}
     * @memberof AddSubscriptionSeatIn
     */
    'emails': Array<string>;
}
/**
 * Alert colors for metric monitoring.
 * @export
 * @enum {string}
 */
export declare enum AlertColor {
    Green = "GREEN",
    Red = "RED"
}
/**
 * List of algorithms model.
 * @export
 * @interface AlgorithmListResult
 */
export interface AlgorithmListResult {
    /**
     *
     * @type {Array<AlgorithmOut>}
     * @memberof AlgorithmListResult
     */
    'items': Array<AlgorithmOut>;
}
/**
 * Algorithm output model.
 * @export
 * @interface AlgorithmOut
 */
export interface AlgorithmOut {
    /**
     *
     * @type {string}
     * @memberof AlgorithmOut
     */
    'algorithm_id': string;
    /**
     *
     * @type {string}
     * @memberof AlgorithmOut
     */
    'display_name': string;
    /**
     *
     * @type {string}
     * @memberof AlgorithmOut
     */
    'description': string;
}
/**
 * Object tag model.
 * @export
 * @interface AppSchemaDatasetsObjectTags
 */
export interface AppSchemaDatasetsObjectTags {
    /**
     *
     * @type {Array<ConceptOut>}
     * @memberof AppSchemaDatasetsObjectTags
     */
    'concepts'?: Array<ConceptOut>;
    /**
     *
     * @type {Array<VariableOut>}
     * @memberof AppSchemaDatasetsObjectTags
     */
    'variables'?: Array<VariableOut>;
}
/**
 * Interface for Groundings for a specific namespace.
 * @export
 * @interface AppSchemaGroundingsGrounding
 */
export interface AppSchemaGroundingsGrounding {
    /**
     *
     * @type {string}
     * @memberof AppSchemaGroundingsGrounding
     */
    'id'?: string;
    /**
     *
     * @type {string}
     * @memberof AppSchemaGroundingsGrounding
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof AppSchemaGroundingsGrounding
     */
    'namespace': string;
    /**
     *
     * @type {string}
     * @memberof AppSchemaGroundingsGrounding
     */
    'namespace_id_label'?: string;
    /**
     *
     * @type {string}
     * @memberof AppSchemaGroundingsGrounding
     */
    'definition'?: string;
}
/**
 * Object tag model.
 * @export
 * @interface AppSchemaStudiesObjectTags
 */
export interface AppSchemaStudiesObjectTags {
    /**
     *
     * @type {Array<ConceptOut>}
     * @memberof AppSchemaStudiesObjectTags
     */
    'concepts'?: Array<ConceptOut>;
    /**
     *
     * @type {Array<VariableOut>}
     * @memberof AppSchemaStudiesObjectTags
     */
    'variables'?: Array<VariableOut>;
}
/**
 * Values available for filtering associations.
 * @export
 * @interface AssociationFilters
 */
export interface AssociationFilters {
    /**
     *
     * @type {Array<FeatureContributionMethodFilterCounts>}
     * @memberof AssociationFilters
     */
    'association_values.feature_contribution_method'?: Array<FeatureContributionMethodFilterCounts>;
}
/**
 * A statistical association between two features.
 * @export
 * @interface AssociationIn
 */
export interface AssociationIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof AssociationIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AssociationIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AssociationIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * The id of the features of the association. Use this for normal association.
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'feature_ids'?: Array<string>;
    /**
     * The id of the variables for a variable/variable association.
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'variable_ids'?: Array<string>;
    /**
     * The ids of the features that are being directed at.
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'directed_at_feature_ids'?: Array<string>;
    /**
     * Values of the association.
     * @type {Array<AssociationValueIn>}
     * @memberof AssociationIn
     */
    'association_values'?: Array<AssociationValueIn>;
    /**
     * The partial dependence plot information.
     * @type {Array<PartialDependencePlotIn>}
     * @memberof AssociationIn
     */
    'pdps'?: Array<PartialDependencePlotIn>;
    /**
     * Statistical controls of the association. (overrides model)
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'statistical_controls'?: Array<string>;
    /**
     * Populations of the association. (overrides dataset)
     * @type {Array<string>}
     * @memberof AssociationIn
     */
    'population_strings'?: Array<string>;
}
/**
 * Association resource links.
 * @export
 * @interface AssociationLinks
 */
export interface AssociationLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof AssociationLinks
     */
    'self': string;
    /**
     * Link to the Model the Association is derived from.
     * @type {string}
     * @memberof AssociationLinks
     */
    'model': string;
    /**
     * Links to the Features of the Association
     * @type {Array<string>}
     * @memberof AssociationLinks
     */
    'features': Array<string>;
}
/**
 * Association output model.
 * @export
 * @interface AssociationOut
 */
export interface AssociationOut {
    /**
     *
     * @type {string}
     * @memberof AssociationOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof AssociationOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof AssociationOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof AssociationOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof AssociationOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof AssociationOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof AssociationOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof AssociationOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AssociationOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AssociationOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * The id of the features of the association. Use this for normal association.
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'feature_ids'?: Array<string>;
    /**
     * The id of the variables for a variable/variable association.
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'variable_ids'?: Array<string>;
    /**
     * The ids of the features that are being directed at.
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'directed_at_feature_ids'?: Array<string>;
    /**
     * Values of the association.
     * @type {Array<AssociationValueOut>}
     * @memberof AssociationOut
     */
    'association_values'?: Array<AssociationValueOut>;
    /**
     * The partial dependence plot information.
     * @type {Array<PartialDependencePlotIn>}
     * @memberof AssociationOut
     */
    'pdps'?: Array<PartialDependencePlotIn>;
    /**
     * Statistical controls of the association. (overrides model)
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'statistical_controls'?: Array<string>;
    /**
     * Populations of the association. (overrides dataset)
     * @type {Array<string>}
     * @memberof AssociationOut
     */
    'population_strings'?: Array<string>;
    /**
     * Collection of links to related resources.
     * @type {AssociationLinks}
     * @memberof AssociationOut
     */
    '_links'?: AssociationLinks;
    /**
     * Model system id the Association belongs to.
     * @type {string}
     * @memberof AssociationOut
     */
    'model_id': string;
    /**
     * The feature data.
     * @type {Array<FeatureOut>}
     * @memberof AssociationOut
     */
    'features'?: Array<FeatureOut>;
}
/**
 * Association pagination out.
 * @export
 * @interface AssociationPaginationOut
 */
export interface AssociationPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof AssociationPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<AssociationOut>}
     * @memberof AssociationPaginationOut
     */
    'items'?: Array<AssociationOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof AssociationPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof AssociationPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof AssociationPaginationOut
     */
    '_sorts'?: Array<string>;
    /**
     * Collection of filter values that can be applied.
     * @type {AssociationFilters}
     * @memberof AssociationPaginationOut
     */
    '_filters'?: AssociationFilters;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum AssociationSortEnum {
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at"
}
/**
 * Association value input class.
 * @export
 * @interface AssociationValueIn
 */
export interface AssociationValueIn {
    /**
     * The strength value of the association.
     * @type {number}
     * @memberof AssociationValueIn
     */
    'value'?: number;
    /**
     * Unit of the association value.
     * @type {string}
     * @memberof AssociationValueIn
     */
    'unit'?: string;
    /**
     * The feature rank based on feature importance
     * @type {number}
     * @memberof AssociationValueIn
     */
    'feature_rank'?: number;
    /**
     * The total number of features in the parent model.
     * @type {number}
     * @memberof AssociationValueIn
     */
    'feature_count'?: number;
    /**
     * Whether one can sum up the feature importance values.
     * @type {boolean}
     * @memberof AssociationValueIn
     */
    'importance_summation'?: boolean;
    /**
     * When using a permutation test for association value, which score type was used to calculate the value.
     * @type {ValidModelScoreEnum}
     * @memberof AssociationValueIn
     */
    'permutation_score_type'?: ValidModelScoreEnum;
    /**
     * Who generated this value.
     * @type {ValidValueSource}
     * @memberof AssociationValueIn
     */
    'generated_by'?: ValidValueSource;
    /**
     * Statistical significance value of the association.
     * @type {SignificanceValueIn}
     * @memberof AssociationValueIn
     */
    'significance_value'?: SignificanceValueIn;
    /**
     * Standard error of the Association value.
     * @type {number}
     * @memberof AssociationValueIn
     */
    'standard_error'?: number;
    /**
     * The method by which the feature importance has been measured.
     * @type {ValidFeatureContributionMethod}
     * @memberof AssociationValueIn
     */
    'feature_contribution_method': ValidFeatureContributionMethod;
    /**
     * Association value properties. Use to prototype.
     * @type {object}
     * @memberof AssociationValueIn
     */
    'properties'?: object;
    /**
     * Historical values.
     * @type {{ [key: string]: AssociationValueInBase; }}
     * @memberof AssociationValueIn
     */
    'history'?: {
        [key: string]: AssociationValueInBase;
    };
}
/**
 * Association value class.
 * @export
 * @interface AssociationValueInBase
 */
export interface AssociationValueInBase {
    /**
     * The strength value of the association.
     * @type {number}
     * @memberof AssociationValueInBase
     */
    'value'?: number;
    /**
     * Unit of the association value.
     * @type {string}
     * @memberof AssociationValueInBase
     */
    'unit'?: string;
    /**
     * The feature rank based on feature importance
     * @type {number}
     * @memberof AssociationValueInBase
     */
    'feature_rank'?: number;
    /**
     * The total number of features in the parent model.
     * @type {number}
     * @memberof AssociationValueInBase
     */
    'feature_count'?: number;
    /**
     * Whether one can sum up the feature importance values.
     * @type {boolean}
     * @memberof AssociationValueInBase
     */
    'importance_summation'?: boolean;
    /**
     * When using a permutation test for association value, which score type was used to calculate the value.
     * @type {ValidModelScoreEnum}
     * @memberof AssociationValueInBase
     */
    'permutation_score_type'?: ValidModelScoreEnum;
    /**
     * Who generated this value.
     * @type {ValidValueSource}
     * @memberof AssociationValueInBase
     */
    'generated_by'?: ValidValueSource;
    /**
     * Statistical significance value of the association.
     * @type {SignificanceValueIn}
     * @memberof AssociationValueInBase
     */
    'significance_value'?: SignificanceValueIn;
    /**
     * Standard error of the Association value.
     * @type {number}
     * @memberof AssociationValueInBase
     */
    'standard_error'?: number;
    /**
     * The method by which the feature importance has been measured.
     * @type {ValidFeatureContributionMethod}
     * @memberof AssociationValueInBase
     */
    'feature_contribution_method': ValidFeatureContributionMethod;
    /**
     * Association value properties. Use to prototype.
     * @type {object}
     * @memberof AssociationValueInBase
     */
    'properties'?: object;
}
/**
 * Association value output model.
 * @export
 * @interface AssociationValueOut
 */
export interface AssociationValueOut {
    /**
     * The strength value of the association.
     * @type {number}
     * @memberof AssociationValueOut
     */
    'value'?: number;
    /**
     * Unit of the association value.
     * @type {string}
     * @memberof AssociationValueOut
     */
    'unit'?: string;
    /**
     * The feature rank based on feature importance
     * @type {number}
     * @memberof AssociationValueOut
     */
    'feature_rank'?: number;
    /**
     * The total number of features in the parent model.
     * @type {number}
     * @memberof AssociationValueOut
     */
    'feature_count'?: number;
    /**
     * Whether one can sum up the feature importance values.
     * @type {boolean}
     * @memberof AssociationValueOut
     */
    'importance_summation'?: boolean;
    /**
     * When using a permutation test for association value, which score type was used to calculate the value.
     * @type {ValidModelScoreEnum}
     * @memberof AssociationValueOut
     */
    'permutation_score_type'?: ValidModelScoreEnum;
    /**
     * Who generated this value.
     * @type {ValidValueSource}
     * @memberof AssociationValueOut
     */
    'generated_by'?: ValidValueSource;
    /**
     * Statistical significance value of the association.
     * @type {SignificanceValueOut}
     * @memberof AssociationValueOut
     */
    'significance_value'?: SignificanceValueOut;
    /**
     * Standard error of the Association value.
     * @type {number}
     * @memberof AssociationValueOut
     */
    'standard_error'?: number;
    /**
     * The method by which the feature importance has been measured.
     * @type {FeatureContributionMethod}
     * @memberof AssociationValueOut
     */
    'feature_contribution_method'?: FeatureContributionMethod;
    /**
     * Association value properties. Use to prototype.
     * @type {object}
     * @memberof AssociationValueOut
     */
    'properties'?: object;
    /**
     * Historical values.
     * @type {{ [key: string]: AssociationValueInBase; }}
     * @memberof AssociationValueOut
     */
    'history'?: {
        [key: string]: AssociationValueInBase;
    };
    /**
     * Whether this is a primary association_value or not.
     * @type {boolean}
     * @memberof AssociationValueOut
     */
    'primary_association_value'?: boolean;
}
/**
 * An Author input data.
 * @export
 * @interface AuthorIn
 */
export interface AuthorIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AuthorIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AuthorIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof AuthorIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AuthorIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AuthorIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Author\'s name.
     * @type {string}
     * @memberof AuthorIn
     */
    'name': string;
    /**
     * Author\'s affiliation
     * @type {Array<string>}
     * @memberof AuthorIn
     */
    'affiliation'?: Array<string>;
    /**
     * Author\'s ORCID
     * @type {string}
     * @memberof AuthorIn
     */
    'orcid'?: string;
}
/**
 * Author resource links.
 * @export
 * @interface AuthorLinks
 */
export interface AuthorLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof AuthorLinks
     */
    'self': string;
}
/**
 * Author output model.
 * @export
 * @interface AuthorOut
 */
export interface AuthorOut {
    /**
     *
     * @type {string}
     * @memberof AuthorOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof AuthorOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof AuthorOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof AuthorOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof AuthorOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof AuthorOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof AuthorOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AuthorOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof AuthorOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof AuthorOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AuthorOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof AuthorOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Author\'s name.
     * @type {string}
     * @memberof AuthorOut
     */
    'name': string;
    /**
     * Author\'s affiliation
     * @type {Array<string>}
     * @memberof AuthorOut
     */
    'affiliation'?: Array<string>;
    /**
     * Author\'s ORCID
     * @type {string}
     * @memberof AuthorOut
     */
    'orcid'?: string;
    /**
     * Collection of links to related resources.
     * @type {AuthorLinks}
     * @memberof AuthorOut
     */
    '_links'?: AuthorLinks;
    /**
     * The System user id of this Author.
     * @type {string}
     * @memberof AuthorOut
     */
    'user_id'?: string;
}
/**
 * Author pagination out.
 * @export
 * @interface AuthorPaginationOut
 */
export interface AuthorPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof AuthorPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<AuthorOut>}
     * @memberof AuthorPaginationOut
     */
    'items'?: Array<AuthorOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof AuthorPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof AuthorPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof AuthorPaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum AuthorSortEnum {
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * Credentials for an integration without password.
 * @export
 * @interface BigQueryCredentials
 */
export interface BigQueryCredentials {
    /**
     * Integration location.
     * @type {string}
     * @memberof BigQueryCredentials
     */
    'location': string;
    /**
     * Integration project.
     * @type {string}
     * @memberof BigQueryCredentials
     */
    'project': string;
}
/**
 * Input credentials for a BigQuery integration.
 * @export
 * @interface BigQueryCredentialsIn
 */
export interface BigQueryCredentialsIn {
    /**
     * Integration location.
     * @type {string}
     * @memberof BigQueryCredentialsIn
     */
    'location': string;
    /**
     * Integration project.
     * @type {string}
     * @memberof BigQueryCredentialsIn
     */
    'project': string;
    /**
     * Integration credentials.
     * @type {string}
     * @memberof BigQueryCredentialsIn
     */
    'raw_credentials': string;
}
/**
 *
 * @export
 * @interface BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
 */
export interface BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost {
    /**
     *
     * @type {Array<string>}
     * @memberof BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    'ids': Array<string>;
}
/**
 *
 * @export
 * @interface BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
 */
export interface BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete {
    /**
     *
     * @type {Array<string>}
     * @memberof BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    'ids': Array<string>;
}
/**
 *
 * @export
 * @interface BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
 */
export interface BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete {
    /**
     *
     * @type {Array<string>}
     * @memberof BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    'ids': Array<string>;
}
/**
 *
 * @export
 * @interface BodyMergeVariablePostV1VariablesVariableIdMergePost
 */
export interface BodyMergeVariablePostV1VariablesVariableIdMergePost {
    /**
     * Ids to merge with
     * @type {Array<string>}
     * @memberof BodyMergeVariablePostV1VariablesVariableIdMergePost
     */
    'merge_ids': Array<string>;
}
/**
 * Patch a `Association` with provided data.
 * @export
 * @interface BulkPatchAssociationOp
 */
export interface BulkPatchAssociationOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof BulkPatchAssociationOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof BulkPatchAssociationOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof BulkPatchAssociationOp
     */
    'op': PatchOp;
    /**
     * The id of resource to apply this patch to.
     * @type {string}
     * @memberof BulkPatchAssociationOp
     */
    'id': string;
}
/**
 * Patch a `Feature` with provided data.
 * @export
 * @interface BulkPatchFeatureOp
 */
export interface BulkPatchFeatureOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof BulkPatchFeatureOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof BulkPatchFeatureOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof BulkPatchFeatureOp
     */
    'op': PatchOp;
    /**
     * The id of resource to apply this patch to.
     * @type {string}
     * @memberof BulkPatchFeatureOp
     */
    'id': string;
}
/**
 * Model to represent calibrator bucket params.
 * @export
 * @interface CalibratorBucketParams
 */
export interface CalibratorBucketParams {
    /**
     * Bucket edges for calibrators.
     * @type {Array<number>}
     * @memberof CalibratorBucketParams
     */
    'buckets': Array<number>;
    /**
     * Max value of this relationship type.
     * @type {number}
     * @memberof CalibratorBucketParams
     */
    'max_value': number;
    /**
     * Min value of this relationship type.
     * @type {number}
     * @memberof CalibratorBucketParams
     */
    'min_value': number;
}
/**
 * Represent a structured statistics for a categorical (including binary) feature type.
 * @export
 * @interface CategoricalFeatureStatistics
 */
export interface CategoricalFeatureStatistics {
    /**
     * Number of distinct values in the feature.
     * @type {number}
     * @memberof CategoricalFeatureStatistics
     */
    'distinct_count'?: number;
    /**
     * Percentage of missing values of the feature.
     * @type {number}
     * @memberof CategoricalFeatureStatistics
     */
    'percent_missing'?: number;
    /**
     * Frequency of occurrence of each value.
     * @type {Frequency}
     * @memberof CategoricalFeatureStatistics
     */
    'frequency'?: Frequency;
    /**
     * Distinct Values that the categorical feature takes.
     * @type {Array<string>}
     * @memberof CategoricalFeatureStatistics
     */
    'distinct_values'?: Array<string>;
    /**
     * Historical stats in form timestamp to value.
     * @type {{ [key: string]: CategoricalFeatureStatisticsSimpleBase; }}
     * @memberof CategoricalFeatureStatistics
     */
    'history'?: {
        [key: string]: CategoricalFeatureStatisticsSimpleBase;
    };
}
/**
 * Represent a structured statistics for a categorical (including binary) feature type.
 * @export
 * @interface CategoricalFeatureStatisticsSimpleBase
 */
export interface CategoricalFeatureStatisticsSimpleBase {
    /**
     * Number of distinct values in the feature.
     * @type {number}
     * @memberof CategoricalFeatureStatisticsSimpleBase
     */
    'distinct_count'?: number;
    /**
     * Percentage of missing values of the feature.
     * @type {number}
     * @memberof CategoricalFeatureStatisticsSimpleBase
     */
    'percent_missing'?: number;
}
/**
 * Cluster out model.
 * @export
 * @interface ClusterOut
 */
export interface ClusterOut {
    /**
     *
     * @type {Array<ScoredCluster>}
     * @memberof ClusterOut
     */
    'clusters': Array<ScoredCluster>;
    /**
     *
     * @type {Array<ClusteredRelationship>}
     * @memberof ClusterOut
     */
    'relationships': Array<ClusteredRelationship>;
    /**
     *
     * @type {string}
     * @memberof ClusterOut
     */
    'cache_key'?: string;
}
/**
 * Cluster out status model.
 * @export
 * @interface ClusterOutStatus
 */
export interface ClusterOutStatus {
    /**
     *
     * @type {FunctionStatus}
     * @memberof ClusterOutStatus
     */
    'status': FunctionStatus;
    /**
     *
     * @type {ClusterOut}
     * @memberof ClusterOutStatus
     */
    'cluster_out'?: ClusterOut;
}
/**
 * Schema for clustered relationship response.
 * @export
 * @interface ClusteredRelationship
 */
export interface ClusteredRelationship {
    /**
     *
     * @type {Array<FlexibleSimpleBaseObject>}
     * @memberof ClusteredRelationship
     */
    'variables': Array<FlexibleSimpleBaseObject>;
    /**
     *
     * @type {Array<string>}
     * @memberof ClusteredRelationship
     */
    'cluster_ids': Array<string>;
    /**
     *
     * @type {Array<FindingMeta>}
     * @memberof ClusteredRelationship
     */
    'finding_metas': Array<FindingMeta>;
    /**
     *
     * @type {Array<StudyFindings>}
     * @memberof ClusteredRelationship
     */
    'findings'?: Array<StudyFindings>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum ClusteringMethods {
    Agglomerative = "agglomerative",
    Dbscan = "dbscan",
    Paraphrase = "paraphrase"
}
/**
 * Concept input resource model.
 * @export
 * @interface ConceptIn
 */
export interface ConceptIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ConceptIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ConceptIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof ConceptIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ConceptIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ConceptIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * The Concept\'s corresponding wikidata id.
     * @type {string}
     * @memberof ConceptIn
     */
    'wikidata_id': string;
    /**
     * Preferred name if different from existing.
     * @type {string}
     * @memberof ConceptIn
     */
    'preferred_name'?: string;
}
/**
 * Concept resource links.
 * @export
 * @interface ConceptLinks
 */
export interface ConceptLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof ConceptLinks
     */
    'self': string;
}
/**
 * Concept output model.
 * @export
 * @interface ConceptOut
 */
export interface ConceptOut {
    /**
     *
     * @type {string}
     * @memberof ConceptOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof ConceptOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof ConceptOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof ConceptOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof ConceptOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof ConceptOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof ConceptOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ConceptOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ConceptOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof ConceptOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ConceptOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ConceptOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * The Concept\'s corresponding wikidata id.
     * @type {string}
     * @memberof ConceptOut
     */
    'wikidata_id': string;
    /**
     * Preferred name if different from existing.
     * @type {string}
     * @memberof ConceptOut
     */
    'preferred_name'?: string;
    /**
     * The Concept\'s name.
     * @type {string}
     * @memberof ConceptOut
     */
    'name'?: string;
    /**
     * The Concept\'s aliases.
     * @type {Array<string>}
     * @memberof ConceptOut
     */
    'aliases'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof ConceptOut
     */
    'description'?: string;
    /**
     * Collection of links to related resources.
     * @type {ConceptLinks}
     * @memberof ConceptOut
     */
    '_links'?: ConceptLinks;
}
/**
 * Concept pagination out.
 * @export
 * @interface ConceptPaginationOut
 */
export interface ConceptPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof ConceptPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<ConceptOut>}
     * @memberof ConceptPaginationOut
     */
    'items'?: Array<ConceptOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof ConceptPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof ConceptPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof ConceptPaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * Node at end of concept relationship.
 * @export
 * @interface ConceptRelationshipNode
 */
export interface ConceptRelationshipNode {
    /**
     *
     * @type {string}
     * @memberof ConceptRelationshipNode
     */
    'system_id': string;
    /**
     *
     * @type {string}
     * @memberof ConceptRelationshipNode
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof ConceptRelationshipNode
     */
    'wikidata_id': string;
    /**
     *
     * @type {Array<string>}
     * @memberof ConceptRelationshipNode
     */
    'supporting_association_ids': Array<string>;
}
/**
 * Concept relationships model.
 * @export
 * @interface ConceptRelationshipsOut
 */
export interface ConceptRelationshipsOut {
    /**
     *
     * @type {ConceptOut}
     * @memberof ConceptRelationshipsOut
     */
    'concept': ConceptOut;
    /**
     *
     * @type {Array<ConceptRelationshipNode>}
     * @memberof ConceptRelationshipsOut
     */
    'upstream': Array<ConceptRelationshipNode>;
    /**
     *
     * @type {Array<ConceptRelationshipNode>}
     * @memberof ConceptRelationshipsOut
     */
    'downstream': Array<ConceptRelationshipNode>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum ConceptSortEnum {
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * Confidence interval input model.
 * @export
 * @interface ConfidenceIntervalIn
 */
export interface ConfidenceIntervalIn {
    /**
     * Confidence level for interval.
     * @type {ValidSignificanceLevel}
     * @memberof ConfidenceIntervalIn
     */
    'level'?: ValidSignificanceLevel;
    /**
     * The lower bound of the CI.
     * @type {number}
     * @memberof ConfidenceIntervalIn
     */
    'ci_lower': number;
    /**
     * The upper bound of the CI.
     * @type {number}
     * @memberof ConfidenceIntervalIn
     */
    'ci_upper': number;
}
/**
 * Confidence interval output model.
 * @export
 * @interface ConfidenceIntervalOut
 */
export interface ConfidenceIntervalOut {
    /**
     * Confidence level for interval.
     * @type {SignificanceLevel}
     * @memberof ConfidenceIntervalOut
     */
    'level'?: SignificanceLevel;
    /**
     * The lower bound of the CI.
     * @type {number}
     * @memberof ConfidenceIntervalOut
     */
    'ci_lower'?: number;
    /**
     * The upper bound of the CI.
     * @type {number}
     * @memberof ConfidenceIntervalOut
     */
    'ci_upper'?: number;
}
/**
 * A Dashboard input data.
 * @export
 * @interface DashboardIn
 */
export interface DashboardIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DashboardIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DashboardIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof DashboardIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DashboardIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DashboardIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Dashboard\'s name.
     * @type {string}
     * @memberof DashboardIn
     */
    'name': string;
    /**
     * Dashboard\'s description.
     * @type {string}
     * @memberof DashboardIn
     */
    'description'?: string;
    /**
     * Dashboard\'s source url.
     * @type {string}
     * @memberof DashboardIn
     */
    'url'?: string;
    /**
     * Dashboard\'s external tool.
     * @type {ExternalToolEnum}
     * @memberof DashboardIn
     */
    'external_tool'?: ExternalToolEnum;
    /**
     * Dashboard\'s external id.
     * @type {string}
     * @memberof DashboardIn
     */
    'external_id'?: string;
    /**
     * Dashboard\'s external author.
     * @type {string}
     * @memberof DashboardIn
     */
    'external_author'?: string;
    /**
     * Dashboard\'s number of elements.
     * @type {number}
     * @memberof DashboardIn
     */
    'element_count'?: number;
    /**
     * Dashboard\'s number of views.
     * @type {number}
     * @memberof DashboardIn
     */
    'view_count'?: number;
    /**
     * Dashboard\'s number of elements.
     * @type {number}
     * @memberof DashboardIn
     */
    'favorite_count'?: number;
    /**
     * The time this dashboard was created.
     * @type {string}
     * @memberof DashboardIn
     */
    'created_on'?: string;
    /**
     * Dashboard\'s filters used.
     * @type {Array<string>}
     * @memberof DashboardIn
     */
    'filters_used'?: Array<string>;
}
/**
 * Dashboard resource links.
 * @export
 * @interface DashboardLinks
 */
export interface DashboardLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof DashboardLinks
     */
    'self': string;
}
/**
 * Dashboard output model.
 * @export
 * @interface DashboardOut
 */
export interface DashboardOut {
    /**
     *
     * @type {string}
     * @memberof DashboardOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof DashboardOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof DashboardOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof DashboardOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof DashboardOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof DashboardOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof DashboardOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DashboardOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DashboardOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof DashboardOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DashboardOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DashboardOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Dashboard\'s name.
     * @type {string}
     * @memberof DashboardOut
     */
    'name': string;
    /**
     * Dashboard\'s description.
     * @type {string}
     * @memberof DashboardOut
     */
    'description'?: string;
    /**
     * Dashboard\'s source url.
     * @type {string}
     * @memberof DashboardOut
     */
    'url'?: string;
    /**
     * Dashboard\'s external tool.
     * @type {ExternalToolEnum}
     * @memberof DashboardOut
     */
    'external_tool'?: ExternalToolEnum;
    /**
     * Dashboard\'s external id.
     * @type {string}
     * @memberof DashboardOut
     */
    'external_id'?: string;
    /**
     * Dashboard\'s external author.
     * @type {string}
     * @memberof DashboardOut
     */
    'external_author'?: string;
    /**
     * Dashboard\'s number of elements.
     * @type {number}
     * @memberof DashboardOut
     */
    'element_count'?: number;
    /**
     * Dashboard\'s number of views.
     * @type {number}
     * @memberof DashboardOut
     */
    'view_count'?: number;
    /**
     * Dashboard\'s number of elements.
     * @type {number}
     * @memberof DashboardOut
     */
    'favorite_count'?: number;
    /**
     * The time this dashboard was created.
     * @type {string}
     * @memberof DashboardOut
     */
    'created_on'?: string;
    /**
     * Dashboard\'s filters used.
     * @type {Array<string>}
     * @memberof DashboardOut
     */
    'filters_used'?: Array<string>;
    /**
     * Collection of links to related resources.
     * @type {DashboardLinks}
     * @memberof DashboardOut
     */
    '_links'?: DashboardLinks;
    /**
     * Team.
     * @type {TeamOut}
     * @memberof DashboardOut
     */
    'team'?: TeamOut;
}
/**
 * Dashboard pagination out.
 * @export
 * @interface DashboardPaginationOut
 */
export interface DashboardPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof DashboardPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<DashboardOut>}
     * @memberof DashboardPaginationOut
     */
    'items'?: Array<DashboardOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof DashboardPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof DashboardPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof DashboardPaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum DashboardSortEnum {
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * A System Database Usage Object.
 * @export
 * @interface DatabaseUsage
 */
export interface DatabaseUsage {
    /**
     * Text of query run on database.
     * @type {string}
     * @memberof DatabaseUsage
     */
    'query_text'?: string;
    /**
     * List of database user IDs for users that have run this query.
     * @type {Array<string>}
     * @memberof DatabaseUsage
     */
    'db_user_ids'?: Array<string>;
    /**
     * Latest value for database query\'s label.
     * @type {string}
     * @memberof DatabaseUsage
     */
    'latest_label'?: string;
    /**
     * Latest start timestamp for query with this query_text.
     * @type {string}
     * @memberof DatabaseUsage
     */
    'latest_timestamp'?: string;
    /**
     * Number of times this query has been run over specified time span.
     * @type {number}
     * @memberof DatabaseUsage
     */
    'run_count'?: number;
    /**
     * Names of tables referenced in this query.
     * @type {Array<string>}
     * @memberof DatabaseUsage
     */
    'tables_referenced'?: Array<string>;
    /**
     * Names of features referenced in this query, indexed by table name.
     * @type {{ [key: string]: Array<string>; }}
     * @memberof DatabaseUsage
     */
    'features_referenced'?: {
        [key: string]: Array<string>;
    };
}
/**
 * A System Dataset Resource.
 * @export
 * @interface DatasetIn
 */
export interface DatasetIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DatasetIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DatasetIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof DatasetIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DatasetIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DatasetIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Dataset name.
     * @type {string}
     * @memberof DatasetIn
     */
    'name': string;
    /**
     * The link for the download (*necessary for model to be “Reproducible”)
     * @type {string}
     * @memberof DatasetIn
     */
    'url'?: string;
    /**
     * The link for the API
     * @type {string}
     * @memberof DatasetIn
     */
    'api_url'?: string;
    /**
     * Location of a page describing the dataset.
     * @type {string}
     * @memberof DatasetIn
     */
    'desc_url'?: string;
    /**
     * An identifier, such as a DOI or a Compact Identifier. If the dataset has more than one identifier, repeat the identifier property. If using JSON-LD, this is represented using JSON list syntax.
     * @type {Array<string>}
     * @memberof DatasetIn
     */
    'identifiers'?: Array<string>;
    /**
     * The version number for the dataset.
     * @type {string}
     * @memberof DatasetIn
     */
    'version'?: string;
    /**
     * Dataset description.
     * @type {string}
     * @memberof DatasetIn
     */
    'description'?: string;
    /**
     * The individual or organization to whom this dataset belongs (e.g. holds copyright).
     * @type {string}
     * @memberof DatasetIn
     */
    'owner'?: string;
    /**
     * The file format of the dataset.
     * @type {string}
     * @memberof DatasetIn
     */
    'format'?: string;
    /**
     * Alternative name that have been used to refer to this dataset, such as alias or abbreviation.
     * @type {Array<string>}
     * @memberof DatasetIn
     */
    'aliases'?: Array<string>;
    /**
     * Catalogs to which the dataset belongs
     * @type {Array<string>}
     * @memberof DatasetIn
     */
    'data_catalogs'?: Array<string>;
    /**
     * Sample size of dataset if known and fixed.
     * @type {number}
     * @memberof DatasetIn
     */
    'sample_size'?: number;
    /**
     * Does the dataset contain personally identifiable information?
     * @type {boolean}
     * @memberof DatasetIn
     */
    'has_pii'?: boolean;
    /**
     * Does the dataset contain personally identifiable health information?
     * @type {boolean}
     * @memberof DatasetIn
     */
    'has_phi'?: boolean;
    /**
     * A license under which the dataset is distributed.
     * @type {ValidDatasetLicenseEnum}
     * @memberof DatasetIn
     */
    'license'?: ValidDatasetLicenseEnum;
    /**
     * A database query that a user can execute to produce the dataset object.
     * @type {string}
     * @memberof DatasetIn
     */
    'db_query'?: string;
    /**
     * A database connection string to execute db_query. Might include free-text instructions.
     * @type {string}
     * @memberof DatasetIn
     */
    'db_connection_string'?: string;
    /**
     * The database language or protocol (e.g., Azure Storage, Postgres, MySQL, OpenOffice) used to produce the dataset object.
     * @type {string}
     * @memberof DatasetIn
     */
    'db_language'?: string;
    /**
     * Database Usage JSON object (stored as string) used to populate Usage tab.
     * @type {Array<DatabaseUsage>}
     * @memberof DatasetIn
     */
    'db_usage'?: Array<DatabaseUsage>;
    /**
     * String descriptions of populations.
     * @type {Array<string>}
     * @memberof DatasetIn
     */
    'population_strings'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum DatasetLicenseEnum {
    PublicDomain = "public_domain",
    CreativeCommonsPublicDomainDedication = "creative_commons_public_domain_dedication",
    OpendataCommonsPublicDomainDedicationAndLicense = "opendata_commons_public_domain_dedication_and_license",
    CreativeCommonsAttributionInternational = "creative_commons_attribution_international",
    CommunityDataLicenseAgreementVersion1Permissive = "community_data_license_agreement_version_1_permissive",
    OpenDataCommonsAttributionLicense = "open_data_commons_attribution_license",
    CreativeCommonsAttributionShareAlike4International = "creative_commons_attribution_share_alike_4_international",
    CommunityDataLicenseAgreementVersion1Sharing = "community_data_license_agreement_version_1_sharing",
    OpenDataCommonsOpenDatabaseLicense = "open_data_commons_open_database_license",
    CreativeCommonsAttributionNoncommercial4International = "creative_commons_attribution_noncommercial_4_international",
    CreativeCommonsAttributionNoderivatives4International = "creative_commons_attribution_noderivatives_4_international",
    CreativeCommonsAttributionNoncommercialShareAlike4International = "creative_commons_attribution_noncommercial_share_alike_4_international",
    CreativeCommonsAttributionNoncommercialNoderivatives4International = "creative_commons_attribution_noncommercial_noderivatives_4_international",
    Other = "other",
    Invalid = "invalid"
}
/**
 * Dataset resource links.
 * @export
 * @interface DatasetLinks
 */
export interface DatasetLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof DatasetLinks
     */
    'self': string;
    /**
     * Link to dataset\'s features.
     * @type {string}
     * @memberof DatasetLinks
     */
    'features': string;
    /**
     * Link to dataset\'s index feature if it is set.
     * @type {string}
     * @memberof DatasetLinks
     */
    'index'?: string;
}
/**
 * Dataset output model.
 * @export
 * @interface DatasetOut
 */
export interface DatasetOut {
    /**
     *
     * @type {string}
     * @memberof DatasetOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof DatasetOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof DatasetOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof DatasetOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof DatasetOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof DatasetOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof DatasetOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DatasetOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DatasetOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof DatasetOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DatasetOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DatasetOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Dataset name.
     * @type {string}
     * @memberof DatasetOut
     */
    'name'?: string;
    /**
     * The link for the download (*necessary for model to be “Reproducible”)
     * @type {string}
     * @memberof DatasetOut
     */
    'url'?: string;
    /**
     * The link for the API
     * @type {string}
     * @memberof DatasetOut
     */
    'api_url'?: string;
    /**
     * Location of a page describing the dataset.
     * @type {string}
     * @memberof DatasetOut
     */
    'desc_url'?: string;
    /**
     * An identifier, such as a DOI or a Compact Identifier. If the dataset has more than one identifier, repeat the identifier property. If using JSON-LD, this is represented using JSON list syntax.
     * @type {Array<string>}
     * @memberof DatasetOut
     */
    'identifiers'?: Array<string>;
    /**
     * The version number for the dataset.
     * @type {string}
     * @memberof DatasetOut
     */
    'version'?: string;
    /**
     * Dataset description.
     * @type {string}
     * @memberof DatasetOut
     */
    'description'?: string;
    /**
     * The individual or organization to whom this dataset belongs (e.g. holds copyright).
     * @type {string}
     * @memberof DatasetOut
     */
    'owner'?: string;
    /**
     * The file format of the dataset.
     * @type {string}
     * @memberof DatasetOut
     */
    'format'?: string;
    /**
     * Alternative name that have been used to refer to this dataset, such as alias or abbreviation.
     * @type {Array<string>}
     * @memberof DatasetOut
     */
    'aliases'?: Array<string>;
    /**
     * Catalogs to which the dataset belongs
     * @type {Array<string>}
     * @memberof DatasetOut
     */
    'data_catalogs'?: Array<string>;
    /**
     * Sample size of dataset if known and fixed.
     * @type {number}
     * @memberof DatasetOut
     */
    'sample_size'?: number;
    /**
     * Does the dataset contain personally identifiable information?
     * @type {boolean}
     * @memberof DatasetOut
     */
    'has_pii'?: boolean;
    /**
     * Does the dataset contain personally identifiable health information?
     * @type {boolean}
     * @memberof DatasetOut
     */
    'has_phi'?: boolean;
    /**
     * A license under which the dataset is distributed.
     * @type {DatasetLicenseEnum}
     * @memberof DatasetOut
     */
    'license'?: DatasetLicenseEnum;
    /**
     * A database query that a user can execute to produce the dataset object.
     * @type {string}
     * @memberof DatasetOut
     */
    'db_query'?: string;
    /**
     * A database connection string to execute db_query. Might include free-text instructions.
     * @type {string}
     * @memberof DatasetOut
     */
    'db_connection_string'?: string;
    /**
     * The database language or protocol (e.g., Azure Storage, Postgres, MySQL, OpenOffice) used to produce the dataset object.
     * @type {string}
     * @memberof DatasetOut
     */
    'db_language'?: string;
    /**
     * Database Usage JSON object (stored as string) used to populate Usage tab.
     * @type {Array<DatabaseUsage>}
     * @memberof DatasetOut
     */
    'db_usage'?: Array<DatabaseUsage>;
    /**
     * String descriptions of populations.
     * @type {Array<string>}
     * @memberof DatasetOut
     */
    'population_strings'?: Array<string>;
    /**
     * Collection of links to related resources.
     * @type {DatasetLinks}
     * @memberof DatasetOut
     */
    '_links'?: DatasetLinks;
    /**
     * The index of the dataset is the column in the dataset used as row labels (mostly relevant for trainingset)
     * @type {FeatureOut}
     * @memberof DatasetOut
     */
    'index'?: FeatureOut;
    /**
     * Deprecated: The subgraph id of the resource.
     * @type {string}
     * @memberof DatasetOut
     */
    'subgraph_id'?: string;
    /**
     * Number of models using this dataset.
     * @type {number}
     * @memberof DatasetOut
     */
    'model_count'?: number;
    /**
     * Object\'s tagged to this study.
     * @type {AppSchemaDatasetsObjectTags}
     * @memberof DatasetOut
     */
    'object_tags'?: AppSchemaDatasetsObjectTags;
}
/**
 * Dataset pagination out.
 * @export
 * @interface DatasetPaginationOut
 */
export interface DatasetPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof DatasetPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<DatasetOut>}
     * @memberof DatasetPaginationOut
     */
    'items'?: Array<DatasetOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof DatasetPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof DatasetPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof DatasetPaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum DatasetSortEnum {
    Popularity = "popularity",
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * Represent statistics for a datetime feature.
 * @export
 * @interface DatetimeFeatureStatistics
 */
export interface DatetimeFeatureStatistics {
    /**
     * Percentage of column values that are missing or zero-length.
     * @type {number}
     * @memberof DatetimeFeatureStatistics
     */
    'percent_missing'?: number;
    /**
     * Earliest time of datetime values.
     * @type {string}
     * @memberof DatetimeFeatureStatistics
     */
    'earliest_time'?: string;
    /**
     * Latest time of datetime values.
     * @type {string}
     * @memberof DatetimeFeatureStatistics
     */
    'latest_time'?: string;
    /**
     * Histogram depicting the distribution of datetime features.
     * @type {DatetimeHistogram}
     * @memberof DatetimeFeatureStatistics
     */
    'histogram'?: DatetimeHistogram;
    /**
     * Historical stats in form timestamp to value.
     * @type {{ [key: string]: DatetimeFeatureStatisticsSimpleBase; }}
     * @memberof DatetimeFeatureStatistics
     */
    'history'?: {
        [key: string]: DatetimeFeatureStatisticsSimpleBase;
    };
}
/**
 * Represent statistics for datetime feature.  These fields will be included in the stats history.
 * @export
 * @interface DatetimeFeatureStatisticsSimpleBase
 */
export interface DatetimeFeatureStatisticsSimpleBase {
    /**
     * Percentage of column values that are missing or zero-length.
     * @type {number}
     * @memberof DatetimeFeatureStatisticsSimpleBase
     */
    'percent_missing'?: number;
    /**
     * Earliest time of datetime values.
     * @type {string}
     * @memberof DatetimeFeatureStatisticsSimpleBase
     */
    'earliest_time'?: string;
    /**
     * Latest time of datetime values.
     * @type {string}
     * @memberof DatetimeFeatureStatisticsSimpleBase
     */
    'latest_time'?: string;
}
/**
 * A datetime histogram object.  See https://numpy.org/doc/1.18/reference/generated/numpy.histogram.html
 * @export
 * @interface DatetimeHistogram
 */
export interface DatetimeHistogram {
    /**
     * The density values of the histogram
     * @type {Array<number>}
     * @memberof DatetimeHistogram
     */
    'hist'?: Array<number>;
    /**
     * The bin edges (length(hist)+1). All but the last (righthand-most) bin is half-open
     * @type {Array<string>}
     * @memberof DatetimeHistogram
     */
    'bin_edges_date_time'?: Array<string>;
}
/**
 * Model Deployment model.
 * @export
 * @interface Deployment
 */
export interface Deployment {
    /**
     * Model\'s deployment stage.
     * @type {DeploymentStageEnum}
     * @memberof Deployment
     */
    'stage'?: DeploymentStageEnum;
    /**
     * Model\'s deployed artifact url. E.g. link to the object in S3.
     * @type {string}
     * @memberof Deployment
     */
    'artifact_url'?: string;
    /**
     * Model\'s deployed endpoint. E.g. the endpoint at which the deployed model is accessible.
     * @type {string}
     * @memberof Deployment
     */
    'endpoint'?: string;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum DeploymentStageEnum {
    Development = "development",
    Testing = "testing",
    Staging = "staging",
    Production = "production",
    Invalid = "invalid"
}
/**
 * Direction input for directionality post.
 * @export
 * @interface DirectionIn
 */
export interface DirectionIn {
    /**
     * The id of the features that are being directed at.
     * @type {Array<string>}
     * @memberof DirectionIn
     */
    'directed_at_ids': Array<string>;
}
/**
 * A doi input for studies.
 * @export
 * @interface DoiIn
 */
export interface DoiIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DoiIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof DoiIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof DoiIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DoiIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof DoiIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * The DOI of the study.
     * @type {string}
     * @memberof DoiIn
     */
    'doi': string;
}
/**
 * Represent dynamic series statistics for a dynamic feature type.
 * @export
 * @interface DynamicFeatureStatistics
 */
export interface DynamicFeatureStatistics {
    /**
     * Minimum series length.
     * @type {number}
     * @memberof DynamicFeatureStatistics
     */
    'min_series_length'?: number;
    /**
     * Maximum series length.
     * @type {number}
     * @memberof DynamicFeatureStatistics
     */
    'max_series_length'?: number;
    /**
     * Line Plot of percentile value at each index value for which there are observed values.
     * @type {{ [key: string]: LinePlot; }}
     * @memberof DynamicFeatureStatistics
     */
    'percentile_series'?: {
        [key: string]: LinePlot;
    };
    /**
     * Histogram depicting the distribution of series length in the dynamic feature.
     * @type {Histogram}
     * @memberof DynamicFeatureStatistics
     */
    'series_length_distribution'?: Histogram;
    /**
     * Line Plot of the mean value at each index value for which there are observed values.
     * @type {LinePlot}
     * @memberof DynamicFeatureStatistics
     */
    'mean_series'?: LinePlot;
    /**
     * Line Plot of the standard deviation at each index value for which there are observed values.
     * @type {LinePlot}
     * @memberof DynamicFeatureStatistics
     */
    'std_series'?: LinePlot;
    /**
     * A frequency object representing the relative frequency at each index value for which there are observed values for categorical-valued dynamic features.
     * @type {{ [key: string]: Frequency; }}
     * @memberof DynamicFeatureStatistics
     */
    'frequency_series'?: {
        [key: string]: Frequency;
    };
    /**
     * Historical stats in form timestamp to value.
     * @type {{ [key: string]: DynamicFeatureStatisticsSimpleBase; }}
     * @memberof DynamicFeatureStatistics
     */
    'history'?: {
        [key: string]: DynamicFeatureStatisticsSimpleBase;
    };
}
/**
 * Represent statistics for a dynamic feature type.  These fields will be included in the stats history.
 * @export
 * @interface DynamicFeatureStatisticsSimpleBase
 */
export interface DynamicFeatureStatisticsSimpleBase {
    /**
     * Minimum series length.
     * @type {number}
     * @memberof DynamicFeatureStatisticsSimpleBase
     */
    'min_series_length'?: number;
    /**
     * Maximum series length.
     * @type {number}
     * @memberof DynamicFeatureStatisticsSimpleBase
     */
    'max_series_length'?: number;
}
/**
 * An Enterprise Resource.
 * @export
 * @interface Enterprise
 */
export interface Enterprise {
    /**
     * Enterprise name.
     * @type {string}
     * @memberof Enterprise
     */
    'name': string;
    /**
     * Enterprise Identity Provider.
     * @type {string}
     * @memberof Enterprise
     */
    'identity_provider'?: string;
    /**
     * Enterprise SAML SSO entity id.
     * @type {string}
     * @memberof Enterprise
     */
    'entity_id'?: string;
    /**
     * Enterprise SAML SSO ACS url.
     * @type {string}
     * @memberof Enterprise
     */
    'acs_url'?: string;
    /**
     * Enterprise SAML SSO IDP metadata
     * @type {string}
     * @memberof Enterprise
     */
    'idp_metadata'?: string;
    /**
     *
     * @type {number}
     * @memberof Enterprise
     */
    'id': number;
    /**
     * The list of integrations to retrieve
     * @type {Array<Integration>}
     * @memberof Enterprise
     */
    'integrations'?: Array<Integration>;
    /**
     * The enterprise messages
     * @type {Array<MessageOut>}
     * @memberof Enterprise
     */
    'messages'?: Array<MessageOut>;
    /**
     * The actions the requesting user is allowed to perform on this resource.
     * @type {Array<ResourceAction>}
     * @memberof Enterprise
     */
    '_permissions'?: Array<ResourceAction>;
}
/**
 * An Enterprise create/update Resource.
 * @export
 * @interface EnterpriseIn
 */
export interface EnterpriseIn {
    /**
     * Enterprise name.
     * @type {string}
     * @memberof EnterpriseIn
     */
    'name': string;
    /**
     * Enterprise Identity Provider.
     * @type {string}
     * @memberof EnterpriseIn
     */
    'identity_provider'?: string;
    /**
     * Enterprise SAML SSO entity id.
     * @type {string}
     * @memberof EnterpriseIn
     */
    'entity_id'?: string;
    /**
     * Enterprise SAML SSO ACS url.
     * @type {string}
     * @memberof EnterpriseIn
     */
    'acs_url'?: string;
    /**
     * Enterprise SAML SSO IDP metadata
     * @type {string}
     * @memberof EnterpriseIn
     */
    'idp_metadata'?: string;
}
/**
 * External asset model.
 * @export
 * @interface ExternalAsset
 */
export interface ExternalAsset {
    /**
     * Asset uri.
     * @type {string}
     * @memberof ExternalAsset
     */
    'uri'?: string;
    /**
     * External asset type.
     * @type {ExternalAssetTypeEnum}
     * @memberof ExternalAsset
     */
    'external_asset_type'?: ExternalAssetTypeEnum;
}
/**
 * External asset type enum.
 * @export
 * @enum {string}
 */
export declare enum ExternalAssetTypeEnum {
    Invalid = "invalid",
    Document = "document",
    Notebook = "notebook"
}
/**
 * Enum for external tools.
 * @export
 * @enum {string}
 */
export declare enum ExternalToolEnum {
    Looker = "LOOKER",
    Mode = "MODE",
    Tableau = "TABLEAU"
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum FeatureContributionMethod {
    Gini = "gini",
    Gain = "gain",
    Shap = "shap",
    Coefficient = "coefficient",
    Lime = "lime",
    Permutation = "permutation",
    PearsonR = "pearson_r",
    KendallTau = "kendall_tau",
    CramerV = "cramer_v",
    KruskalWallisHTest = "kruskal_wallis_h_test",
    ControlVariable = "control_variable",
    ProductMomentR = "product_moment_r",
    FrequencyScore = "frequency_score",
    OddsRatio = "odds_ratio",
    RelativeRiskRatio = "relative_risk_ratio",
    HazardRatio = "hazard_ratio",
    MeanGainUnstandardized = "mean_gain_unstandardized",
    MeanGainStandardized = "mean_gain_standardized",
    MeanDifferenceUnstandardized = "mean_difference_unstandardized",
    MeanDifferenceStandardized = "mean_difference_standardized",
    ProportionDifference = "proportion_difference",
    LogOddsRatio = "log_odds_ratio",
    PearsonChiSquaredTest = "pearson_chi_squared_test",
    Forecast = "forecast",
    PercentChangeDifference = "percent_change_difference",
    AdjustedOddsRatio = "adjusted_odds_ratio",
    AdjustedHazardRatio = "adjusted_hazard_ratio",
    IncidentRateRatio = "incident_rate_ratio",
    RiskDifference = "risk_difference",
    InformationFlow = "information_flow",
    StandardizedCoefficient = "standardized_coefficient",
    CohensD = "cohens_d",
    HedgesG = "hedges_g",
    GlassSDelta = "glass_s_delta",
    RootMeanSquareDifferencePsi = "root_mean_square_difference_psi",
    MahalanobisDistance = "mahalanobis_distance",
    CohensW = "cohens_w",
    CohensH = "cohens_h",
    CliffsDelta = "cliffs_delta",
    RankBiserialCorrelation = "rank_biserial_correlation",
    SpearmanCorrelation = "spearman_correlation",
    Elasticity = "elasticity",
    PrevalenceRatio = "prevalence_ratio",
    Invalid = "invalid"
}
/**
 * Feature contribution filter count info.
 * @export
 * @interface FeatureContributionMethodFilterCounts
 */
export interface FeatureContributionMethodFilterCounts {
    /**
     *
     * @type {string}
     * @memberof FeatureContributionMethodFilterCounts
     */
    'method'?: string;
    /**
     *
     * @type {number}
     * @memberof FeatureContributionMethodFilterCounts
     */
    'count'?: number;
}
/**
 * A real-world machine learning or statistical feature.
 * @export
 * @interface FeatureIn
 */
export interface FeatureIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof FeatureIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof FeatureIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof FeatureIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof FeatureIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof FeatureIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Features\'s name.
     * @type {string}
     * @memberof FeatureIn
     */
    'name': string;
    /**
     * Descriptive statistics of the feature.
     * @type {Array<FeatureStatistics>}
     * @memberof FeatureIn
     */
    'feature_statistics'?: Array<FeatureStatistics>;
    /**
     * ID of Variable this Feature operationalizes.
     * @type {string}
     * @memberof FeatureIn
     */
    'variable_id'?: string;
    /**
     * Filtered by values.
     * @type {Array<FilterValue>}
     * @memberof FeatureIn
     */
    'filtered_by_values'?: Array<FilterValue>;
}
/**
 * Variable resource links.
 * @export
 * @interface FeatureLinks
 */
export interface FeatureLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof FeatureLinks
     */
    'self': string;
    /**
     * Link to feature\'s variable.
     * @type {string}
     * @memberof FeatureLinks
     */
    'variable'?: string;
}
/**
 * Feature output model.
 * @export
 * @interface FeatureOut
 */
export interface FeatureOut {
    /**
     *
     * @type {string}
     * @memberof FeatureOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof FeatureOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof FeatureOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof FeatureOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof FeatureOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof FeatureOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof FeatureOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof FeatureOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof FeatureOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof FeatureOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof FeatureOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof FeatureOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Features\'s name.
     * @type {string}
     * @memberof FeatureOut
     */
    'name': string;
    /**
     * Descriptive statistics of the feature.
     * @type {Array<FeatureStatistics>}
     * @memberof FeatureOut
     */
    'feature_statistics'?: Array<FeatureStatistics>;
    /**
     * ID of Variable this Feature operationalizes.
     * @type {string}
     * @memberof FeatureOut
     */
    'variable_id'?: string;
    /**
     * Filtered by values.
     * @type {Array<FilterValue>}
     * @memberof FeatureOut
     */
    'filtered_by_values'?: Array<FilterValue>;
    /**
     * Collection of links to related resources.
     * @type {FeatureLinks}
     * @memberof FeatureOut
     */
    '_links'?: FeatureLinks;
    /**
     * Number of models using this feature.
     * @type {number}
     * @memberof FeatureOut
     */
    'model_count'?: number;
    /**
     * The variable this feature operationalizes.
     * @type {VariableOut}
     * @memberof FeatureOut
     */
    'variable'?: VariableOut;
}
/**
 * Feature pagination out.
 * @export
 * @interface FeaturePaginationOut
 */
export interface FeaturePaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof FeaturePaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<FeatureOut>}
     * @memberof FeaturePaginationOut
     */
    'items'?: Array<FeatureOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof FeaturePaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof FeaturePaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof FeaturePaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum FeatureSortEnum {
    ModelCount = "model_count",
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * Enum for feature source.
 * @export
 * @enum {string}
 */
export declare enum FeatureSourceEnum {
    Invalid = "invalid",
    LocalEvaluator = "local_evaluator",
    RemoteEvaluator = "remote_evaluator",
    User = "user"
}
/**
 * Represent statistics of a feature.  Note: exactly one of the `*_feature_statistics` fields must be non-null.
 * @export
 * @interface FeatureStatistics
 */
export interface FeatureStatistics {
    /**
     * Type of the feature.
     * @type {FeatureTypeEnum}
     * @memberof FeatureStatistics
     */
    'feature_type'?: FeatureTypeEnum;
    /**
     * Who generated the statistic object.
     * @type {FeatureSourceEnum}
     * @memberof FeatureStatistics
     */
    'generated_by'?: FeatureSourceEnum;
    /**
     * Statistics for a numerical feature.
     * @type {NumericalFeatureStatistics}
     * @memberof FeatureStatistics
     */
    'numerical_feature_statistics'?: NumericalFeatureStatistics;
    /**
     * Statistics for a categorical feature.
     * @type {CategoricalFeatureStatistics}
     * @memberof FeatureStatistics
     */
    'categorical_feature_statistics'?: CategoricalFeatureStatistics;
    /**
     * Statistics for a time series feature.
     * @type {TimeSeriesFeatureStatistics}
     * @memberof FeatureStatistics
     */
    'time_series_feature_statistics'?: TimeSeriesFeatureStatistics;
    /**
     * Statistics for a dynamic feature.
     * @type {DynamicFeatureStatistics}
     * @memberof FeatureStatistics
     */
    'dynamic_feature_statistics'?: DynamicFeatureStatistics;
    /**
     * Statistics for a string feature.
     * @type {StringFeatureStatistics}
     * @memberof FeatureStatistics
     */
    'string_feature_statistics'?: StringFeatureStatistics;
    /**
     * Statistics for a datetime feature.
     * @type {DatetimeFeatureStatistics}
     * @memberof FeatureStatistics
     */
    'datetime_feature_statistics'?: DatetimeFeatureStatistics;
}
/**
 * Enum for feature types.
 * @export
 * @enum {string}
 */
export declare enum FeatureTypeEnum {
    Invalid = "invalid",
    Numerical = "numerical",
    Categorical = "categorical",
    Datetime = "datetime",
    Text = "text",
    Image = "image",
    Audio = "audio",
    Video = "video",
    File = "file",
    TimeSeries = "time_series",
    Dynamic = "dynamic",
    String = "string"
}
/**
 * A Filter value object model.
 * @export
 * @interface FilterValue
 */
export interface FilterValue {
    /**
     * Retrieval status.
     * @type {FilterValueType}
     * @memberof FilterValue
     */
    'filter_type'?: FilterValueType;
    /**
     * Filter value.
     * @type {string}
     * @memberof FilterValue
     */
    'value'?: string;
    /**
     * User who filtered by this value.
     * @type {string}
     * @memberof FilterValue
     */
    'added_by'?: string;
    /**
     * Time this value was added.
     * @type {string}
     * @memberof FilterValue
     */
    'added_on'?: string;
    /**
     * Related filter values used in conjunction with this filter.
     * @type {Array<RelatedFilterValue>}
     * @memberof FilterValue
     */
    'related_values'?: Array<RelatedFilterValue>;
}
/**
 * Filter value types.
 * @export
 * @enum {string}
 */
export declare enum FilterValueType {
    Filter = "filter",
    Sort = "sort"
}
/**
 * Interface for finding in study.
 * @export
 * @interface Finding
 */
export interface Finding {
    /**
     *
     * @type {string}
     * @memberof Finding
     */
    'summary'?: string;
    /**
     *
     * @type {RawFinding}
     * @memberof Finding
     */
    'data'?: RawFinding;
    /**
     *
     * @type {Array<string>}
     * @memberof Finding
     */
    'labels'?: Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof Finding
     */
    'mechanistic': boolean;
    /**
     *
     * @type {string}
     * @memberof Finding
     */
    'mechanism_type'?: string;
}
/**
 * Schema for identifying finding.
 * @export
 * @interface FindingMeta
 */
export interface FindingMeta {
    /**
     *
     * @type {string}
     * @memberof FindingMeta
     */
    'pmid'?: string;
    /**
     *
     * @type {string}
     * @memberof FindingMeta
     */
    'doi'?: string;
    /**
     *
     * @type {string}
     * @memberof FindingMeta
     */
    'association_id'?: string;
    /**
     *
     * @type {boolean}
     * @memberof FindingMeta
     */
    'is_rct': boolean;
    /**
     *
     * @type {string}
     * @memberof FindingMeta
     */
    'publish_date'?: string;
    /**
     *
     * @type {number}
     * @memberof FindingMeta
     */
    'article_score'?: number;
    /**
     *
     * @type {number}
     * @memberof FindingMeta
     */
    'citation_count'?: number;
    /**
     *
     * @type {string}
     * @memberof FindingMeta
     */
    'name'?: string;
    /**
     *
     * @type {Array<StudyAuthor>}
     * @memberof FindingMeta
     */
    'authorships'?: Array<StudyAuthor>;
    /**
     *
     * @type {string}
     * @memberof FindingMeta
     */
    'journal'?: string;
}
/**
 * Next/prev Pagination links with first and last urls.
 * @export
 * @interface FirstLastPaginationLinks
 */
export interface FirstLastPaginationLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof FirstLastPaginationLinks
     */
    'self': string;
    /**
     * Link to next page.
     * @type {string}
     * @memberof FirstLastPaginationLinks
     */
    'next'?: string;
    /**
     * Link to previous page.
     * @type {string}
     * @memberof FirstLastPaginationLinks
     */
    'prev'?: string;
    /**
     * Link to first page.
     * @type {string}
     * @memberof FirstLastPaginationLinks
     */
    'first'?: string;
    /**
     * Link to last page.
     * @type {string}
     * @memberof FirstLastPaginationLinks
     */
    'last'?: string;
}
/**
 * Optional id base object.
 * @export
 * @interface FlexibleSimpleBaseObject
 */
export interface FlexibleSimpleBaseObject {
    /**
     *
     * @type {string}
     * @memberof FlexibleSimpleBaseObject
     */
    'system_id'?: string;
    /**
     *
     * @type {string}
     * @memberof FlexibleSimpleBaseObject
     */
    'name': string;
}
/**
 * A frequency object.
 * @export
 * @interface Frequency
 */
export interface Frequency {
    /**
     * The normalized count of each index
     * @type {Array<number>}
     * @memberof Frequency
     */
    'normalized_counts'?: Array<number>;
    /**
     * The index of frequency object
     * @type {Array<string>}
     * @memberof Frequency
     */
    'index'?: Array<string>;
}
/**
 * Status for polling functions.
 * @export
 * @enum {string}
 */
export declare enum FunctionStatus {
    Pending = "pending",
    Running = "running",
    Finished = "finished",
    Error = "error"
}
/**
 * Graph metrics schema.
 * @export
 * @interface GraphMetrics
 */
export interface GraphMetrics {
    /**
     *
     * @type {number}
     * @memberof GraphMetrics
     */
    'num_relationships': number;
    /**
     *
     * @type {number}
     * @memberof GraphMetrics
     */
    'num_topics': number;
    /**
     *
     * @type {number}
     * @memberof GraphMetrics
     */
    'num_sources': number;
    /**
     *
     * @type {string}
     * @memberof GraphMetrics
     */
    'last_updated': string;
}
/**
 * GraphQL query model.
 * @export
 * @interface GraphQLQuery
 */
export interface GraphQLQuery {
    /**
     *
     * @type {string}
     * @memberof GraphQLQuery
     */
    'query': string;
    /**
     *
     * @type {string}
     * @memberof GraphQLQuery
     */
    'operationName'?: string;
    /**
     *
     * @type {any}
     * @memberof GraphQLQuery
     */
    'variables'?: any;
}
/**
 * Single topic graph direction for enum.
 * @export
 * @enum {string}
 */
export declare enum GraphSearchDirection {
    In = "in",
    Out = "out"
}
/**
 *
 * @export
 * @interface GroundedEntity
 */
export interface GroundedEntity {
    /**
     *
     * @type {string}
     * @memberof GroundedEntity
     */
    'name': string;
    /**
     *
     * @type {Array<QueryParserApiModelsPydanticGrounding>}
     * @memberof GroundedEntity
     */
    'groundings'?: Array<QueryParserApiModelsPydanticGrounding>;
}
/**
 *
 * @export
 * @interface HTTPValidationError
 */
export interface HTTPValidationError {
    /**
     *
     * @type {Array<ValidationError>}
     * @memberof HTTPValidationError
     */
    'detail'?: Array<ValidationError>;
}
/**
 * A histogram object.  See https://numpy.org/doc/1.18/reference/generated/numpy.histogram.html
 * @export
 * @interface Histogram
 */
export interface Histogram {
    /**
     * The density values of the histogram
     * @type {Array<number>}
     * @memberof Histogram
     */
    'hist'?: Array<number>;
    /**
     * The bin edges (length(hist)+1). All but the last (righthand-most) bin is half-open
     * @type {Array<number>}
     * @memberof Histogram
     */
    'bin_edges'?: Array<number>;
}
/**
 * SSO Identity Providers preconfigured in AWS Cognito user pool.
 * @export
 * @enum {string}
 */
export declare enum IdentityProvider {
    Google = "Google",
    KeycloakGoogleDev = "keycloak-google-dev"
}
/**
 * Get Identity Provider Name.
 * @export
 * @interface IdentityProviderNameOut
 */
export interface IdentityProviderNameOut {
    /**
     * Name of the identity provider for given email as configured in System
     * @type {IdentityProvider}
     * @memberof IdentityProviderNameOut
     */
    'idp'?: IdentityProvider;
}
/**
 * An Integration Resource.
 * @export
 * @interface Integration
 */
export interface Integration {
    /**
     * Integration name.
     * @type {string}
     * @memberof Integration
     */
    'name'?: string;
    /**
     * Integration state.
     * @type {IntegrationState}
     * @memberof Integration
     */
    'state'?: IntegrationState;
    /**
     * The integration type.
     * @type {IntegrationType}
     * @memberof Integration
     */
    'service_type': IntegrationType;
    /**
     * API Endpoint.
     * @type {string}
     * @memberof Integration
     */
    'endpoint': string;
    /**
     * Integration IP address.
     * @type {string}
     * @memberof Integration
     */
    'ip_address'?: string;
    /**
     * Integration lamdba names.
     * @type {string}
     * @memberof Integration
     */
    'lambda_arn'?: string;
    /**
     * Is this integration deployed on enterprise\'s internal stack?
     * @type {boolean}
     * @memberof Integration
     */
    'on_premise'?: boolean;
    /**
     * The list of tables to retrieve
     * @type {Array<Table>}
     * @memberof Integration
     */
    'tables'?: Array<Table>;
    /**
     * The list of views to retrieve
     * @type {Array<Table>}
     * @memberof Integration
     */
    'views'?: Array<Table>;
    /**
     * The integration messages
     * @type {Array<MessageOut>}
     * @memberof Integration
     */
    'messages'?: Array<MessageOut>;
    /**
     *
     * @type {number}
     * @memberof Integration
     */
    'id': number;
    /**
     * Integration credentials.
     * @type {RedshiftCredentials | SnowflakeCredentials | BigQueryCredentials | LookerCredentials | ModeCredentials}
     * @memberof Integration
     */
    'credentials': RedshiftCredentials | SnowflakeCredentials | BigQueryCredentials | LookerCredentials | ModeCredentials;
    /**
     * Enterprise link.
     * @type {string}
     * @memberof Integration
     */
    'enterprise'?: string;
    /**
     * Team link.
     * @type {string}
     * @memberof Integration
     */
    'team'?: string;
    /**
     * The actions the requesting user is allowed to perform on this resource.
     * @type {Array<ResourceAction>}
     * @memberof Integration
     */
    '_permissions'?: Array<ResourceAction>;
}
/**
 * Integration model for create/update.
 * @export
 * @interface IntegrationIn
 */
export interface IntegrationIn {
    /**
     * Integration name.
     * @type {string}
     * @memberof IntegrationIn
     */
    'name'?: string;
    /**
     * Integration state.
     * @type {IntegrationState}
     * @memberof IntegrationIn
     */
    'state'?: IntegrationState;
    /**
     * The integration type.
     * @type {IntegrationType}
     * @memberof IntegrationIn
     */
    'service_type'?: IntegrationType;
    /**
     * API Endpoint.
     * @type {string}
     * @memberof IntegrationIn
     */
    'endpoint'?: string;
    /**
     * Integration IP address.
     * @type {string}
     * @memberof IntegrationIn
     */
    'ip_address'?: string;
    /**
     * Integration lamdba names.
     * @type {string}
     * @memberof IntegrationIn
     */
    'lambda_arn'?: string;
    /**
     * Is this integration deployed on enterprise\'s internal stack?
     * @type {boolean}
     * @memberof IntegrationIn
     */
    'on_premise'?: boolean;
    /**
     * The list of tables to retrieve
     * @type {Array<Table>}
     * @memberof IntegrationIn
     */
    'tables'?: Array<Table>;
    /**
     * The list of views to retrieve
     * @type {Array<Table>}
     * @memberof IntegrationIn
     */
    'views'?: Array<Table>;
    /**
     * The integration messages
     * @type {Array<MessageOut>}
     * @memberof IntegrationIn
     */
    'messages'?: Array<MessageOut>;
    /**
     * Integration credentials.
     * @type {RedshiftCredentialsIn | SnowflakeCredentialsIn | BigQueryCredentialsIn | LookerCredentialsIn | ModeCredentialsIn}
     * @memberof IntegrationIn
     */
    'credentials'?: RedshiftCredentialsIn | SnowflakeCredentialsIn | BigQueryCredentialsIn | LookerCredentialsIn | ModeCredentialsIn;
    /**
     * Team or Enterprise link
     * @type {string}
     * @memberof IntegrationIn
     */
    'owner'?: string;
}
/**
 * Integration service state.
 * @export
 * @enum {string}
 */
export declare enum IntegrationState {
    Initial = "INITIAL",
    Active = "ACTIVE",
    Inactive = "INACTIVE"
}
/**
 * Integration retrieval types.
 * @export
 * @enum {string}
 */
export declare enum IntegrationType {
    Redshift = "REDSHIFT",
    Snowflake = "SNOWFLAKE",
    Bigquery = "BIGQUERY",
    Looker = "LOOKER",
    Mode = "MODE"
}
/**
 * Represent a line plot.
 * @export
 * @interface LinePlot
 */
export interface LinePlot {
    /**
     * The value of the series at each value of the (ordered) index.
     * @type {Array<number>}
     * @memberof LinePlot
     */
    'values'?: Array<number>;
    /**
     * The index for the values. Ordered - can be units of time or dates.
     * @type {Array<string>}
     * @memberof LinePlot
     */
    'index'?: Array<string>;
}
/**
 * Credentials for a Looker integration without password.
 * @export
 * @interface LookerCredentials
 */
export interface LookerCredentials {
    /**
     * Integration verify ssl
     * @type {boolean}
     * @memberof LookerCredentials
     */
    'verify_ssl'?: boolean;
    /**
     * Integration base url
     * @type {string}
     * @memberof LookerCredentials
     */
    'base_url': string;
}
/**
 * Input credentials for a Looker integration.
 * @export
 * @interface LookerCredentialsIn
 */
export interface LookerCredentialsIn {
    /**
     * Integration verify ssl
     * @type {boolean}
     * @memberof LookerCredentialsIn
     */
    'verify_ssl'?: boolean;
    /**
     * Integration base url
     * @type {string}
     * @memberof LookerCredentialsIn
     */
    'base_url': string;
    /**
     * Integration client id.
     * @type {string}
     * @memberof LookerCredentialsIn
     */
    'client_id': string;
    /**
     * Integration client secret key.
     * @type {string}
     * @memberof LookerCredentialsIn
     */
    'client_secret': string;
}
/**
 * A Message object.
 * @export
 * @interface MessageIn
 */
export interface MessageIn {
    /**
     *
     * @type {string}
     * @memberof MessageIn
     */
    'message': string;
    /**
     *
     * @type {MessageType}
     * @memberof MessageIn
     */
    'message_type'?: MessageType;
    /**
     * The message attributes
     * @type {any}
     * @memberof MessageIn
     */
    'attributes'?: any;
    /**
     * Integration link.
     * @type {string}
     * @memberof MessageIn
     */
    'integration': string;
}
/**
 * A Message object.
 * @export
 * @interface MessageOut
 */
export interface MessageOut {
    /**
     *
     * @type {string}
     * @memberof MessageOut
     */
    'message': string;
    /**
     *
     * @type {MessageType}
     * @memberof MessageOut
     */
    'message_type'?: MessageType;
    /**
     * The message attributes
     * @type {any}
     * @memberof MessageOut
     */
    'attributes'?: any;
    /**
     * Integration link.
     * @type {string}
     * @memberof MessageOut
     */
    'integration': string;
    /**
     *
     * @type {number}
     * @memberof MessageOut
     */
    'id'?: number;
    /**
     * Creation date
     * @type {string}
     * @memberof MessageOut
     */
    'created'?: string;
}
/**
 * Message type.
 * @export
 * @enum {string}
 */
export declare enum MessageType {
    Error = "ERROR",
    DatasetCreated = "DATASET_CREATED"
}
/**
 * A System Database Usage Object.
 * @export
 * @interface MetricMonitoring
 */
export interface MetricMonitoring {
    /**
     * Color of the alert when the rule is in violation.
     * @type {AlertColor}
     * @memberof MetricMonitoring
     */
    'alert_color': AlertColor;
    /**
     * Last time that the monitoring was enabled.
     * @type {string}
     * @memberof MetricMonitoring
     */
    'enabled': string;
    /**
     * The rule of which determines state of violation.
     * @type {MonitoringRuleSet}
     * @memberof MetricMonitoring
     */
    'rule': MonitoringRuleSet;
}
/**
 * Metrics name enum.
 * @export
 * @enum {string}
 */
export declare enum Metrics {
    SearchCreate = "semantic_search.create",
    SearchClusterRead = "semantic_search_cluster.read"
}
/**
 * Credentials for a Mode integration without the token and secret.
 * @export
 * @interface ModeCredentials
 */
export interface ModeCredentials {
    /**
     * Integration dashboard
     * @type {string}
     * @memberof ModeCredentials
     */
    'dashboard': string;
}
/**
 * Input credentials for a Mode integration.
 * @export
 * @interface ModeCredentialsIn
 */
export interface ModeCredentialsIn {
    /**
     * Integration dashboard
     * @type {string}
     * @memberof ModeCredentialsIn
     */
    'dashboard': string;
    /**
     * Integration api token.
     * @type {string}
     * @memberof ModeCredentialsIn
     */
    'api_token': string;
    /**
     * Integration api secret.
     * @type {string}
     * @memberof ModeCredentialsIn
     */
    'api_secret': string;
}
/**
 * Values available for filtering models.
 * @export
 * @interface ModelFilters
 */
export interface ModelFilters {
    /**
     * Available performance types for filtering models and their counts. Inner arrays will be of length 2. The first value will be the score type and thesecond the count.
     * @type {Array<Array<number | ModelScoreEnum>>}
     * @memberof ModelFilters
     */
    'performance'?: Array<Array<number | ModelScoreEnum>>;
}
/**
 * A real-world machine learning or statistical model input data.
 * @export
 * @interface ModelIn
 */
export interface ModelIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ModelIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ModelIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof ModelIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ModelIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ModelIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Model algorithm.
     * @type {string}
     * @memberof ModelIn
     */
    'algorithm'?: string;
    /**
     * Standardized ModelDB algorithm id.
     * @type {number}
     * @memberof ModelIn
     */
    'standardized_algorithm_id': number;
    /**
     * Number of observations or nobs..
     * @type {number}
     * @memberof ModelIn
     */
    'number_of_observations'?: number;
    /**
     * Model\'s hyper parameters.
     * @type {ModelParams}
     * @memberof ModelIn
     */
    'model_params'?: ModelParams;
    /**
     * Model label.
     * @type {string}
     * @memberof ModelIn
     */
    'name'?: string;
    /**
     * Description of the model.
     * @type {string}
     * @memberof ModelIn
     */
    'description'?: string;
    /**
     * Statistical controls of the model.
     * @type {Array<string>}
     * @memberof ModelIn
     */
    'statistical_controls'?: Array<string>;
    /**
     * Location of the source code.
     * @type {string}
     * @memberof ModelIn
     */
    'source'?: string;
    /**
     * System ID of training dataset.
     * @type {string}
     * @memberof ModelIn
     */
    'training_dataset_id': string;
    /**
     * System Evaluator specific field.
     * @type {string}
     * @memberof ModelIn
     */
    'stub_id'?: string;
    /**
     * The performance of the model.
     * @type {Array<ModelPerformanceIn>}
     * @memberof ModelIn
     */
    'performance'?: Array<ModelPerformanceIn>;
    /**
     * System ID of target of the model.
     * @type {string}
     * @memberof ModelIn
     */
    'target_feature_id'?: string;
    /**
     * Model\'s deployment information.
     * @type {Deployment}
     * @memberof ModelIn
     */
    'deployment'?: Deployment;
    /**
     * Model\'s module and class
     * @type {string}
     * @memberof ModelIn
     */
    'library'?: string;
}
/**
 * Model resource links.
 * @export
 * @interface ModelLinks
 */
export interface ModelLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof ModelLinks
     */
    'self': string;
    /**
     * Link to model\'s target feature.
     * @type {string}
     * @memberof ModelLinks
     */
    'target_feature'?: string;
    /**
     * Link to model\'s training dataset.
     * @type {string}
     * @memberof ModelLinks
     */
    'training_dataset'?: string;
    /**
     * Link to model\'s study.
     * @type {string}
     * @memberof ModelLinks
     */
    'study'?: string;
}
/**
 * Model output model.
 * @export
 * @interface ModelOut
 */
export interface ModelOut {
    /**
     *
     * @type {string}
     * @memberof ModelOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof ModelOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof ModelOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof ModelOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof ModelOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof ModelOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof ModelOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ModelOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof ModelOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof ModelOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ModelOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof ModelOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Model algorithm.
     * @type {string}
     * @memberof ModelOut
     */
    'algorithm'?: string;
    /**
     * Standardized ModelDB algorithm id.
     * @type {number}
     * @memberof ModelOut
     */
    'standardized_algorithm_id': number;
    /**
     * Number of observations or nobs..
     * @type {number}
     * @memberof ModelOut
     */
    'number_of_observations'?: number;
    /**
     * Model\'s hyper parameters.
     * @type {ModelParams}
     * @memberof ModelOut
     */
    'model_params'?: ModelParams;
    /**
     * Model label.
     * @type {string}
     * @memberof ModelOut
     */
    'name'?: string;
    /**
     * Description of the model.
     * @type {string}
     * @memberof ModelOut
     */
    'description'?: string;
    /**
     * Statistical controls of the model.
     * @type {Array<string>}
     * @memberof ModelOut
     */
    'statistical_controls'?: Array<string>;
    /**
     * Location of the source code.
     * @type {string}
     * @memberof ModelOut
     */
    'source'?: string;
    /**
     * System ID of training dataset.
     * @type {string}
     * @memberof ModelOut
     */
    'training_dataset_id': string;
    /**
     * System Evaluator specific field.
     * @type {string}
     * @memberof ModelOut
     */
    'stub_id'?: string;
    /**
     * The performance of the model.
     * @type {Array<ModelPerformanceOut>}
     * @memberof ModelOut
     */
    'performance'?: Array<ModelPerformanceOut>;
    /**
     * System ID of target of the model.
     * @type {string}
     * @memberof ModelOut
     */
    'target_feature_id'?: string;
    /**
     * Model\'s deployment information.
     * @type {Deployment}
     * @memberof ModelOut
     */
    'deployment'?: Deployment;
    /**
     * Model\'s module and class
     * @type {string}
     * @memberof ModelOut
     */
    'library'?: string;
    /**
     * Collection of links to related resources.
     * @type {ModelLinks}
     * @memberof ModelOut
     */
    '_links'?: ModelLinks;
    /**
     * The experiment/project id containing the model.
     * @type {string}
     * @memberof ModelOut
     */
    'experiment_id'?: string;
}
/**
 * Model pagination out.
 * @export
 * @interface ModelPaginationOut
 */
export interface ModelPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof ModelPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<ModelOut>}
     * @memberof ModelPaginationOut
     */
    'items'?: Array<ModelOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof ModelPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof ModelPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof ModelPaginationOut
     */
    '_sorts'?: Array<string>;
    /**
     * Collection of filter values that can be applied.
     * @type {ModelFilters}
     * @memberof ModelPaginationOut
     */
    '_filters'?: ModelFilters;
}
/**
 * Model params model.
 * @export
 * @interface ModelParams
 */
export interface ModelParams {
    /**
     * Model\'s hyper parameters. E.g. for a linear regression, `normalize`, `fit_intercept`, etc.
     * @type {object}
     * @memberof ModelParams
     */
    'params'?: object;
}
/**
 * Base model performance input class.
 * @export
 * @interface ModelPerformanceBaseIn
 */
export interface ModelPerformanceBaseIn {
    /**
     * Who generated this model performance.
     * @type {ValidValueSource}
     * @memberof ModelPerformanceBaseIn
     */
    'generated_by'?: ValidValueSource;
    /**
     * Standard error of the Performance Value.
     * @type {number}
     * @memberof ModelPerformanceBaseIn
     */
    'standard_error'?: number;
    /**
     * The test dataset of this performance.
     * @type {TestDataset}
     * @memberof ModelPerformanceBaseIn
     */
    'test_dataset'?: TestDataset;
    /**
     *
     * @type {ModelScoreEnum}
     * @memberof ModelPerformanceBaseIn
     */
    'score_type'?: ModelScoreEnum;
    /**
     * Model performance value.
     * @type {number}
     * @memberof ModelPerformanceBaseIn
     */
    'value'?: number;
    /**
     * Complex model performance value.
     * @type {Array<any>}
     * @memberof ModelPerformanceBaseIn
     */
    'complex_value'?: Array<any>;
}
/**
 * Model performance input.
 * @export
 * @interface ModelPerformanceIn
 */
export interface ModelPerformanceIn {
    /**
     * Who generated this model performance.
     * @type {ValidValueSource}
     * @memberof ModelPerformanceIn
     */
    'generated_by'?: ValidValueSource;
    /**
     * Standard error of the Performance Value.
     * @type {number}
     * @memberof ModelPerformanceIn
     */
    'standard_error'?: number;
    /**
     * The test dataset of this performance.
     * @type {TestDataset}
     * @memberof ModelPerformanceIn
     */
    'test_dataset'?: TestDataset;
    /**
     * Model performance score type.
     * @type {ValidModelScoreEnum}
     * @memberof ModelPerformanceIn
     */
    'score_type': ValidModelScoreEnum;
    /**
     * Model performance value.
     * @type {number}
     * @memberof ModelPerformanceIn
     */
    'value'?: number;
    /**
     * Complex model performance value.
     * @type {Array<any>}
     * @memberof ModelPerformanceIn
     */
    'complex_value'?: Array<any>;
    /**
     * History of this model performance value.
     * @type {{ [key: string]: ModelPerformanceBaseIn; }}
     * @memberof ModelPerformanceIn
     */
    'history'?: {
        [key: string]: ModelPerformanceBaseIn;
    };
}
/**
 * Model performance input.
 * @export
 * @interface ModelPerformanceOut
 */
export interface ModelPerformanceOut {
    /**
     * Who generated this model performance.
     * @type {ValidValueSource}
     * @memberof ModelPerformanceOut
     */
    'generated_by'?: ValidValueSource;
    /**
     * Standard error of the Performance Value.
     * @type {number}
     * @memberof ModelPerformanceOut
     */
    'standard_error'?: number;
    /**
     * The test dataset of this performance.
     * @type {TestDataset}
     * @memberof ModelPerformanceOut
     */
    'test_dataset'?: TestDataset;
    /**
     * Model performance score type.
     * @type {ValidModelScoreEnum}
     * @memberof ModelPerformanceOut
     */
    'score_type': ValidModelScoreEnum;
    /**
     * Model performance value.
     * @type {number}
     * @memberof ModelPerformanceOut
     */
    'value'?: number;
    /**
     * Complex model performance value.
     * @type {Array<any>}
     * @memberof ModelPerformanceOut
     */
    'complex_value'?: Array<any>;
    /**
     * History of this model performance value.
     * @type {{ [key: string]: ModelPerformanceBaseIn; }}
     * @memberof ModelPerformanceOut
     */
    'history'?: {
        [key: string]: ModelPerformanceBaseIn;
    };
    /**
     *
     * @type {boolean}
     * @memberof ModelPerformanceOut
     */
    'primary_performance'?: boolean;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum ModelScoreEnum {
    AccuracyScore = "accuracy_score",
    AveragePrecisionScore = "average_precision_score",
    BalancedAccuracyScore = "balanced_accuracy_score",
    BrierScoreLoss = "brier_score_loss",
    CohenKappaScore = "cohen_kappa_score",
    F1Score = "f1_score",
    HammingLoss = "hamming_loss",
    HingeLoss = "hinge_loss",
    JaccardScore = "jaccard_score",
    LogLoss = "log_loss",
    MatthewsCorrCoef = "matthews_corr_coef",
    PrecisionScore = "precision_score",
    RecallScore = "recall_score",
    RocAucScore = "roc_auc_score",
    ZeroOneLoss = "zero_one_loss",
    ExplainedVarianceScore = "explained_variance_score",
    MaxError = "max_error",
    MeanAbsoluteError = "mean_absolute_error",
    MeanAbsolutePercentageError = "mean_absolute_percentage_error",
    MeanSquaredError = "mean_squared_error",
    MeanSquaredLogError = "mean_squared_log_error",
    MedianAbsoluteError = "median_absolute_error",
    R2Score = "r2_score",
    CoverageError = "coverage_error",
    LabelRankingAveragePrecisionScore = "label_ranking_average_precision_score",
    LabelRankingLoss = "label_ranking_loss",
    AdjustedR2Score = "adjusted_r2_score",
    MutualInformationScore = "mutual_information_score",
    AdjMutualInformationScore = "adj_mutual_information_score",
    NormalizedMutualInformationScore = "normalized_mutual_information_score",
    AdjRandScore = "adj_rand_score",
    CompletenessScore = "completeness_score",
    FowlkesMallowsScore = "fowlkes_mallows_score",
    HomogeneityScore = "homogeneity_score",
    VMeasureScore = "v_measure_score",
    NegMeanAbsoluteError = "neg_mean_absolute_error",
    NegMeanSquaredError = "neg_mean_squared_error",
    RootMeanSquaredError = "root_mean_squared_error",
    NegRootMeanSquaredError = "neg_root_mean_squared_error",
    RootMeanSquaredLogError = "root_mean_squared_log_error",
    NegMedianAbsoluteError = "neg_median_absolute_error",
    CosineProximity = "cosine_proximity",
    KullbackLeiblerDivergence = "kullback_leibler_divergence",
    PoissonMetric = "poisson_metric",
    MulticlassLogLoss = "multiclass_log_loss",
    NormalizedDiscountedCumulativeGain = "normalized_discounted_cumulative_gain",
    GammaDeviance = "gamma_deviance",
    HuberMetric = "huber_metric",
    FBetaScore = "f_beta_score",
    EuclideanDistance = "euclidean_distance",
    HaversineDistance = "haversine_distance",
    MeanSquaredPredictioneRror = "mean_squared_predictione_rror",
    PseudoR2Mcfadden = "pseudo_r2_mcfadden",
    AdjustedPseudoR2Mcfadden = "adjusted_pseudo_r2_mcfadden",
    PseudoR2Nagelkerke = "pseudo_r2_nagelkerke",
    PseudoR2CoxSnell = "pseudo_r2_cox_snell",
    PseudoR2Effron = "pseudo_r2_effron",
    Bic = "bic",
    Aic = "aic",
    CorrelationActualForecast = "correlation_actual_forecast",
    ForecastVsActual = "forecast_vs_actual",
    MeanSquaredPercentageError = "mean_squared_percentage_error",
    ConfusionMatrix = "confusion_matrix",
    MulticlassConfusionMatrix = "multiclass_confusion_matrix",
    RocCurve = "roc_curve",
    Invalid = "invalid"
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum ModelSortEnum {
    TargetName = "target_name",
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at"
}
/**
 * Field options for monitoring a metric.
 * @export
 * @enum {string}
 */
export declare enum MonitoringField {
    Value = "VALUE",
    Change = "CHANGE",
    PctChange = "PCT_CHANGE",
    AbsPctChange = "ABS_PCT_CHANGE",
    AbsChange = "ABS_CHANGE"
}
/**
 * Monitoring comparison operators.
 * @export
 * @enum {string}
 */
export declare enum MonitoringOperation {
    Gt = "GT",
    Ge = "GE",
    Lt = "LT",
    Le = "LE",
    Eq = "EQ",
    Ne = "NE"
}
/**
 * A ruleset for metric modeling comparisons.
 * @export
 * @interface MonitoringRuleSet
 */
export interface MonitoringRuleSet {
    /**
     * The field to compare
     * @type {MonitoringField}
     * @memberof MonitoringRuleSet
     */
    'field': MonitoringField;
    /**
     * The operator to compare with
     * @type {MonitoringOperation}
     * @memberof MonitoringRuleSet
     */
    'operator': MonitoringOperation;
    /**
     * The value to compare with
     * @type {number}
     * @memberof MonitoringRuleSet
     */
    'value': number;
}
/**
 * Node group model.  # noqa: E501
 * @export
 * @interface NodeGroup
 */
export interface NodeGroup {
    /**
     *
     * @type {Array<NodeGroupItem>}
     * @memberof NodeGroup
     */
    'items': Array<NodeGroupItem>;
    /**
     *
     * @type {number}
     * @memberof NodeGroup
     */
    'total': number;
}
/**
 * Supported Node Object model.  # noqa: E501
 * @export
 * @interface NodeGroupItem
 */
export interface NodeGroupItem {
    /**
     *
     * @type {Array<SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject>}
     * @memberof NodeGroupItem
     */
    'links': Array<SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject>;
    /**
     *
     * @type {SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject}
     * @memberof NodeGroupItem
     */
    'node': SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject;
}
/**
 * Null hypothesis input model.
 * @export
 * @interface NullHypothesisIn
 */
export interface NullHypothesisIn {
    /**
     * Statistical test type.
     * @type {ValidStatisticalTestType}
     * @memberof NullHypothesisIn
     */
    'test_type'?: ValidStatisticalTestType;
    /**
     * Significance level used for the test
     * @type {ValidSignificanceLevel}
     * @memberof NullHypothesisIn
     */
    'level'?: ValidSignificanceLevel;
    /**
     * Null hypothesis value.
     * @type {number}
     * @memberof NullHypothesisIn
     */
    'h0_value'?: number;
    /**
     * p-value of the test, used with significance_level to determine significance.
     * @type {number}
     * @memberof NullHypothesisIn
     */
    'p'?: number;
    /**
     * Manual flag to directly indicate test is significant without using p-value.
     * @type {boolean}
     * @memberof NullHypothesisIn
     */
    'is_significant'?: boolean;
}
/**
 * Null hypothesis output model.
 * @export
 * @interface NullHypothesisOut
 */
export interface NullHypothesisOut {
    /**
     * Statistical test type.
     * @type {StatisticalTestType}
     * @memberof NullHypothesisOut
     */
    'test_type'?: StatisticalTestType;
    /**
     * Significance level used for the test
     * @type {SignificanceLevel}
     * @memberof NullHypothesisOut
     */
    'level'?: SignificanceLevel;
    /**
     * Null hypothesis value.
     * @type {number}
     * @memberof NullHypothesisOut
     */
    'h0_value'?: number;
    /**
     * p-value of the test, used with significance_level to determine significance.
     * @type {number}
     * @memberof NullHypothesisOut
     */
    'p'?: number;
    /**
     * Manual flag to directly indicate test is significant without using p-value.
     * @type {boolean}
     * @memberof NullHypothesisOut
     */
    'is_significant'?: boolean;
}
/**
 * Represent a structured statistics for a numerical feature type.
 * @export
 * @interface NumericalFeatureStatistics
 */
export interface NumericalFeatureStatistics {
    /**
     * The value below which a given percentage of observations in a group of observations falls.
     * @type {{ [key: string]: number; }}
     * @memberof NumericalFeatureStatistics
     */
    'percentiles'?: {
        [key: string]: number;
    };
    /**
     * Minimum value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'min'?: number;
    /**
     * Maximum value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'max'?: number;
    /**
     * Median value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'median'?: number;
    /**
     * Mean value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'mean'?: number;
    /**
     * Standard deviation of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'std'?: number;
    /**
     * Interquartile range of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'iqr'?: number;
    /**
     * Kurtosis of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'kurtosis'?: number;
    /**
     * Skewness of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'skewness'?: number;
    /**
     * Percentage of missing values of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatistics
     */
    'percent_missing'?: number;
    /**
     * Histogram of the feature
     * @type {Histogram}
     * @memberof NumericalFeatureStatistics
     */
    'histogram'?: Histogram;
    /**
     * Historical stats in form timestamp to value.
     * @type {{ [key: string]: NumericalFeatureStatisticsSimpleBase; }}
     * @memberof NumericalFeatureStatistics
     */
    'history'?: {
        [key: string]: NumericalFeatureStatisticsSimpleBase;
    };
}
/**
 * Represent a structured statistics for a numerical feature type.  These fields will be included in the stats history.
 * @export
 * @interface NumericalFeatureStatisticsSimpleBase
 */
export interface NumericalFeatureStatisticsSimpleBase {
    /**
     * The value below which a given percentage of observations in a group of observations falls.
     * @type {{ [key: string]: number; }}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'percentiles'?: {
        [key: string]: number;
    };
    /**
     * Minimum value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'min'?: number;
    /**
     * Maximum value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'max'?: number;
    /**
     * Median value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'median'?: number;
    /**
     * Mean value of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'mean'?: number;
    /**
     * Standard deviation of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'std'?: number;
    /**
     * Interquartile range of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'iqr'?: number;
    /**
     * Kurtosis of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'kurtosis'?: number;
    /**
     * Skewness of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'skewness'?: number;
    /**
     * Percentage of missing values of the feature.
     * @type {number}
     * @memberof NumericalFeatureStatisticsSimpleBase
     */
    'percent_missing'?: number;
}
/**
 * Ordering direction enum.
 * @export
 * @enum {string}
 */
export declare enum Ordering {
    Asc = "asc",
    Desc = "desc"
}
/**
 * Partial dependence plot input.
 * @export
 * @interface PartialDependencePlotIn
 */
export interface PartialDependencePlotIn {
    /**
     * The partial dependence values or x-axis of PDP.
     * @type {Array<number>}
     * @memberof PartialDependencePlotIn
     */
    'pdp_value': Array<number>;
    /**
     * The partial dependence effect or y-axis of PDP.
     * @type {Array<number>}
     * @memberof PartialDependencePlotIn
     */
    'pdp_effect': Array<number>;
    /**
     * Who generated this object.
     * @type {ValidValueSource}
     * @memberof PartialDependencePlotIn
     */
    'generated_by'?: ValidValueSource;
}
/**
 * Patch a `Variable` with provided data.
 * @export
 * @interface PatchConceptOp
 */
export interface PatchConceptOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof PatchConceptOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof PatchConceptOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof PatchConceptOp
     */
    'op': PatchOp;
}
/**
 * Patch a `Dataset` with provided data.
 * @export
 * @interface PatchDatasetOp
 */
export interface PatchDatasetOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof PatchDatasetOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof PatchDatasetOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof PatchDatasetOp
     */
    'op': PatchOp;
}
/**
 * Patch a `Feature` with provided data.
 * @export
 * @interface PatchFeatureOp
 */
export interface PatchFeatureOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof PatchFeatureOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof PatchFeatureOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof PatchFeatureOp
     */
    'op': PatchOp;
}
/**
 * Patch a `Model` with provided data.
 * @export
 * @interface PatchModelOp
 */
export interface PatchModelOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof PatchModelOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof PatchModelOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof PatchModelOp
     */
    'op': PatchOp;
}
/**
 * Enum for PATCH operations.
 * @export
 * @enum {string}
 */
export declare enum PatchOp {
    Update = "update",
    Append = "append",
    Delete = "delete"
}
/**
 * Patch a `Study` with provided data.
 * @export
 * @interface PatchStudyOp
 */
export interface PatchStudyOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof PatchStudyOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof PatchStudyOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof PatchStudyOp
     */
    'op': PatchOp;
}
/**
 * Patch a `Variable` with provided data.
 * @export
 * @interface PatchVariableOp
 */
export interface PatchVariableOp {
    /**
     * Name of field in resource to modify.
     * @type {string}
     * @memberof PatchVariableOp
     */
    'field': string;
    /**
     * Value to set resource field if not deleting.
     * @type {any}
     * @memberof PatchVariableOp
     */
    'value'?: any;
    /**
     * Operation to perform on resource field.
     * @type {PatchOp}
     * @memberof PatchVariableOp
     */
    'op': PatchOp;
}
/**
 * Polling status enum.
 * @export
 * @enum {string}
 */
export declare enum PollingStatus {
    NotExists = "not_exists",
    Submitted = "submitted",
    Running = "running",
    Success = "success",
    Failed = "failed",
    FailedNoCitations = "failed_no_citations"
}
/**
 * Publication author.
 * @export
 * @interface PublicationAuthor
 */
export interface PublicationAuthor {
    /**
     * Name of author.
     * @type {string}
     * @memberof PublicationAuthor
     */
    'name': string;
    /**
     * ORCID of author.
     * @type {string}
     * @memberof PublicationAuthor
     */
    'orcid'?: string;
}
/**
 * Publication info model.
 * @export
 * @interface PublicationInfo
 */
export interface PublicationInfo {
    /**
     * Date of publication.
     * @type {string}
     * @memberof PublicationInfo
     */
    'date_published'?: string;
    /**
     * Publication name (journal, etc).
     * @type {string}
     * @memberof PublicationInfo
     */
    'publication'?: string;
    /**
     * Ordered authors of publication.
     * @type {Array<PublicationAuthor>}
     * @memberof PublicationInfo
     */
    'ordered_authors'?: Array<PublicationAuthor>;
}
/**
 *
 * @export
 * @interface QueryParserApiModelsPydanticGrounding
 */
export interface QueryParserApiModelsPydanticGrounding {
    /**
     *
     * @type {string}
     * @memberof QueryParserApiModelsPydanticGrounding
     */
    'name': string;
    /**
     *
     * @type {string}
     * @memberof QueryParserApiModelsPydanticGrounding
     */
    'namespace': string;
    /**
     *
     * @type {string}
     * @memberof QueryParserApiModelsPydanticGrounding
     */
    'id': string;
    /**
     *
     * @type {number}
     * @memberof QueryParserApiModelsPydanticGrounding
     */
    'score': number;
}
/**
 * Statistical finding.
 * @export
 * @interface RawFinding
 */
export interface RawFinding {
    /**
     *
     * @type {string}
     * @memberof RawFinding
     */
    'association_id': string;
    /**
     *
     * @type {string}
     * @memberof RawFinding
     */
    'variable_1': string;
    /**
     *
     * @type {string}
     * @memberof RawFinding
     */
    'variable_2': string;
    /**
     *
     * @type {boolean}
     * @memberof RawFinding
     */
    'bidirectional': boolean;
    /**
     *
     * @type {FeatureContributionMethod}
     * @memberof RawFinding
     */
    'feature_contribution_method': FeatureContributionMethod;
    /**
     *
     * @type {boolean}
     * @memberof RawFinding
     */
    'is_ratio': boolean;
    /**
     *
     * @type {number}
     * @memberof RawFinding
     */
    'value': number;
    /**
     *
     * @type {ConfidenceIntervalOut}
     * @memberof RawFinding
     */
    'ci'?: ConfidenceIntervalOut;
    /**
     *
     * @type {number}
     * @memberof RawFinding
     */
    'p_value'?: number;
    /**
     *
     * @type {Array<string>}
     * @memberof RawFinding
     */
    'flags'?: Array<string>;
}
/**
 * Credentials for a Redshift integration without password.
 * @export
 * @interface RedshiftCredentials
 */
export interface RedshiftCredentials {
    /**
     * Integration database name.
     * @type {string}
     * @memberof RedshiftCredentials
     */
    'db_name': string;
    /**
     * Integration user name.
     * @type {string}
     * @memberof RedshiftCredentials
     */
    'db_user': string;
    /**
     * Integration host (Required for Redshift).
     * @type {string}
     * @memberof RedshiftCredentials
     */
    'db_host': string;
    /**
     * Integration port (Required for Redshift).
     * @type {number}
     * @memberof RedshiftCredentials
     */
    'db_port': number;
}
/**
 * Input credentials for a Redshift integration.
 * @export
 * @interface RedshiftCredentialsIn
 */
export interface RedshiftCredentialsIn {
    /**
     * Integration database name.
     * @type {string}
     * @memberof RedshiftCredentialsIn
     */
    'db_name': string;
    /**
     * Integration user name.
     * @type {string}
     * @memberof RedshiftCredentialsIn
     */
    'db_user': string;
    /**
     * Integration host (Required for Redshift).
     * @type {string}
     * @memberof RedshiftCredentialsIn
     */
    'db_host': string;
    /**
     * Integration port (Required for Redshift).
     * @type {number}
     * @memberof RedshiftCredentialsIn
     */
    'db_port': number;
    /**
     * Integration password.
     * @type {string}
     * @memberof RedshiftCredentialsIn
     */
    'db_password': string;
}
/**
 * A related filter value object model.
 * @export
 * @interface RelatedFilterValue
 */
export interface RelatedFilterValue {
    /**
     * Retrieval status.
     * @type {FilterValueType}
     * @memberof RelatedFilterValue
     */
    'filter_type'?: FilterValueType;
    /**
     * Filter value.
     * @type {string}
     * @memberof RelatedFilterValue
     */
    'value'?: string;
    /**
     * User who filtered by this value.
     * @type {string}
     * @memberof RelatedFilterValue
     */
    'added_by'?: string;
    /**
     * Time this value was added.
     * @type {string}
     * @memberof RelatedFilterValue
     */
    'added_on'?: string;
    /**
     * Feature.
     * @type {string}
     * @memberof RelatedFilterValue
     */
    'feature_id'?: string;
}
/**
 * Model to represent directionality of an Association.
 * @export
 * @interface RelationshipDirection
 */
export interface RelationshipDirection {
    /**
     * Relationship value.
     * @type {number}
     * @memberof RelationshipDirection
     */
    'relationship_value': number;
    /**
     * Direction of the association.
     * @type {ValidRelationshipDirectionEnum}
     * @memberof RelationshipDirection
     */
    'level': ValidRelationshipDirectionEnum;
    /**
     * Type of relationship.
     * @type {ValidCalibratedRelationshipType}
     * @memberof RelationshipDirection
     */
    'relationship_type': ValidCalibratedRelationshipType;
}
/**
 * Relationship resource links.
 * @export
 * @interface RelationshipLinks
 */
export interface RelationshipLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof RelationshipLinks
     */
    'self': string;
    /**
     * Link to Relationships\'s variables.
     * @type {string}
     * @memberof RelationshipLinks
     */
    'variables'?: string;
    /**
     * Link to Relationships\'s concepts.
     * @type {string}
     * @memberof RelationshipLinks
     */
    'topics'?: string;
}
/**
 * Relationship output model.
 * @export
 * @interface RelationshipOut
 */
export interface RelationshipOut {
    /**
     * The concepts in this relationship
     * @type {Array<string>}
     * @memberof RelationshipOut
     */
    'concept_ids'?: Array<string>;
    /**
     * Collection of links to related resources.
     * @type {RelationshipLinks}
     * @memberof RelationshipOut
     */
    '_links'?: RelationshipLinks;
}
/**
 * Relationship pagination out.
 * @export
 * @interface RelationshipPaginationOut
 */
export interface RelationshipPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof RelationshipPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<RelationshipOut>}
     * @memberof RelationshipPaginationOut
     */
    'items'?: Array<RelationshipOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof RelationshipPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof RelationshipPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof RelationshipPaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * Model to represent reproducibility of an Association.
 * @export
 * @interface RelationshipReproducibility
 */
export interface RelationshipReproducibility {
    /**
     * Type of study.
     * @type {StudyTypeEnum}
     * @memberof RelationshipReproducibility
     */
    'study_type': StudyTypeEnum;
    /**
     * Reproducibility of the association.
     * @type {ValidReproducibilityEnum}
     * @memberof RelationshipReproducibility
     */
    'level': ValidReproducibilityEnum;
    /**
     * Has experiment description.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_experiment_description': boolean;
    /**
     * Has experiment source.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_experiment_source': boolean;
    /**
     * Has experiment doi.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_experiment_doi': boolean;
    /**
     * Has experiment control.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_experiment_control': boolean;
    /**
     * Has model hyperparams.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_model_hyperparams': boolean;
    /**
     * Has training dataset url.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_training_ds_url': boolean;
    /**
     * Has training dataset description url.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_training_ds_desc_url': boolean;
    /**
     * Has source dataset.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_source_ds': boolean;
    /**
     * Has pdp.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_pdp': boolean;
    /**
     * Has significance.
     * @type {boolean}
     * @memberof RelationshipReproducibility
     */
    'has_significance': boolean;
}
/**
 * Model to represent strength of an Association.
 * @export
 * @interface RelationshipStrength
 */
export interface RelationshipStrength {
    /**
     * Strength of the association.
     * @type {ValidRelationshipStrengthEnum}
     * @memberof RelationshipStrength
     */
    'level': ValidRelationshipStrengthEnum;
    /**
     * Relationship value.
     * @type {number}
     * @memberof RelationshipStrength
     */
    'relationship_value': number;
    /**
     * Type of relationship.
     * @type {ValidCalibratedRelationshipType}
     * @memberof RelationshipStrength
     */
    'relationship_type': ValidCalibratedRelationshipType;
    /**
     * Relationship model performance value.
     * @type {number}
     * @memberof RelationshipStrength
     */
    'relationship_model_performance'?: number;
    /**
     * Max values map.
     * @type {{ [key: string]: CalibratorBucketParams; }}
     * @memberof RelationshipStrength
     */
    'all_max_values': {
        [key: string]: CalibratorBucketParams;
    };
}
/**
 * API resource action enum.
 * @export
 * @enum {string}
 */
export declare enum ResourceAction {
    Create = "create",
    View = "view",
    Edit = "edit",
    Delete = "delete"
}
/**
 * A System Resource Flag Output Object.
 * @export
 * @interface ResourceFlag
 */
export interface ResourceFlag {
    /**
     * Given reasons for the flag.
     * @type {Array<string>}
     * @memberof ResourceFlag
     */
    'reasons': Array<string>;
    /**
     * Additional metadata for the flag.
     * @type {object}
     * @memberof ResourceFlag
     */
    'meta'?: object;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof ResourceFlag
     */
    'added_on': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof ResourceFlag
     */
    'added_by': string;
}
/**
 * A System Resource Flag Input Object.
 * @export
 * @interface ResourceFlagIn
 */
export interface ResourceFlagIn {
    /**
     * Given reasons for the flag.
     * @type {Array<string>}
     * @memberof ResourceFlagIn
     */
    'reasons': Array<string>;
    /**
     * Additional metadata for the flag.
     * @type {object}
     * @memberof ResourceFlagIn
     */
    'meta'?: object;
}
/**
 * Table retrieval status.
 * @export
 * @enum {string}
 */
export declare enum RetrievalStatus {
    Pending = "pending",
    Success = "success",
    Failure = "failure"
}
/**
 * Schema for scored cluster.
 * @export
 * @interface ScoredCluster
 */
export interface ScoredCluster {
    /**
     *
     * @type {number}
     * @memberof ScoredCluster
     */
    'sort_id': number;
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'display_summary': string;
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'prompt_summary': string;
    /**
     *
     * @type {Array<string>}
     * @memberof ScoredCluster
     */
    'cluster_labels': Array<string>;
    /**
     *
     * @type {Array<Array<AppSchemaGroundingsGrounding>>}
     * @memberof ScoredCluster
     */
    'label_groundings'?: Array<Array<AppSchemaGroundingsGrounding>>;
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'stat_descriptor'?: string;
    /**
     *
     * @type {number}
     * @memberof ScoredCluster
     */
    'score': number;
    /**
     *
     * @type {number}
     * @memberof ScoredCluster
     */
    'original_score'?: number;
    /**
     *
     * @type {number}
     * @memberof ScoredCluster
     */
    'sort_bucket'?: number;
    /**
     *
     * @type {{ [key: string]: string; }}
     * @memberof ScoredCluster
     */
    'search_term_grounding_namespaces'?: {
        [key: string]: string;
    };
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'reference_agent_position'?: string;
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'other_agent_category'?: string;
    /**
     *
     * @type {string}
     * @memberof ScoredCluster
     */
    'modification_type'?: string;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum SemanticSearchType {
    RiskFactorOf = "risk_factor_of",
    Outcome = "outcome",
    Relationship = "relationship",
    Relationship2d = "relationship_2d",
    SingleVariable2d = "single_variable_2d"
}
/**
 * Single topic graph payload.
 * @export
 * @interface SemanticTopicGraphIn
 */
export interface SemanticTopicGraphIn {
    /**
     * Topic
     * @type {string}
     * @memberof SemanticTopicGraphIn
     */
    'topic'?: string;
    /**
     * List of topic relationship pairs. Two topic system ids ordered by direction.
     * @type {Array<Array<string>>}
     * @memberof SemanticTopicGraphIn
     */
    'topic_relationship_ids'?: Array<Array<string>>;
    /**
     * Direction of graph in relation to topic.
     * @type {GraphSearchDirection}
     * @memberof SemanticTopicGraphIn
     */
    'direction'?: GraphSearchDirection;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum SignificanceLevel {
    NinetyFive = "ninety_five",
    NinetyNine = "ninety_nine",
    NinetyNinePointNine = "ninety_nine_point_nine",
    Invalid = "invalid"
}
/**
 * Statistical significance input information.
 * @export
 * @interface SignificanceValueIn
 */
export interface SignificanceValueIn {
    /**
     * Confidence interval data.
     * @type {ConfidenceIntervalIn}
     * @memberof SignificanceValueIn
     */
    'confidence_interval'?: ConfidenceIntervalIn;
    /**
     * Statistical test null hypothesis data.
     * @type {NullHypothesisIn}
     * @memberof SignificanceValueIn
     */
    'null_hypothesis'?: NullHypothesisIn;
    /**
     * Who generated this object.
     * @type {ValidValueSource}
     * @memberof SignificanceValueIn
     */
    'generated_by'?: ValidValueSource;
}
/**
 * Statistical significance input information.
 * @export
 * @interface SignificanceValueOut
 */
export interface SignificanceValueOut {
    /**
     * Confidence interval data.
     * @type {ConfidenceIntervalOut}
     * @memberof SignificanceValueOut
     */
    'confidence_interval'?: ConfidenceIntervalOut;
    /**
     * Statistical test null hypothesis data.
     * @type {NullHypothesisOut}
     * @memberof SignificanceValueOut
     */
    'null_hypothesis'?: NullHypothesisOut;
    /**
     * Who generated this object.
     * @type {ValueSourceEnum}
     * @memberof SignificanceValueOut
     */
    'generated_by'?: ValueSourceEnum;
}
/**
 * Credentials for a Snowflake integration without password.
 * @export
 * @interface SnowflakeCredentials
 */
export interface SnowflakeCredentials {
    /**
     * Integration database name.
     * @type {string}
     * @memberof SnowflakeCredentials
     */
    'db_name': string;
    /**
     * Integration user name.
     * @type {string}
     * @memberof SnowflakeCredentials
     */
    'db_user': string;
    /**
     * Integration account name.
     * @type {string}
     * @memberof SnowflakeCredentials
     */
    'db_account': string;
    /**
     * Integration warehouse name.
     * @type {string}
     * @memberof SnowflakeCredentials
     */
    'db_warehouse': string;
}
/**
 * Input credentials for a Snowflake integration.
 * @export
 * @interface SnowflakeCredentialsIn
 */
export interface SnowflakeCredentialsIn {
    /**
     * Integration database name.
     * @type {string}
     * @memberof SnowflakeCredentialsIn
     */
    'db_name': string;
    /**
     * Integration user name.
     * @type {string}
     * @memberof SnowflakeCredentialsIn
     */
    'db_user': string;
    /**
     * Integration account name.
     * @type {string}
     * @memberof SnowflakeCredentialsIn
     */
    'db_account': string;
    /**
     * Integration warehouse name.
     * @type {string}
     * @memberof SnowflakeCredentialsIn
     */
    'db_warehouse': string;
    /**
     * Integration password.
     * @type {string}
     * @memberof SnowflakeCredentialsIn
     */
    'db_password': string;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum StatisticalTestType {
    Ttest = "ttest",
    Ztest = "ztest",
    Anova = "anova",
    Chisquared = "chisquared",
    Htest = "htest",
    Invalid = "invalid"
}
/**
 * Represent statistics for a string feature.
 * @export
 * @interface StringFeatureStatistics
 */
export interface StringFeatureStatistics {
    /**
     * Percentage of column values that are missing or zero-length.
     * @type {number}
     * @memberof StringFeatureStatistics
     */
    'percent_missing_or_empty'?: number;
    /**
     * Minimum of the lengths of non-missing values.
     * @type {number}
     * @memberof StringFeatureStatistics
     */
    'min_string_length'?: number;
    /**
     * Maximum of the lengths of non-missing values.
     * @type {number}
     * @memberof StringFeatureStatistics
     */
    'max_string_length'?: number;
    /**
     * Mean of the lengths of non-missing values.
     * @type {number}
     * @memberof StringFeatureStatistics
     */
    'mean_string_length'?: number;
    /**
     * Number of distinct non-missing values of the column.
     * @type {number}
     * @memberof StringFeatureStatistics
     */
    'distinct_values'?: number;
    /**
     * Histogram depicting the distribution of string length in the feature.
     * @type {Histogram}
     * @memberof StringFeatureStatistics
     */
    'character_length_distribution'?: Histogram;
    /**
     * Historical stats in form timestamp to value.
     * @type {{ [key: string]: StringFeatureStatisticsSimpleBase; }}
     * @memberof StringFeatureStatistics
     */
    'history'?: {
        [key: string]: StringFeatureStatisticsSimpleBase;
    };
}
/**
 * Represent statistics for string feature.  These fields will be included in the stats history.
 * @export
 * @interface StringFeatureStatisticsSimpleBase
 */
export interface StringFeatureStatisticsSimpleBase {
    /**
     * Percentage of column values that are missing or zero-length.
     * @type {number}
     * @memberof StringFeatureStatisticsSimpleBase
     */
    'percent_missing_or_empty'?: number;
    /**
     * Minimum of the lengths of non-missing values.
     * @type {number}
     * @memberof StringFeatureStatisticsSimpleBase
     */
    'min_string_length'?: number;
    /**
     * Maximum of the lengths of non-missing values.
     * @type {number}
     * @memberof StringFeatureStatisticsSimpleBase
     */
    'max_string_length'?: number;
    /**
     * Mean of the lengths of non-missing values.
     * @type {number}
     * @memberof StringFeatureStatisticsSimpleBase
     */
    'mean_string_length'?: number;
    /**
     * Number of distinct non-missing values of the column.
     * @type {number}
     * @memberof StringFeatureStatisticsSimpleBase
     */
    'distinct_values'?: number;
}
/**
 * Stripe account status enum.
 * @export
 * @enum {string}
 */
export declare enum StripeAccountStatus {
    Trial = "trial",
    Subscribed = "subscribed",
    Expired = "expired",
    GroupSubscribed = "group_subscribed",
    Unsubscribed = "unsubscribed"
}
/**
 * Stripe object.
 * @export
 * @interface StripeOut
 */
export interface StripeOut {
    /**
     * Subscription start date.
     * @type {string}
     * @memberof StripeOut
     */
    'start_date'?: string;
    /**
     * Subscription end date.
     * @type {string}
     * @memberof StripeOut
     */
    'end_date'?: string;
    /**
     * Subscription status.
     * @type {StripeAccountStatus}
     * @memberof StripeOut
     */
    'status'?: StripeAccountStatus;
    /**
     * Monthly or yearly.
     * @type {string}
     * @memberof StripeOut
     */
    'interval'?: string;
    /**
     * Autonew subscription
     * @type {boolean}
     * @memberof StripeOut
     */
    'cancel_at_period_end'?: boolean;
    /**
     * Subscription id.
     * @type {string}
     * @memberof StripeOut
     */
    'subscription_id'?: string;
    /**
     * Is group admin.
     * @type {boolean}
     * @memberof StripeOut
     */
    'is_group_admin'?: boolean;
    /**
     * Is group member.
     * @type {boolean}
     * @memberof StripeOut
     */
    'is_group_member'?: boolean;
    /**
     * Coupon code.
     * @type {string}
     * @memberof StripeOut
     */
    'coupon_id'?: string;
}
/**
 * Stripe session object.
 * @export
 * @interface StripeSessionOut
 */
export interface StripeSessionOut {
    /**
     * Session url link.
     * @type {string}
     * @memberof StripeSessionOut
     */
    'session_url'?: string;
}
/**
 * Interface for an author on a study.
 * @export
 * @interface StudyAuthor
 */
export interface StudyAuthor {
    /**
     *
     * @type {string}
     * @memberof StudyAuthor
     */
    'oa_id'?: string;
    /**
     *
     * @type {string}
     * @memberof StudyAuthor
     */
    'name': string;
}
/**
 * Interface for a single study and its finding sentences, populations, sample size, and id.
 * @export
 * @interface StudyFindings
 */
export interface StudyFindings {
    /**
     *
     * @type {Array<Finding>}
     * @memberof StudyFindings
     */
    'findings': Array<Finding>;
    /**
     *
     * @type {Array<string>}
     * @memberof StudyFindings
     */
    'populations'?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudyFindings
     */
    'sample_size'?: number;
    /**
     *
     * @type {string}
     * @memberof StudyFindings
     */
    'doi': string;
}
/**
 * Interface for /findings input.
 * @export
 * @interface StudyFindingsIn
 */
export interface StudyFindingsIn {
    /**
     *
     * @type {Array<string>}
     * @memberof StudyFindingsIn
     */
    'association_ids'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof StudyFindingsIn
     */
    'dois'?: Array<string>;
}
/**
 * Interface for /findings response type.
 * @export
 * @interface StudyFindingsOut
 */
export interface StudyFindingsOut {
    /**
     *
     * @type {Array<StudyFindings>}
     * @memberof StudyFindingsOut
     */
    'studies': Array<StudyFindings>;
}
/**
 * A real world study.
 * @export
 * @interface StudyIn
 */
export interface StudyIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof StudyIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof StudyIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof StudyIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof StudyIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof StudyIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Study\'s name.
     * @type {string}
     * @memberof StudyIn
     */
    'name': string;
    /**
     * Study\'s description.
     * @type {string}
     * @memberof StudyIn
     */
    'description'?: string;
    /**
     * The source (e.g. github link) of the study.
     * @type {string}
     * @memberof StudyIn
     */
    'source'?: string;
    /**
     * The type of study.
     * @type {StudyTypeEnum}
     * @memberof StudyIn
     */
    'study_type'?: StudyTypeEnum;
    /**
     * The DOI of the study.
     * @type {string}
     * @memberof StudyIn
     */
    'doi'?: string;
    /**
     * The lede of the study.
     * @type {string}
     * @memberof StudyIn
     */
    'lede'?: string;
    /**
     * External assets data.
     * @type {Array<ExternalAsset>}
     * @memberof StudyIn
     */
    'external_assets'?: Array<ExternalAsset>;
    /**
     * Optional add flow context flag.
     * @type {AddFlowContext}
     * @memberof StudyIn
     */
    'add_context'?: AddFlowContext;
    /**
     * Insights generated by this study.
     * @type {Array<string>}
     * @memberof StudyIn
     */
    'insights'?: Array<string>;
    /**
     * Publication info of study.
     * @type {PublicationInfo}
     * @memberof StudyIn
     */
    'publication_info'?: PublicationInfo;
    /**
     * Publication type string field.
     * @type {string}
     * @memberof StudyIn
     */
    'publication_type'?: string;
}
/**
 * Study resource links.
 * @export
 * @interface StudyLinks
 */
export interface StudyLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof StudyLinks
     */
    'self': string;
    /**
     * Link to study\'s authors.
     * @type {string}
     * @memberof StudyLinks
     */
    'authors': string;
    /**
     * Link to study\'s models.
     * @type {string}
     * @memberof StudyLinks
     */
    'models': string;
}
/**
 * Interface for Study Metadata retrieved from DynamoDB and OpenAlex.
 * @export
 * @interface StudyMetadata
 */
export interface StudyMetadata {
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'pmid'?: string;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'doi'?: string;
    /**
     *
     * @type {number}
     * @memberof StudyMetadata
     */
    'cited_by'?: number;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'journal'?: string;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'journal_id'?: string;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'publish_date'?: string;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'link'?: string;
    /**
     *
     * @type {Array<StudyAuthor>}
     * @memberof StudyMetadata
     */
    'authors'?: Array<StudyAuthor>;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'name'?: string;
    /**
     *
     * @type {string}
     * @memberof StudyMetadata
     */
    'summary'?: string;
    /**
     *
     * @type {boolean}
     * @memberof StudyMetadata
     */
    'retracted'?: boolean;
}
/**
 * Interface for input to /study-metadata.
 * @export
 * @interface StudyMetadataIn
 */
export interface StudyMetadataIn {
    /**
     *
     * @type {Array<string>}
     * @memberof StudyMetadataIn
     */
    'pmids': Array<string>;
}
/**
 * Interface for /study-metadata response type.
 * @export
 * @interface StudyMetadataOut
 */
export interface StudyMetadataOut {
    /**
     *
     * @type {Array<StudyMetadata>}
     * @memberof StudyMetadataOut
     */
    'study_metadata': Array<StudyMetadata>;
}
/**
 * A real world study.
 * @export
 * @interface StudyOut
 */
export interface StudyOut {
    /**
     *
     * @type {string}
     * @memberof StudyOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof StudyOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof StudyOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof StudyOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof StudyOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof StudyOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof StudyOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof StudyOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof StudyOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof StudyOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof StudyOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof StudyOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Study\'s name.
     * @type {string}
     * @memberof StudyOut
     */
    'name'?: string;
    /**
     * Study\'s description.
     * @type {string}
     * @memberof StudyOut
     */
    'description'?: string;
    /**
     * The source (e.g. github link) of the study.
     * @type {string}
     * @memberof StudyOut
     */
    'source'?: string;
    /**
     * The type of study.
     * @type {StudyTypeEnum}
     * @memberof StudyOut
     */
    'study_type'?: StudyTypeEnum;
    /**
     * The DOI of the study.
     * @type {string}
     * @memberof StudyOut
     */
    'doi'?: string;
    /**
     * The lede of the study.
     * @type {string}
     * @memberof StudyOut
     */
    'lede'?: string;
    /**
     * External assets data.
     * @type {Array<ExternalAsset>}
     * @memberof StudyOut
     */
    'external_assets'?: Array<ExternalAsset>;
    /**
     * Optional add flow context flag.
     * @type {AddFlowContext}
     * @memberof StudyOut
     */
    'add_context'?: AddFlowContext;
    /**
     * Insights generated by this study.
     * @type {Array<string>}
     * @memberof StudyOut
     */
    'insights'?: Array<string>;
    /**
     * Publication info of study.
     * @type {PublicationInfo}
     * @memberof StudyOut
     */
    'publication_info'?: PublicationInfo;
    /**
     * Publication type string field.
     * @type {string}
     * @memberof StudyOut
     */
    'publication_type'?: string;
    /**
     * Collection of links to related resources.
     * @type {StudyLinks}
     * @memberof StudyOut
     */
    '_links'?: StudyLinks;
    /**
     * Deprecated: The subgraph id of the resource.
     * @type {string}
     * @memberof StudyOut
     */
    'subgraph_id'?: string;
    /**
     * Object\'s tagged to this study.
     * @type {AppSchemaStudiesObjectTags}
     * @memberof StudyOut
     */
    'object_tags'?: AppSchemaStudiesObjectTags;
    /**
     * Authors of the study.
     * @type {Array<AuthorOut>}
     * @memberof StudyOut
     */
    'authors'?: Array<AuthorOut>;
}
/**
 * Study pagination out.
 * @export
 * @interface StudyPaginationOut
 */
export interface StudyPaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof StudyPaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<StudyOut>}
     * @memberof StudyPaginationOut
     */
    'items'?: Array<StudyOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof StudyPaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof StudyPaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof StudyPaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum StudySortEnum {
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * Enum for study types.
 * @export
 * @enum {string}
 */
export declare enum StudyTypeEnum {
    Invalid = "invalid",
    SupervisedMl = "supervised_ml",
    UnsupervisedMl = "unsupervised_ml",
    StatisticalInference = "statistical_inference",
    RandomizedControlTrial = "randomized_control_trial"
}
/**
 * Subscription seats.
 * @export
 * @interface SubscriptionSeats
 */
export interface SubscriptionSeats {
    /**
     *
     * @type {Array<string>}
     * @memberof SubscriptionSeats
     */
    'used_seats': Array<string>;
    /**
     *
     * @type {number}
     * @memberof SubscriptionSeats
     */
    'available_seats': number;
    /**
     *
     * @type {number}
     * @memberof SubscriptionSeats
     */
    'total_seats': number;
}
/**
 * Schema for a System Pubmed Search.  # noqa: E501
 * @export
 * @interface SuggestedQueriesIn
 */
export interface SuggestedQueriesIn {
    /**
     * User query
     * @type {string}
     * @memberof SuggestedQueriesIn
     */
    'query': string;
    /**
     * Number of pubmed results.
     * @type {number}
     * @memberof SuggestedQueriesIn
     */
    'num_pubmed_results': number;
}
/**
 * Schema for query suggestions.  # noqa: E501
 * @export
 * @interface SuggestedQueriesOut
 */
export interface SuggestedQueriesOut {
    /**
     *
     * @type {Array<SuggestedQuery>}
     * @memberof SuggestedQueriesOut
     */
    'queries': Array<SuggestedQuery>;
}
/**
 * Suggested query.  # noqa: E501
 * @export
 * @interface SuggestedQuery
 */
export interface SuggestedQuery {
    /**
     * User query
     * @type {string}
     * @memberof SuggestedQuery
     */
    'query': string;
    /**
     * Number of pubmed results.
     * @type {number}
     * @memberof SuggestedQuery
     */
    'num_pubmed_results': number;
    /**
     * Enum for query suggestion types.
     * @type {string}
     * @memberof SuggestedQuery
     */
    'suggestion_type': string;
}
/**
 * Synthesis output schema.  # noqa: E501
 * @export
 * @interface Synthesis
 */
export interface Synthesis {
    /**
     *
     * @type {string}
     * @memberof Synthesis
     */
    'text': string;
    /**
     *
     * @type {string}
     * @memberof Synthesis
     */
    'cache_key': string;
}
/**
 * Information related to a thumbs down feedback.
 * @export
 * @interface SynthesisFeedback
 */
export interface SynthesisFeedback {
    /**
     *
     * @type {Array<string>}
     * @memberof SynthesisFeedback
     */
    'choice'?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof SynthesisFeedback
     */
    'text': string;
}
/**
 * Input of feedback on synthesis from client.
 * @export
 * @interface SynthesisFeedbackIn
 */
export interface SynthesisFeedbackIn {
    /**
     *
     * @type {string}
     * @memberof SynthesisFeedbackIn
     */
    'question': string;
    /**
     *
     * @type {Array<string>}
     * @memberof SynthesisFeedbackIn
     */
    'prompt_summaries': Array<string>;
    /**
     *
     * @type {boolean}
     * @memberof SynthesisFeedbackIn
     */
    'is_positive': boolean;
    /**
     *
     * @type {SynthesisFeedback}
     * @memberof SynthesisFeedbackIn
     */
    'feedback_value'?: SynthesisFeedback;
    /**
     *
     * @type {string}
     * @memberof SynthesisFeedbackIn
     */
    'cache_key'?: string;
}
/**
 * Synthesis fetching output schema.  # noqa: E501
 * @export
 * @interface SynthesisOut
 */
export interface SynthesisOut {
    /**
     *
     * @type {PollingStatus}
     * @memberof SynthesisOut
     */
    'status': PollingStatus;
    /**
     *
     * @type {Synthesis}
     * @memberof SynthesisOut
     */
    'synthesis': Synthesis;
}
/**
 * Edge Typed Link model.  # noqa: E501
 * @export
 * @interface SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject
 */
export interface SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject {
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject
     */
    'source': string;
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject
     */
    'target': string;
    /**
     *
     * @type {SystemGraphApiClientModelsGraphLinkTypeGraphLinkType}
     * @memberof SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject
     */
    'edge_type'?: SystemGraphApiClientModelsGraphLinkTypeGraphLinkType;
    /**
     *
     * @type {Array<string>}
     * @memberof SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject
     */
    'association_ids'?: Array<string>;
}
/**
 * Object Typed Node model.  # noqa: E501
 * @export
 * @interface SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject
 */
export interface SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject {
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject
     */
    'name': string;
    /**
     *
     * @type {SystemGraphApiClientModelsGraphNodeTypeGraphNodeType}
     * @memberof SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject
     */
    'object_type'?: SystemGraphApiClientModelsGraphNodeTypeGraphNodeType;
    /**
     *
     * @type {Array<string>}
     * @memberof SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject
     */
    'system_ids'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject
     */
    'tags'?: Array<string>;
}
/**
 * Graph Data model.  # noqa: E501
 * @export
 * @interface SystemGraphApiClientModelsGraphDataGraphData
 */
export interface SystemGraphApiClientModelsGraphDataGraphData {
    /**
     * Nodes of graph data.
     * @type {Array<SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject>}
     * @memberof SystemGraphApiClientModelsGraphDataGraphData
     */
    'nodes': Array<SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject>;
    /**
     * Links of graph data.
     * @type {Array<SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject>}
     * @memberof SystemGraphApiClientModelsGraphDataGraphData
     */
    'links': Array<SystemGraphApiClientModelsExtendedLinkObjectExtendedLinkObject>;
}
/**
 * Graph Link Type enum.
 * @export
 * @enum {string}
 */
export declare enum SystemGraphApiClientModelsGraphLinkTypeGraphLinkType {
    DatasetRelationship = "dataset_relationship",
    ConceptRelationship = "concept_relationship",
    VariableRelationship = "variable_relationship",
    FeatureRelationship = "feature_relationship",
    FeatureVariable = "feature_variable",
    Measures = "measures"
}
/**
 * Graph Node Type enum.
 * @export
 * @enum {string}
 */
export declare enum SystemGraphApiClientModelsGraphNodeTypeGraphNodeType {
    Dataset = "dataset",
    Concept = "concept",
    Variable = "variable",
    Feature = "feature"
}
/**
 *
 * @export
 * @interface SystemGraphApiClientModelsPydanticExtendedLinkObject
 */
export interface SystemGraphApiClientModelsPydanticExtendedLinkObject {
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsPydanticExtendedLinkObject
     */
    'source': string;
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsPydanticExtendedLinkObject
     */
    'target': string;
    /**
     * Type of link.
     * @type {SystemGraphApiClientModelsPydanticGraphLinkType}
     * @memberof SystemGraphApiClientModelsPydanticExtendedLinkObject
     */
    'edge_type'?: SystemGraphApiClientModelsPydanticGraphLinkType;
    /**
     *
     * @type {Array<string>}
     * @memberof SystemGraphApiClientModelsPydanticExtendedLinkObject
     */
    'association_ids'?: Array<string>;
}
/**
 *
 * @export
 * @interface SystemGraphApiClientModelsPydanticExtendedNodeObject
 */
export interface SystemGraphApiClientModelsPydanticExtendedNodeObject {
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsPydanticExtendedNodeObject
     */
    'id': string;
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiClientModelsPydanticExtendedNodeObject
     */
    'name': string;
    /**
     * Type of node.
     * @type {SystemGraphApiClientModelsPydanticGraphNodeType}
     * @memberof SystemGraphApiClientModelsPydanticExtendedNodeObject
     */
    'object_type'?: SystemGraphApiClientModelsPydanticGraphNodeType;
    /**
     *
     * @type {Array<string>}
     * @memberof SystemGraphApiClientModelsPydanticExtendedNodeObject
     */
    'system_ids'?: Array<string>;
    /**
     *
     * @type {Array<string>}
     * @memberof SystemGraphApiClientModelsPydanticExtendedNodeObject
     */
    'tags'?: Array<string>;
}
/**
 *
 * @export
 * @interface SystemGraphApiClientModelsPydanticGraphData
 */
export interface SystemGraphApiClientModelsPydanticGraphData {
    /**
     * Nodes of graph data.
     * @type {Array<SystemGraphApiClientModelsPydanticExtendedNodeObject>}
     * @memberof SystemGraphApiClientModelsPydanticGraphData
     */
    'nodes': Array<SystemGraphApiClientModelsPydanticExtendedNodeObject>;
    /**
     * Links of graph data.
     * @type {Array<SystemGraphApiClientModelsPydanticExtendedLinkObject>}
     * @memberof SystemGraphApiClientModelsPydanticGraphData
     */
    'links': Array<SystemGraphApiClientModelsPydanticExtendedLinkObject>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum SystemGraphApiClientModelsPydanticGraphLinkType {
    DatasetRelationship = "dataset_relationship",
    ConceptRelationship = "concept_relationship",
    VariableRelationship = "variable_relationship",
    FeatureRelationship = "feature_relationship",
    FeatureVariable = "feature_variable",
    Measures = "measures"
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum SystemGraphApiClientModelsPydanticGraphNodeType {
    Dataset = "dataset",
    Concept = "concept",
    Variable = "variable",
    Feature = "feature"
}
/**
 * System search underlying data.
 * @export
 * @interface SystemSearchData
 */
export interface SystemSearchData {
    /**
     *
     * @type {Array<ClusteredRelationship>}
     * @memberof SystemSearchData
     */
    'relationships': Array<ClusteredRelationship>;
}
/**
 * System Search Fields.
 * @export
 * @interface SystemSearchIn
 */
export interface SystemSearchIn {
    /**
     * Search Field type
     * @type {SemanticSearchType}
     * @memberof SystemSearchIn
     */
    'question_type'?: SemanticSearchType;
    /**
     * Question to search for.
     * @type {string}
     * @memberof SystemSearchIn
     */
    'question'?: string;
    /**
     * First term part of the question.
     * @type {GroundedEntity}
     * @memberof SystemSearchIn
     */
    'term1': GroundedEntity;
    /**
     * Optional second term part of the question.
     * @type {GroundedEntity}
     * @memberof SystemSearchIn
     */
    'term2'?: GroundedEntity;
    /**
     * Optional Field to filter studies which have populations matching Field.
     * @type {string}
     * @memberof SystemSearchIn
     */
    'population'?: string;
    /**
     * To use cache or not. Default True.
     * @type {boolean}
     * @memberof SystemSearchIn
     */
    'use_cache'?: boolean;
    /**
     * Clustering thresholds as json stringified list of pairs of floats.
     * @type {Array<Array<number>>}
     * @memberof SystemSearchIn
     */
    'clustering_thresholds'?: Array<Array<number>>;
    /**
     * Clustering method to use.
     * @type {ClusteringMethods}
     * @memberof SystemSearchIn
     */
    'clustering_method'?: ClusteringMethods;
    /**
     * OpenAI model name
     * @type {string}
     * @memberof SystemSearchIn
     */
    'model_name'?: string;
    /**
     * Length of synthesis paragraph, in sentences.
     * @type {string}
     * @memberof SystemSearchIn
     */
    'length'?: string;
    /**
     * Temperature of summary
     * @type {number}
     * @memberof SystemSearchIn
     */
    'temperature'?: number;
    /**
     * Maximum token size
     * @type {number}
     * @memberof SystemSearchIn
     */
    'max_tokens'?: number;
    /**
     * Number of choices for OpenAI to produce.
     * @type {number}
     * @memberof SystemSearchIn
     */
    'choices'?: number;
}
/**
 * A table object.
 * @export
 * @interface Table
 */
export interface Table {
    /**
     *
     * @type {number}
     * @memberof Table
     */
    'id'?: number;
    /**
     * Table name.
     * @type {string}
     * @memberof Table
     */
    'name'?: string;
    /**
     * Active status.
     * @type {boolean}
     * @memberof Table
     */
    'active'?: boolean;
    /**
     * Schema name.
     * @type {string}
     * @memberof Table
     */
    'schema_name'?: string;
    /**
     * System ID of dataset this table corresponds to.
     * @type {string}
     * @memberof Table
     */
    'dataset_id'?: string;
    /**
     * Retrieval status.
     * @type {RetrievalStatus}
     * @memberof Table
     */
    'status'?: RetrievalStatus;
    /**
     * Time when table was last retrieved.
     * @type {string}
     * @memberof Table
     */
    'last_retrieval'?: string;
    /**
     * Time when interactions were last computed.
     * @type {string}
     * @memberof Table
     */
    'last_interactions_on'?: string;
    /**
     * Integration link.
     * @type {string}
     * @memberof Table
     */
    'integration': string;
}
/**
 * Team resource links.
 * @export
 * @interface TeamLinks
 */
export interface TeamLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof TeamLinks
     */
    'self': string;
}
/**
 * Team output model.
 * @export
 * @interface TeamOut
 */
export interface TeamOut {
    /**
     *
     * @type {string}
     * @memberof TeamOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof TeamOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof TeamOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof TeamOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof TeamOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof TeamOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof TeamOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Team\'s name.
     * @type {string}
     * @memberof TeamOut
     */
    'name': string;
    /**
     * Identifier of the team.
     * @type {string}
     * @memberof TeamOut
     */
    'slug': string;
    /**
     * Team\'s logo
     * @type {string}
     * @memberof TeamOut
     */
    'logo'?: string;
    /**
     * The list of integrations to retrieve
     * @type {Array<Integration>}
     * @memberof TeamOut
     */
    'integrations'?: Array<Integration>;
    /**
     * The team messages
     * @type {Array<MessageOut>}
     * @memberof TeamOut
     */
    'messages'?: Array<MessageOut>;
    /**
     * Collection of links to related resources.
     * @type {TeamLinks}
     * @memberof TeamOut
     */
    '_links'?: TeamLinks;
    /**
     * Public status
     * @type {boolean}
     * @memberof TeamOut
     */
    'public'?: boolean;
}
/**
 * Represent a test dataset.
 * @export
 * @interface TestDataset
 */
export interface TestDataset {
    /**
     * Source dataset transformation was applied to.
     * @type {string}
     * @memberof TestDataset
     */
    'dataset_id': string;
    /**
     *
     * @type {ValidTransformationTypeEnum}
     * @memberof TestDataset
     */
    'transformation_type'?: ValidTransformationTypeEnum;
    /**
     * Details of transformation.
     * @type {object}
     * @memberof TestDataset
     */
    'details'?: object;
}
/**
 * Represent time series statistics for a time series feature type.
 * @export
 * @interface TimeSeriesFeatureStatistics
 */
export interface TimeSeriesFeatureStatistics {
    /**
     * Number of (time) periods for which the feature exists.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'length'?: number;
    /**
     * Minimum value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'min'?: number;
    /**
     * Maximum value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'max'?: number;
    /**
     * Median value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'median'?: number;
    /**
     * Mean value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'mean'?: number;
    /**
     * Standard deviation of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'std'?: number;
    /**
     * Percentage of missing values of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatistics
     */
    'percent_missing'?: number;
    /**
     * Time frequency for which the feature exists.
     * @type {string}
     * @memberof TimeSeriesFeatureStatistics
     */
    'time_frequency'?: string;
    /**
     * First time period (string, ISO format) for which the feature exists.
     * @type {string}
     * @memberof TimeSeriesFeatureStatistics
     */
    'time_start'?: string;
    /**
     * Last time period (string, ISO format) for which the feature exists.
     * @type {string}
     * @memberof TimeSeriesFeatureStatistics
     */
    'time_end'?: string;
    /**
     * Line plot of the time series feature.
     * @type {LinePlot}
     * @memberof TimeSeriesFeatureStatistics
     */
    'lineplot'?: LinePlot;
    /**
     * Historical stats in form timestamp to value.
     * @type {{ [key: string]: TimeSeriesFeatureStatisticsSimpleBase; }}
     * @memberof TimeSeriesFeatureStatistics
     */
    'history'?: {
        [key: string]: TimeSeriesFeatureStatisticsSimpleBase;
    };
}
/**
 * Represent time series statistics for a time series feature type.  These fields will be included in the stats history.
 * @export
 * @interface TimeSeriesFeatureStatisticsSimpleBase
 */
export interface TimeSeriesFeatureStatisticsSimpleBase {
    /**
     * Number of (time) periods for which the feature exists.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'length'?: number;
    /**
     * Minimum value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'min'?: number;
    /**
     * Maximum value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'max'?: number;
    /**
     * Median value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'median'?: number;
    /**
     * Mean value of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'mean'?: number;
    /**
     * Standard deviation of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'std'?: number;
    /**
     * Percentage of missing values of the feature.
     * @type {number}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'percent_missing'?: number;
    /**
     * Time frequency for which the feature exists.
     * @type {string}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'time_frequency'?: string;
    /**
     * First time period (string, ISO format) for which the feature exists.
     * @type {string}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'time_start'?: string;
    /**
     * Last time period (string, ISO format) for which the feature exists.
     * @type {string}
     * @memberof TimeSeriesFeatureStatisticsSimpleBase
     */
    'time_end'?: string;
}
/**
 * Concept relationships model.  # noqa: E501
 * @export
 * @interface TopicCategories
 */
export interface TopicCategories {
    /**
     *
     * @type {SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject}
     * @memberof TopicCategories
     */
    'topic': SystemGraphApiClientModelsExtendedNodeObjectExtendedNodeObject;
    /**
     *
     * @type {NodeGroupItem}
     * @memberof TopicCategories
     */
    'relationship'?: NodeGroupItem;
    /**
     *
     * @type {NodeGroup}
     * @memberof TopicCategories
     */
    'upstream'?: NodeGroup;
    /**
     *
     * @type {NodeGroup}
     * @memberof TopicCategories
     */
    'downstream'?: NodeGroup;
    /**
     *
     * @type {NodeGroup}
     * @memberof TopicCategories
     */
    'confounders'?: NodeGroup;
    /**
     *
     * @type {NodeGroup}
     * @memberof TopicCategories
     */
    'mediators'?: NodeGroup;
}
/**
 * Return type for topic relationship syntheses.
 * @export
 * @interface TopicRelationshipSynthesisOut
 */
export interface TopicRelationshipSynthesisOut {
    /**
     * ID of topic relationship
     * @type {string}
     * @memberof TopicRelationshipSynthesisOut
     */
    'relationship_id'?: string;
    /**
     * Direction Enum for Relationship
     * @type {string}
     * @memberof TopicRelationshipSynthesisOut
     */
    'directed_at'?: string;
    /**
     * Topic ID 1
     * @type {string}
     * @memberof TopicRelationshipSynthesisOut
     */
    'topic_id_1'?: string;
    /**
     * Topic ID 2
     * @type {string}
     * @memberof TopicRelationshipSynthesisOut
     */
    'topic_id_2'?: string;
    /**
     * Relationship Synthesis Summary
     * @type {string}
     * @memberof TopicRelationshipSynthesisOut
     */
    'synthesis'?: string;
    /**
     * Last updated time stamp
     * @type {string}
     * @memberof TopicRelationshipSynthesisOut
     */
    'last_updated'?: string;
}
/**
 * User profile data input.
 * @export
 * @interface UpdateProfileIn
 */
export interface UpdateProfileIn {
    /**
     * User name that is visible to others on System.
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'display_name'?: string;
    /**
     * The user\'s unique [ORCID](https://orcid.org/).
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'orcid'?: string;
    /**
     * User\'s avatar.
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'avatar'?: string;
    /**
     * User\'s first name.
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'first_name'?: string;
    /**
     * User\'s last name.
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'last_name'?: string;
    /**
     * User\'s organizations.
     * @type {Array<string>}
     * @memberof UpdateProfileIn
     */
    'organizations'?: Array<string>;
    /**
     * User\'s field of work.
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'field_of_work'?: string;
    /**
     * User email address.
     * @type {string}
     * @memberof UpdateProfileIn
     */
    'email'?: string;
    /**
     * User roles.
     * @type {Array<string>}
     * @memberof UpdateProfileIn
     */
    'roles'?: Array<string>;
}
/**
 * User metric usage result.
 * @export
 * @interface UserMetricUsageOut
 */
export interface UserMetricUsageOut {
    /**
     * Usage Metric
     * @type {Metrics}
     * @memberof UserMetricUsageOut
     */
    'metric': Metrics;
    /**
     * Metric usage count
     * @type {number}
     * @memberof UserMetricUsageOut
     */
    'count': number;
    /**
     * Metric usage from date
     * @type {string}
     * @memberof UserMetricUsageOut
     */
    'date_from': string;
}
/**
 * Private user profile out.
 * @export
 * @interface UserPrivateProfileOut
 */
export interface UserPrivateProfileOut {
    /**
     * The user\'s System ID.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'id': string;
    /**
     * Time when the user\'s profile was created.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'created_at': string;
    /**
     * The Author ID corresponding to this user.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'author_id'?: string;
    /**
     * User name that is visible to others on System.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'display_name': string;
    /**
     * The user\'s unique [ORCID](https://orcid.org/).
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'orcid'?: string;
    /**
     * User\'s avatar.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'avatar'?: string;
    /**
     * User\'s first name.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'first_name'?: string;
    /**
     * User\'s last name.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'last_name'?: string;
    /**
     * User\'s organizations.
     * @type {Array<string>}
     * @memberof UserPrivateProfileOut
     */
    'organizations'?: Array<string>;
    /**
     * User\'s field of work.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'field_of_work'?: string;
    /**
     * User email address.
     * @type {string}
     * @memberof UserPrivateProfileOut
     */
    'email': string;
    /**
     * User roles.
     * @type {Array<string>}
     * @memberof UserPrivateProfileOut
     */
    'roles'?: Array<string>;
    /**
     * Stripe object
     * @type {StripeOut}
     * @memberof UserPrivateProfileOut
     */
    'stripe'?: StripeOut;
}
/**
 * User profile data input.
 * @export
 * @interface UserProfileIn
 */
export interface UserProfileIn {
    /**
     * User name that is visible to others on System.
     * @type {string}
     * @memberof UserProfileIn
     */
    'display_name': string;
    /**
     * The user\'s unique [ORCID](https://orcid.org/).
     * @type {string}
     * @memberof UserProfileIn
     */
    'orcid'?: string;
    /**
     * User\'s avatar.
     * @type {string}
     * @memberof UserProfileIn
     */
    'avatar'?: string;
    /**
     * User\'s first name.
     * @type {string}
     * @memberof UserProfileIn
     */
    'first_name'?: string;
    /**
     * User\'s last name.
     * @type {string}
     * @memberof UserProfileIn
     */
    'last_name'?: string;
    /**
     * User\'s organizations.
     * @type {Array<string>}
     * @memberof UserProfileIn
     */
    'organizations'?: Array<string>;
    /**
     * User\'s field of work.
     * @type {string}
     * @memberof UserProfileIn
     */
    'field_of_work'?: string;
    /**
     * User email address.
     * @type {string}
     * @memberof UserProfileIn
     */
    'email': string;
    /**
     * User roles.
     * @type {Array<string>}
     * @memberof UserProfileIn
     */
    'roles'?: Array<string>;
}
/**
 * Public user profile out.
 * @export
 * @interface UserPublicProfileOut
 */
export interface UserPublicProfileOut {
    /**
     * The user\'s System ID.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'id': string;
    /**
     * Time when the user\'s profile was created.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'created_at': string;
    /**
     * The Author ID corresponding to this user.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'author_id'?: string;
    /**
     * User name that is visible to others on System.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'display_name': string;
    /**
     * The user\'s unique [ORCID](https://orcid.org/).
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'orcid'?: string;
    /**
     * User\'s avatar.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'avatar'?: string;
    /**
     * User\'s first name.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'first_name'?: string;
    /**
     * User\'s last name.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'last_name'?: string;
    /**
     * User\'s organizations.
     * @type {Array<string>}
     * @memberof UserPublicProfileOut
     */
    'organizations'?: Array<string>;
    /**
     * User\'s field of work.
     * @type {string}
     * @memberof UserPublicProfileOut
     */
    'field_of_work'?: string;
}
/**
 * Enum for valid calibrated relationship type.
 * @export
 * @enum {string}
 */
export declare enum ValidCalibratedRelationshipType {
    Invalid = "invalid",
    SiPearsonR = "si_pearson_r",
    SiKendallTau = "si_kendall_tau",
    SiCramerV = "si_cramer_v",
    MlPermutationF1 = "ml_permutation_f1",
    MlPermutationR2 = "ml_permutation_r2",
    SiEffectSizeR = "si_effect_size_r",
    SiEffectSizeD = "si_effect_size_d",
    SiEffectSizeW = "si_effect_size_w"
}
/**
 * Enum for valid dataset license.
 * @export
 * @enum {string}
 */
export declare enum ValidDatasetLicenseEnum {
    PublicDomain = "public_domain",
    CreativeCommonsPublicDomainDedication = "creative_commons_public_domain_dedication",
    OpendataCommonsPublicDomainDedicationAndLicense = "opendata_commons_public_domain_dedication_and_license",
    CreativeCommonsAttributionInternational = "creative_commons_attribution_international",
    CommunityDataLicenseAgreementVersion1Permissive = "community_data_license_agreement_version_1_permissive",
    OpenDataCommonsAttributionLicense = "open_data_commons_attribution_license",
    CreativeCommonsAttributionShareAlike4International = "creative_commons_attribution_share_alike_4_international",
    CommunityDataLicenseAgreementVersion1Sharing = "community_data_license_agreement_version_1_sharing",
    OpenDataCommonsOpenDatabaseLicense = "open_data_commons_open_database_license",
    CreativeCommonsAttributionNoncommercial4International = "creative_commons_attribution_noncommercial_4_international",
    CreativeCommonsAttributionNoderivatives4International = "creative_commons_attribution_noderivatives_4_international",
    CreativeCommonsAttributionNoncommercialShareAlike4International = "creative_commons_attribution_noncommercial_share_alike_4_international",
    CreativeCommonsAttributionNoncommercialNoderivatives4International = "creative_commons_attribution_noncommercial_noderivatives_4_international",
    Other = "other"
}
/**
 * Valid feature contribution method enums.
 * @export
 * @enum {string}
 */
export declare enum ValidFeatureContributionMethod {
    Gini = "gini",
    Gain = "gain",
    Shap = "shap",
    Coefficient = "coefficient",
    Lime = "lime",
    Permutation = "permutation",
    PearsonR = "pearson_r",
    KendallTau = "kendall_tau",
    CramerV = "cramer_v",
    KruskalWallisHTest = "kruskal_wallis_h_test",
    ControlVariable = "control_variable",
    ProductMomentR = "product_moment_r",
    FrequencyScore = "frequency_score",
    OddsRatio = "odds_ratio",
    RelativeRiskRatio = "relative_risk_ratio",
    HazardRatio = "hazard_ratio",
    MeanGainUnstandardized = "mean_gain_unstandardized",
    MeanGainStandardized = "mean_gain_standardized",
    MeanDifferenceUnstandardized = "mean_difference_unstandardized",
    MeanDifferenceStandardized = "mean_difference_standardized",
    ProportionDifference = "proportion_difference",
    LogOddsRatio = "log_odds_ratio",
    PearsonChiSquaredTest = "pearson_chi_squared_test",
    Forecast = "forecast",
    PercentChangeDifference = "percent_change_difference",
    AdjustedOddsRatio = "adjusted_odds_ratio",
    AdjustedHazardRatio = "adjusted_hazard_ratio",
    IncidentRateRatio = "incident_rate_ratio",
    RiskDifference = "risk_difference",
    InformationFlow = "information_flow",
    StandardizedCoefficient = "standardized_coefficient",
    CohensD = "cohens_d",
    HedgesG = "hedges_g",
    GlassSDelta = "glass_s_delta",
    RootMeanSquareDifferencePsi = "root_mean_square_difference_psi",
    MahalanobisDistance = "mahalanobis_distance",
    CohensW = "cohens_w",
    CohensH = "cohens_h",
    CliffsDelta = "cliffs_delta",
    RankBiserialCorrelation = "rank_biserial_correlation",
    SpearmanCorrelation = "spearman_correlation",
    Elasticity = "elasticity",
    PrevalenceRatio = "prevalence_ratio"
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum ValidModelScoreEnum {
    AccuracyScore = "accuracy_score",
    AveragePrecisionScore = "average_precision_score",
    BalancedAccuracyScore = "balanced_accuracy_score",
    BrierScoreLoss = "brier_score_loss",
    CohenKappaScore = "cohen_kappa_score",
    F1Score = "f1_score",
    HammingLoss = "hamming_loss",
    HingeLoss = "hinge_loss",
    JaccardScore = "jaccard_score",
    LogLoss = "log_loss",
    MatthewsCorrCoef = "matthews_corr_coef",
    PrecisionScore = "precision_score",
    RecallScore = "recall_score",
    RocAucScore = "roc_auc_score",
    ZeroOneLoss = "zero_one_loss",
    ExplainedVarianceScore = "explained_variance_score",
    MaxError = "max_error",
    MeanAbsoluteError = "mean_absolute_error",
    MeanAbsolutePercentageError = "mean_absolute_percentage_error",
    MeanSquaredError = "mean_squared_error",
    MeanSquaredLogError = "mean_squared_log_error",
    MedianAbsoluteError = "median_absolute_error",
    R2Score = "r2_score",
    CoverageError = "coverage_error",
    LabelRankingAveragePrecisionScore = "label_ranking_average_precision_score",
    LabelRankingLoss = "label_ranking_loss",
    AdjustedR2Score = "adjusted_r2_score",
    MutualInformationScore = "mutual_information_score",
    AdjMutualInformationScore = "adj_mutual_information_score",
    NormalizedMutualInformationScore = "normalized_mutual_information_score",
    AdjRandScore = "adj_rand_score",
    CompletenessScore = "completeness_score",
    FowlkesMallowsScore = "fowlkes_mallows_score",
    HomogeneityScore = "homogeneity_score",
    VMeasureScore = "v_measure_score",
    NegMeanAbsoluteError = "neg_mean_absolute_error",
    NegMeanSquaredError = "neg_mean_squared_error",
    RootMeanSquaredError = "root_mean_squared_error",
    NegRootMeanSquaredError = "neg_root_mean_squared_error",
    RootMeanSquaredLogError = "root_mean_squared_log_error",
    NegMedianAbsoluteError = "neg_median_absolute_error",
    CosineProximity = "cosine_proximity",
    KullbackLeiblerDivergence = "kullback_leibler_divergence",
    PoissonMetric = "poisson_metric",
    MulticlassLogLoss = "multiclass_log_loss",
    NormalizedDiscountedCumulativeGain = "normalized_discounted_cumulative_gain",
    GammaDeviance = "gamma_deviance",
    HuberMetric = "huber_metric",
    FBetaScore = "f_beta_score",
    EuclideanDistance = "euclidean_distance",
    HaversineDistance = "haversine_distance",
    MeanSquaredPredictioneRror = "mean_squared_predictione_rror",
    PseudoR2Mcfadden = "pseudo_r2_mcfadden",
    AdjustedPseudoR2Mcfadden = "adjusted_pseudo_r2_mcfadden",
    PseudoR2Nagelkerke = "pseudo_r2_nagelkerke",
    PseudoR2CoxSnell = "pseudo_r2_cox_snell",
    PseudoR2Effron = "pseudo_r2_effron",
    Bic = "bic",
    Aic = "aic",
    CorrelationActualForecast = "correlation_actual_forecast",
    ForecastVsActual = "forecast_vs_actual",
    MeanSquaredPercentageError = "mean_squared_percentage_error",
    ConfusionMatrix = "confusion_matrix",
    MulticlassConfusionMatrix = "multiclass_confusion_matrix",
    RocCurve = "roc_curve"
}
/**
 * Enum for valid relationship direction.
 * @export
 * @enum {string}
 */
export declare enum ValidRelationshipDirectionEnum {
    Positive = "positive",
    Negative = "negative",
    Zero = "zero",
    Invalid = "invalid"
}
/**
 * Enum for valid relationship strength.
 * @export
 * @enum {string}
 */
export declare enum ValidRelationshipStrengthEnum {
    Invalid = "invalid",
    VeryWeak = "very_weak",
    Weak = "weak",
    Moderate = "moderate",
    Strong = "strong",
    VeryStrong = "very_strong"
}
/**
 * Enum for valid reproducibility level.
 * @export
 * @enum {string}
 */
export declare enum ValidReproducibilityEnum {
    Invalid = "invalid",
    Low = "low",
    Medium = "medium",
    High = "high"
}
/**
 * Valid significance level enums.
 * @export
 * @enum {string}
 */
export declare enum ValidSignificanceLevel {
    Five = "ninety_five",
    Nine = "ninety_nine",
    NinePointNine = "ninety_nine_point_nine"
}
/**
 * Valid statistical test type enums.
 * @export
 * @enum {string}
 */
export declare enum ValidStatisticalTestType {
    Ttest = "ttest",
    Ztest = "ztest",
    Anova = "anova",
    Chisquared = "chisquared",
    Htest = "htest"
}
/**
 * Valid transformation type enums.
 * @export
 * @enum {string}
 */
export declare enum ValidTransformationTypeEnum {
    NoTransformation = "no_transformation",
    Kfold = "kfold",
    LeavePOut = "leave_p_out",
    Holdout = "holdout",
    Independent = "independent"
}
/**
 * Valid value source enum.
 * @export
 * @enum {string}
 */
export declare enum ValidValueSource {
    LocalEvaluator = "local_evaluator",
    RemoteEvaluator = "remote_evaluator",
    User = "user"
}
/**
 *
 * @export
 * @interface ValidationError
 */
export interface ValidationError {
    /**
     *
     * @type {Array<string>}
     * @memberof ValidationError
     */
    'loc': Array<string>;
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    'msg': string;
    /**
     *
     * @type {string}
     * @memberof ValidationError
     */
    'type': string;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum ValueSourceEnum {
    LocalEvaluator = "local_evaluator",
    RemoteEvaluator = "remote_evaluator",
    User = "user",
    Invalid = "invalid"
}
/**
 * A real-world variable that is measured on a concept.
 * @export
 * @interface VariableIn
 */
export interface VariableIn {
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof VariableIn
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof VariableIn
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof VariableIn
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof VariableIn
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof VariableIn
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Variable\'s name.
     * @type {string}
     * @memberof VariableIn
     */
    'name': string;
    /**
     * A short description of the variable.
     * @type {string}
     * @memberof VariableIn
     */
    'description'?: string;
    /**
     * Other names for the variable.
     * @type {Array<string>}
     * @memberof VariableIn
     */
    'aliases'?: Array<string>;
    /**
     * External identifier mapping from source to id.
     * @type {{ [key: string]: string; }}
     * @memberof VariableIn
     */
    'xid'?: {
        [key: string]: string;
    };
    /**
     * Type of the variable.
     * @type {VariableType}
     * @memberof VariableIn
     */
    'variable_type'?: VariableType;
    /**
     * The id of the Variable\'s Concept.
     * @type {string}
     * @memberof VariableIn
     */
    'concept_id'?: string;
    /**
     * The monitoring rules for the metric.
     * @type {MetricMonitoring}
     * @memberof VariableIn
     */
    'monitoring'?: MetricMonitoring;
    /**
     * The uuid of the metric cluster.
     * @type {string}
     * @memberof VariableIn
     */
    'cluster_id'?: string;
    /**
     * The name of the metric cluster.
     * @type {string}
     * @memberof VariableIn
     */
    'cluster_name'?: string;
}
/**
 * Variable resource links.
 * @export
 * @interface VariableLinks
 */
export interface VariableLinks {
    /**
     * Link to this resource.
     * @type {string}
     * @memberof VariableLinks
     */
    'self': string;
    /**
     * Link to Variable\'s Concept.
     * @type {string}
     * @memberof VariableLinks
     */
    'concept'?: string;
}
/**
 * Variable output model.
 * @export
 * @interface VariableOut
 */
export interface VariableOut {
    /**
     *
     * @type {string}
     * @memberof VariableOut
     */
    'id': string;
    /**
     * User who created this resource.
     * @type {string}
     * @memberof VariableOut
     */
    'created_by'?: string;
    /**
     * Time when resource was created.
     * @type {string}
     * @memberof VariableOut
     */
    'created_at'?: string;
    /**
     * User who made the last edit.
     * @type {string}
     * @memberof VariableOut
     */
    'last_updated_by'?: string;
    /**
     * Time of last edit.
     * @type {string}
     * @memberof VariableOut
     */
    'last_updated_at'?: string;
    /**
     *
     * @type {Array<ResourceAction>}
     * @memberof VariableOut
     */
    '_permissions'?: Array<ResourceAction>;
    /**
     * Flags on this resource.
     * @type {Array<ResourceFlag>}
     * @memberof VariableOut
     */
    'flags'?: Array<ResourceFlag>;
    /**
     * Tags to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof VariableOut
     */
    'tags'?: Array<string>;
    /**
     * Search terms to attach to resource (max 64).
     * @type {Array<string>}
     * @memberof VariableOut
     */
    'search_terms'?: Array<string>;
    /**
     * A hidden object is not meant to be shown on the frontend.
     * @type {boolean}
     * @memberof VariableOut
     */
    'is_hidden'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof VariableOut
     */
    'is_private'?: boolean;
    /**
     * Notes whether the resource is private or not
     * @type {boolean}
     * @memberof VariableOut
     * @deprecated
     */
    '_private'?: boolean;
    /**
     * Variable\'s name.
     * @type {string}
     * @memberof VariableOut
     */
    'name': string;
    /**
     * A short description of the variable.
     * @type {string}
     * @memberof VariableOut
     */
    'description'?: string;
    /**
     * Other names for the variable.
     * @type {Array<string>}
     * @memberof VariableOut
     */
    'aliases'?: Array<string>;
    /**
     * External identifier mapping from source to id.
     * @type {{ [key: string]: string; }}
     * @memberof VariableOut
     */
    'xid'?: {
        [key: string]: string;
    };
    /**
     * Type of the variable.
     * @type {VariableType}
     * @memberof VariableOut
     */
    'variable_type'?: VariableType;
    /**
     * The id of the Variable\'s Concept.
     * @type {string}
     * @memberof VariableOut
     */
    'concept_id'?: string;
    /**
     * The monitoring rules for the metric.
     * @type {MetricMonitoring}
     * @memberof VariableOut
     */
    'monitoring'?: MetricMonitoring;
    /**
     * The uuid of the metric cluster.
     * @type {string}
     * @memberof VariableOut
     */
    'cluster_id'?: string;
    /**
     * The name of the metric cluster.
     * @type {string}
     * @memberof VariableOut
     */
    'cluster_name'?: string;
    /**
     * Collection of links to related resources.
     * @type {VariableLinks}
     * @memberof VariableOut
     */
    '_links'?: VariableLinks;
    /**
     * Number of models using this variable.
     * @type {number}
     * @memberof VariableOut
     */
    'model_count'?: number;
    /**
     * Number of models predicting this variable.
     * @type {number}
     * @memberof VariableOut
     */
    'model_predict_count'?: number;
    /**
     * Number of datasets using this variable.
     * @type {number}
     * @memberof VariableOut
     */
    'dataset_count'?: number;
    /**
     * Number of associations using this variable.
     * @type {number}
     * @memberof VariableOut
     */
    'association_count'?: number;
    /**
     * Number of features operationalizing this variable.
     * @type {number}
     * @memberof VariableOut
     */
    'feature_count'?: number;
}
/**
 * Variable pagination out.
 * @export
 * @interface VariablePaginationOut
 */
export interface VariablePaginationOut {
    /**
     * Collection of links to related resources.
     * @type {FirstLastPaginationLinks}
     * @memberof VariablePaginationOut
     */
    '_links'?: FirstLastPaginationLinks;
    /**
     * List of results.
     * @type {Array<VariableOut>}
     * @memberof VariablePaginationOut
     */
    'items'?: Array<VariableOut>;
    /**
     * List of ids.
     * @type {Array<string>}
     * @memberof VariablePaginationOut
     */
    'ids'?: Array<string>;
    /**
     * Total number of results available.
     * @type {number}
     * @memberof VariablePaginationOut
     */
    'total'?: number;
    /**
     * Valid \'order_by\' values that can be applied to current pagination set.
     * @type {Array<string>}
     * @memberof VariablePaginationOut
     */
    '_sorts'?: Array<string>;
}
/**
 * An enumeration.
 * @export
 * @enum {string}
 */
export declare enum VariableSortEnum {
    ModelCount = "model_count",
    CreatedAt = "created_at",
    LastUpdatedAt = "last_updated_at",
    Name = "name"
}
/**
 * Variable type model.
 * @export
 * @interface VariableType
 */
export interface VariableType {
    /**
     *
     * @type {VariableTypeEnum}
     * @memberof VariableType
     */
    'type'?: VariableTypeEnum;
    /**
     * Optional description only when valid when type=unknown
     * @type {string}
     * @memberof VariableType
     */
    'description'?: string;
}
/**
 * Enum for variable types.
 * @export
 * @enum {string}
 */
export declare enum VariableTypeEnum {
    Unknown = "unknown",
    CategoricalNominal = "categorical_nominal",
    CategoricalOrdinal = "categorical_ordinal",
    CategoricalBinary = "categorical_binary",
    NumericalDiscrete = "numerical_discrete",
    NumericalContinuous = "numerical_continuous"
}
/**
 * AssociationsApi - axios parameter creator
 * @export
 */
export declare const AssociationsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} datasetId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost: (datasetId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} modelId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {boolean} [mergeFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1ModelsModelIdAssociationsPost: (modelId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, mergeFeatures?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {string} modelId
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete: (modelId: string, associationId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {string} modelId
     * @param {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete} bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete: (modelId: string, bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {string} datasetId
     * @param {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete} bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: (datasetId: string, bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {string} associationId
     * @param {ResourceFlagIn} resourceFlagIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost: (associationId: string, resourceFlagIn: ResourceFlagIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {string} associationId
     * @param {ResourceFlagIn} resourceFlagIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost_1: (associationId: string, resourceFlagIn: ResourceFlagIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {string} associationId
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet: (associationId: string, modelId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get direction of this association.
     * @summary Get Relationship Direction
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipDirectionV1AssociationsAssociationIdDirectionGet: (associationId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get reproducibility of this association.
     * @summary Get Relationship Reproducibility
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet: (associationId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get strength of this association.
     * @summary Get Relationship Strength
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipStrengthV1AssociationsAssociationIdStrengthGet: (associationId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet: (studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Associations.
     * @summary List Associations
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [conceptRelationship] Format: \&#39;&lt;concept_id_1&gt;;&lt;concept_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1AssociationsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, variableRelationship?: string, featureRelationship?: string, conceptRelationship?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet: (datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1ModelsModelIdAssociationsGet: (modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1StudiesStudyIdAssociationsGet: (studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1VariablesVariableIdAssociationsGet: (variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Associations.
     * @summary List Free Metadata
     * @param {Array<string>} [ids] List of association IDs to fetch free metadata for.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFreeMetadataV1AssociationsFreeMetadataGet: (ids?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {string} modelId
     * @param {Array<BulkPatchAssociationOp>} bulkPatchAssociationOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch: (modelId: string, bulkPatchAssociationOp: Array<BulkPatchAssociationOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {string} associationId
     * @param {string} modelId
     * @param {DirectionIn} directionIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost: (associationId: string, modelId: string, directionIn: DirectionIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AssociationsApi - functional programming interface
 * @export
 */
export declare const AssociationsApiFp: (configuration?: Configuration) => {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} datasetId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost(datasetId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AssociationOut>>>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} modelId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {boolean} [mergeFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1ModelsModelIdAssociationsPost(modelId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, mergeFeatures?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AssociationOut>>>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {string} modelId
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete(modelId: string, associationId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {string} modelId
     * @param {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete} bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete(modelId: string, bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {string} datasetId
     * @param {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete} bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete(datasetId: string, bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {string} associationId
     * @param {ResourceFlagIn} resourceFlagIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost(associationId: string, resourceFlagIn: ResourceFlagIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {string} associationId
     * @param {ResourceFlagIn} resourceFlagIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost_1(associationId: string, resourceFlagIn: ResourceFlagIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {string} associationId
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet(associationId: string, modelId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationOut>>;
    /**
     * Get direction of this association.
     * @summary Get Relationship Direction
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipDirectionV1AssociationsAssociationIdDirectionGet(associationId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationshipDirection>>;
    /**
     * Get reproducibility of this association.
     * @summary Get Relationship Reproducibility
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet(associationId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationshipReproducibility>>;
    /**
     * Get strength of this association.
     * @summary Get Relationship Strength
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipStrengthV1AssociationsAssociationIdStrengthGet(associationId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationshipStrength>>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet(studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List Associations.
     * @summary List Associations
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [conceptRelationship] Format: \&#39;&lt;concept_id_1&gt;;&lt;concept_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1AssociationsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, variableRelationship?: string, featureRelationship?: string, conceptRelationship?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1ModelsModelIdAssociationsGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1StudiesStudyIdAssociationsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1VariablesVariableIdAssociationsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List Associations.
     * @summary List Free Metadata
     * @param {Array<string>} [ids] List of association IDs to fetch free metadata for.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFreeMetadataV1AssociationsFreeMetadataGet(ids?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<any>>>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {string} modelId
     * @param {Array<BulkPatchAssociationOp>} bulkPatchAssociationOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch(modelId: string, bulkPatchAssociationOp: Array<BulkPatchAssociationOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {string} associationId
     * @param {string} modelId
     * @param {DirectionIn} directionIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost(associationId: string, modelId: string, directionIn: DirectionIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationOut>>;
};
/**
 * AssociationsApi - factory interface
 * @export
 */
export declare const AssociationsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} datasetId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost(datasetId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, teamId?: string, options?: any): AxiosPromise<Array<AssociationOut>>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} modelId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {boolean} [mergeFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1ModelsModelIdAssociationsPost(modelId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, mergeFeatures?: boolean, teamId?: string, options?: any): AxiosPromise<Array<AssociationOut>>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {string} modelId
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete(modelId: string, associationId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {string} modelId
     * @param {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete} bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete(modelId: string, bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {string} datasetId
     * @param {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete} bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete(datasetId: string, bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {string} associationId
     * @param {ResourceFlagIn} resourceFlagIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost(associationId: string, resourceFlagIn: ResourceFlagIn, options?: any): AxiosPromise<any>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {string} associationId
     * @param {ResourceFlagIn} resourceFlagIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost_1(associationId: string, resourceFlagIn: ResourceFlagIn, options?: any): AxiosPromise<any>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {string} associationId
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet(associationId: string, modelId: string, teamId?: string, options?: any): AxiosPromise<AssociationOut>;
    /**
     * Get direction of this association.
     * @summary Get Relationship Direction
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipDirectionV1AssociationsAssociationIdDirectionGet(associationId: string, teamId?: string, options?: any): AxiosPromise<RelationshipDirection>;
    /**
     * Get reproducibility of this association.
     * @summary Get Relationship Reproducibility
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet(associationId: string, teamId?: string, options?: any): AxiosPromise<RelationshipReproducibility>;
    /**
     * Get strength of this association.
     * @summary Get Relationship Strength
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getRelationshipStrengthV1AssociationsAssociationIdStrengthGet(associationId: string, teamId?: string, options?: any): AxiosPromise<RelationshipStrength>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet(studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, teamId?: string, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List Associations.
     * @summary List Associations
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [conceptRelationship] Format: \&#39;&lt;concept_id_1&gt;;&lt;concept_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1AssociationsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, variableRelationship?: string, featureRelationship?: string, conceptRelationship?: string, teamId?: string, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1ModelsModelIdAssociationsGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1StudiesStudyIdAssociationsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1VariablesVariableIdAssociationsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List Associations.
     * @summary List Free Metadata
     * @param {Array<string>} [ids] List of association IDs to fetch free metadata for.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFreeMetadataV1AssociationsFreeMetadataGet(ids?: Array<string>, options?: any): AxiosPromise<Array<any>>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {string} modelId
     * @param {Array<BulkPatchAssociationOp>} bulkPatchAssociationOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch(modelId: string, bulkPatchAssociationOp: Array<BulkPatchAssociationOp>, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {string} associationId
     * @param {string} modelId
     * @param {DirectionIn} directionIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost(associationId: string, modelId: string, directionIn: DirectionIn, teamId?: string, options?: any): AxiosPromise<AssociationOut>;
};
/**
 * Request parameters for createAssociationsV1DatasetsDatasetIdAssociationsPost operation in AssociationsApi.
 * @export
 * @interface AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest
 */
export interface AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPost
     */
    readonly datasetId: string;
    /**
     *
     * @type {AssociationIn | Array<AssociationIn>}
     * @memberof AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPost
     */
    readonly associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createAssociationsV1ModelsModelIdAssociationsPost operation in AssociationsApi.
 * @export
 * @interface AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest
 */
export interface AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly modelId: string;
    /**
     *
     * @type {AssociationIn | Array<AssociationIn>}
     * @memberof AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>;
    /**
     *
     * @type {boolean}
     * @memberof AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly mergeFeatures?: boolean;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete operation in AssociationsApi.
 * @export
 * @interface AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest
 */
export interface AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteAssociationsV1ModelsModelIdAssociationsDelete operation in AssociationsApi.
 * @export
 * @interface AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest
 */
export interface AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    readonly modelId: string;
    /**
     *
     * @type {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete}
     * @memberof AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    readonly bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete operation in AssociationsApi.
 * @export
 * @interface AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest
 */
export interface AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete}
     * @memberof AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    readonly bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for flagAssociationV1AssociationsAssociationIdFlagsPost operation in AssociationsApi.
 * @export
 * @interface AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPostRequest
 */
export interface AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPostRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost
     */
    readonly associationId: string;
    /**
     *
     * @type {ResourceFlagIn}
     * @memberof AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost
     */
    readonly resourceFlagIn: ResourceFlagIn;
}
/**
 * Request parameters for flagAssociationV1AssociationsAssociationIdFlagsPost_1 operation in AssociationsApi.
 * @export
 * @interface AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost0Request
 */
export interface AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost0Request {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost0
     */
    readonly associationId: string;
    /**
     *
     * @type {ResourceFlagIn}
     * @memberof AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost0
     */
    readonly resourceFlagIn: ResourceFlagIn;
}
/**
 * Request parameters for getAssociationV1ModelsModelIdAssociationsAssociationIdGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest
 */
export interface AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGet
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getRelationshipDirectionV1AssociationsAssociationIdDirectionGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiGetRelationshipDirectionV1AssociationsAssociationIdDirectionGetRequest
 */
export interface AssociationsApiGetRelationshipDirectionV1AssociationsAssociationIdDirectionGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetRelationshipDirectionV1AssociationsAssociationIdDirectionGet
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetRelationshipDirectionV1AssociationsAssociationIdDirectionGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiGetRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGetRequest
 */
export interface AssociationsApiGetRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getRelationshipStrengthV1AssociationsAssociationIdStrengthGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiGetRelationshipStrengthV1AssociationsAssociationIdStrengthGetRequest
 */
export interface AssociationsApiGetRelationshipStrengthV1AssociationsAssociationIdStrengthGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetRelationshipStrengthV1AssociationsAssociationIdStrengthGet
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiGetRelationshipStrengthV1AssociationsAssociationIdStrengthGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest
 */
export interface AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly studyId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsV1AssociationsGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListAssociationsV1AssociationsGetRequest
 */
export interface AssociationsApiListAssociationsV1AssociationsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly isVariableAssociation?: boolean;
    /**
     * Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly variableRelationship?: string;
    /**
     * Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly featureRelationship?: string;
    /**
     * Format: \&#39;&lt;concept_id_1&gt;;&lt;concept_id_2&gt;\&#39;
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly conceptRelationship?: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1AssociationsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsV1DatasetsDatasetIdAssociationsGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest
 */
export interface AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAssociationsV1ModelsModelIdAssociationsGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListAssociationsV1ModelsModelIdAssociationsGetRequest
 */
export interface AssociationsApiListAssociationsV1ModelsModelIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAssociationsV1StudiesStudyIdAssociationsGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGetRequest
 */
export interface AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAssociationsV1VariablesVariableIdAssociationsGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGetRequest
 */
export interface AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly variableId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listFreeMetadataV1AssociationsFreeMetadataGet operation in AssociationsApi.
 * @export
 * @interface AssociationsApiListFreeMetadataV1AssociationsFreeMetadataGetRequest
 */
export interface AssociationsApiListFreeMetadataV1AssociationsFreeMetadataGetRequest {
    /**
     * List of association IDs to fetch free metadata for.
     * @type {Array<string>}
     * @memberof AssociationsApiListFreeMetadataV1AssociationsFreeMetadataGet
     */
    readonly ids?: Array<string>;
}
/**
 * Request parameters for patchAssociationsV1ModelsModelIdAssociationsPatch operation in AssociationsApi.
 * @export
 * @interface AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest
 */
export interface AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatch
     */
    readonly modelId: string;
    /**
     *
     * @type {Array<BulkPatchAssociationOp>}
     * @memberof AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatch
     */
    readonly bulkPatchAssociationOp: Array<BulkPatchAssociationOp>;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost operation in AssociationsApi.
 * @export
 * @interface AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest
 */
export interface AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest {
    /**
     *
     * @type {string}
     * @memberof AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly modelId: string;
    /**
     *
     * @type {DirectionIn}
     * @memberof AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly directionIn: DirectionIn;
    /**
     *
     * @type {string}
     * @memberof AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly teamId?: string;
}
/**
 * AssociationsApi - object-oriented interface
 * @export
 * @class AssociationsApi
 * @extends {BaseAPI}
 */
export declare class AssociationsApi extends BaseAPI {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost(requestParameters: AssociationsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut[]>>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    createAssociationsV1ModelsModelIdAssociationsPost(requestParameters: AssociationsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut[]>>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete(requestParameters: AssociationsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete(requestParameters: AssociationsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete(requestParameters: AssociationsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost(requestParameters: AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Get strength of this association.
     * @summary Flag Association
     * @param {AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost0Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    flagAssociationV1AssociationsAssociationIdFlagsPost_1(requestParameters: AssociationsApiFlagAssociationV1AssociationsAssociationIdFlagsPost0Request, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet(requestParameters: AssociationsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut>>;
    /**
     * Get direction of this association.
     * @summary Get Relationship Direction
     * @param {AssociationsApiGetRelationshipDirectionV1AssociationsAssociationIdDirectionGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    getRelationshipDirectionV1AssociationsAssociationIdDirectionGet(requestParameters: AssociationsApiGetRelationshipDirectionV1AssociationsAssociationIdDirectionGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RelationshipDirection>>;
    /**
     * Get reproducibility of this association.
     * @summary Get Relationship Reproducibility
     * @param {AssociationsApiGetRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    getRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGet(requestParameters: AssociationsApiGetRelationshipReproducibilityV1AssociationsAssociationIdReproducibilityGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RelationshipReproducibility>>;
    /**
     * Get strength of this association.
     * @summary Get Relationship Strength
     * @param {AssociationsApiGetRelationshipStrengthV1AssociationsAssociationIdStrengthGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    getRelationshipStrengthV1AssociationsAssociationIdStrengthGet(requestParameters: AssociationsApiGetRelationshipStrengthV1AssociationsAssociationIdStrengthGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RelationshipStrength>>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet(requestParameters: AssociationsApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List Associations.
     * @summary List Associations
     * @param {AssociationsApiListAssociationsV1AssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listAssociationsV1AssociationsGet(requestParameters?: AssociationsApiListAssociationsV1AssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet(requestParameters: AssociationsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {AssociationsApiListAssociationsV1ModelsModelIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listAssociationsV1ModelsModelIdAssociationsGet(requestParameters: AssociationsApiListAssociationsV1ModelsModelIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listAssociationsV1StudiesStudyIdAssociationsGet(requestParameters: AssociationsApiListAssociationsV1StudiesStudyIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listAssociationsV1VariablesVariableIdAssociationsGet(requestParameters: AssociationsApiListAssociationsV1VariablesVariableIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List Associations.
     * @summary List Free Metadata
     * @param {AssociationsApiListFreeMetadataV1AssociationsFreeMetadataGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    listFreeMetadataV1AssociationsFreeMetadataGet(requestParameters?: AssociationsApiListFreeMetadataV1AssociationsFreeMetadataGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any[]>>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch(requestParameters: AssociationsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AssociationsApi
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost(requestParameters: AssociationsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut>>;
}
/**
 * AuthorsApi - axios parameter creator
 * @export
 */
export declare const AuthorsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut: (studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {string} studyId
     * @param {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost} bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: (studyId: string, bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an Author.
     * @summary Create Author
     * @param {AuthorIn} authorIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAuthorV1AuthorsPost: (authorIn: AuthorIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create mulitple Authors.
     * @summary Create Multiple Authors.
     * @param {Array<AuthorIn> | AuthorIn} arrayAuthorInAuthorIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMultipleAuthorsV1AuthorsBulkPost: (arrayAuthorInAuthorIn: Array<AuthorIn> | AuthorIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete an Author.
     * @summary Delete Author
     * @param {string} authorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAuthorV1AuthorsAuthorIdDelete: (authorId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Author.
     * @summary Get Author
     * @param {string} authorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthorV1AuthorsAuthorIdGet: (authorId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Authors.  Common queries:      - Filter authors who are System users: /v1/authors?query=has(user_id)     - Search for authors who are System users /v1/authors?query=search(<name>),has(user_id)
     * @summary List Authors
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AuthorSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthorsV1AuthorsGet: (teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AuthorSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete: (studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * AuthorsApi - functional programming interface
 * @export
 */
export declare const AuthorsApiFp: (configuration?: Configuration) => {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut(studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {string} studyId
     * @param {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost} bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost(studyId: string, bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create an Author.
     * @summary Create Author
     * @param {AuthorIn} authorIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAuthorV1AuthorsPost(authorIn: AuthorIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthorOut>>;
    /**
     * Create mulitple Authors.
     * @summary Create Multiple Authors.
     * @param {Array<AuthorIn> | AuthorIn} arrayAuthorInAuthorIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMultipleAuthorsV1AuthorsBulkPost(arrayAuthorInAuthorIn: Array<AuthorIn> | AuthorIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AuthorOut>>>;
    /**
     * Delete an Author.
     * @summary Delete Author
     * @param {string} authorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAuthorV1AuthorsAuthorIdDelete(authorId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get Author.
     * @summary Get Author
     * @param {string} authorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthorV1AuthorsAuthorIdGet(authorId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthorOut>>;
    /**
     * List Authors.  Common queries:      - Filter authors who are System users: /v1/authors?query=has(user_id)     - Search for authors who are System users /v1/authors?query=search(<name>),has(user_id)
     * @summary List Authors
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AuthorSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthorsV1AuthorsGet(teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AuthorSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthorPaginationOut>>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete(studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * AuthorsApi - factory interface
 * @export
 */
export declare const AuthorsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut(studyId: string, authorId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {string} studyId
     * @param {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost} bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost(studyId: string, bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Create an Author.
     * @summary Create Author
     * @param {AuthorIn} authorIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAuthorV1AuthorsPost(authorIn: AuthorIn, teamId?: string, options?: any): AxiosPromise<AuthorOut>;
    /**
     * Create mulitple Authors.
     * @summary Create Multiple Authors.
     * @param {Array<AuthorIn> | AuthorIn} arrayAuthorInAuthorIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMultipleAuthorsV1AuthorsBulkPost(arrayAuthorInAuthorIn: Array<AuthorIn> | AuthorIn, teamId?: string, options?: any): AxiosPromise<Array<AuthorOut>>;
    /**
     * Delete an Author.
     * @summary Delete Author
     * @param {string} authorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAuthorV1AuthorsAuthorIdDelete(authorId: string, options?: any): AxiosPromise<void>;
    /**
     * Get Author.
     * @summary Get Author
     * @param {string} authorId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthorV1AuthorsAuthorIdGet(authorId: string, options?: any): AxiosPromise<AuthorOut>;
    /**
     * List Authors.  Common queries:      - Filter authors who are System users: /v1/authors?query=has(user_id)     - Search for authors who are System users /v1/authors?query=search(<name>),has(user_id)
     * @summary List Authors
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AuthorSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthorsV1AuthorsGet(teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AuthorSortEnum, ordering?: Ordering, sortBy?: string, options?: any): AxiosPromise<AuthorPaginationOut>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete(studyId: string, authorId: string, teamId?: string, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut operation in AuthorsApi.
 * @export
 * @interface AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest
 */
export interface AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut
     */
    readonly authorId: string;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost operation in AuthorsApi.
 * @export
 * @interface AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest
 */
export interface AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest {
    /**
     *
     * @type {string}
     * @memberof AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    readonly studyId: string;
    /**
     *
     * @type {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost}
     * @memberof AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    readonly bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createAuthorV1AuthorsPost operation in AuthorsApi.
 * @export
 * @interface AuthorsApiCreateAuthorV1AuthorsPostRequest
 */
export interface AuthorsApiCreateAuthorV1AuthorsPostRequest {
    /**
     *
     * @type {AuthorIn}
     * @memberof AuthorsApiCreateAuthorV1AuthorsPost
     */
    readonly authorIn: AuthorIn;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiCreateAuthorV1AuthorsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createMultipleAuthorsV1AuthorsBulkPost operation in AuthorsApi.
 * @export
 * @interface AuthorsApiCreateMultipleAuthorsV1AuthorsBulkPostRequest
 */
export interface AuthorsApiCreateMultipleAuthorsV1AuthorsBulkPostRequest {
    /**
     *
     * @type {Array<AuthorIn> | AuthorIn}
     * @memberof AuthorsApiCreateMultipleAuthorsV1AuthorsBulkPost
     */
    readonly arrayAuthorInAuthorIn: Array<AuthorIn> | AuthorIn;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiCreateMultipleAuthorsV1AuthorsBulkPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteAuthorV1AuthorsAuthorIdDelete operation in AuthorsApi.
 * @export
 * @interface AuthorsApiDeleteAuthorV1AuthorsAuthorIdDeleteRequest
 */
export interface AuthorsApiDeleteAuthorV1AuthorsAuthorIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof AuthorsApiDeleteAuthorV1AuthorsAuthorIdDelete
     */
    readonly authorId: string;
}
/**
 * Request parameters for getAuthorV1AuthorsAuthorIdGet operation in AuthorsApi.
 * @export
 * @interface AuthorsApiGetAuthorV1AuthorsAuthorIdGetRequest
 */
export interface AuthorsApiGetAuthorV1AuthorsAuthorIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof AuthorsApiGetAuthorV1AuthorsAuthorIdGet
     */
    readonly authorId: string;
}
/**
 * Request parameters for listAuthorsV1AuthorsGet operation in AuthorsApi.
 * @export
 * @interface AuthorsApiListAuthorsV1AuthorsGetRequest
 */
export interface AuthorsApiListAuthorsV1AuthorsGetRequest {
    /**
     *
     * @type {string}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AuthorSortEnum}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly orderBy?: AuthorSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof AuthorsApiListAuthorsV1AuthorsGet
     */
    readonly sortBy?: string;
}
/**
 * Request parameters for removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete operation in AuthorsApi.
 * @export
 * @interface AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest
 */
export interface AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete
     */
    readonly authorId: string;
    /**
     *
     * @type {string}
     * @memberof AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete
     */
    readonly teamId?: string;
}
/**
 * AuthorsApi - object-oriented interface
 * @export
 * @class AuthorsApi
 * @extends {BaseAPI}
 */
export declare class AuthorsApi extends BaseAPI {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut(requestParameters: AuthorsApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost(requestParameters: AuthorsApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Create an Author.
     * @summary Create Author
     * @param {AuthorsApiCreateAuthorV1AuthorsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    createAuthorV1AuthorsPost(requestParameters: AuthorsApiCreateAuthorV1AuthorsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthorOut>>;
    /**
     * Create mulitple Authors.
     * @summary Create Multiple Authors.
     * @param {AuthorsApiCreateMultipleAuthorsV1AuthorsBulkPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    createMultipleAuthorsV1AuthorsBulkPost(requestParameters: AuthorsApiCreateMultipleAuthorsV1AuthorsBulkPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthorOut[]>>;
    /**
     * Delete an Author.
     * @summary Delete Author
     * @param {AuthorsApiDeleteAuthorV1AuthorsAuthorIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    deleteAuthorV1AuthorsAuthorIdDelete(requestParameters: AuthorsApiDeleteAuthorV1AuthorsAuthorIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get Author.
     * @summary Get Author
     * @param {AuthorsApiGetAuthorV1AuthorsAuthorIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    getAuthorV1AuthorsAuthorIdGet(requestParameters: AuthorsApiGetAuthorV1AuthorsAuthorIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthorOut>>;
    /**
     * List Authors.  Common queries:      - Filter authors who are System users: /v1/authors?query=has(user_id)     - Search for authors who are System users /v1/authors?query=search(<name>),has(user_id)
     * @summary List Authors
     * @param {AuthorsApiListAuthorsV1AuthorsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    listAuthorsV1AuthorsGet(requestParameters?: AuthorsApiListAuthorsV1AuthorsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthorPaginationOut>>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AuthorsApi
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete(requestParameters: AuthorsApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
}
/**
 * ConceptsApi - axios parameter creator
 * @export
 */
export declare const ConceptsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a Concept.
     * @summary Create Concept
     * @param {ConceptIn} conceptIn
     * @param {boolean} [overwriteExisting]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConceptV1ConceptsPost: (conceptIn: ConceptIn, overwriteExisting?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a Concept.  Deletion will fail if this Concept is attached to any existing variables.
     * @summary Delete Concept
     * @param {string} conceptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteConceptV1ConceptsConceptIdDelete: (conceptId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch concept relationships.
     * @summary Get Concept Relationships
     * @param {string} conceptId
     * @param {boolean} [topPercentileLimit] Flag for limiting to top percentile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptRelationshipsV1ConceptsConceptIdRelationshipsGet: (conceptId: string, topPercentileLimit?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Concept.
     * @summary Get Concept
     * @param {string} conceptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptV1ConceptsConceptIdGet: (conceptId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserConceptsV1UserConceptsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Concepts.
     * @summary List Concepts
     * @param {string} [teamId]
     * @param {number} [minRelationshipStrength] Min strength
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listConceptsV1ConceptsGet: (teamId?: string, minRelationshipStrength?: number, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserConceptsV1UsersUserIdConceptsGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Concept
     * @param {string} conceptId
     * @param {PatchConceptOp | Array<PatchConceptOp>} patchConceptOpArrayPatchConceptOp
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchConceptV1ConceptsConceptIdPatch: (conceptId: string, patchConceptOpArrayPatchConceptOp: PatchConceptOp | Array<PatchConceptOp>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Concepts.
     * @summary Semantic Search Concepts
     * @param {string} query Query for the search.
     * @param {number} [distance] Distance for the search.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    semanticSearchConceptsV1ConceptsSemanticGet: (query: string, distance?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ConceptsApi - functional programming interface
 * @export
 */
export declare const ConceptsApiFp: (configuration?: Configuration) => {
    /**
     * Create a Concept.
     * @summary Create Concept
     * @param {ConceptIn} conceptIn
     * @param {boolean} [overwriteExisting]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConceptV1ConceptsPost(conceptIn: ConceptIn, overwriteExisting?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptOut>>;
    /**
     * Delete a Concept.  Deletion will fail if this Concept is attached to any existing variables.
     * @summary Delete Concept
     * @param {string} conceptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteConceptV1ConceptsConceptIdDelete(conceptId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Fetch concept relationships.
     * @summary Get Concept Relationships
     * @param {string} conceptId
     * @param {boolean} [topPercentileLimit] Flag for limiting to top percentile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptRelationshipsV1ConceptsConceptIdRelationshipsGet(conceptId: string, topPercentileLimit?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptRelationshipsOut>>;
    /**
     * Get Concept.
     * @summary Get Concept
     * @param {string} conceptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptV1ConceptsConceptIdGet(conceptId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptOut>>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserConceptsV1UserConceptsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptPaginationOut>>;
    /**
     * List Concepts.
     * @summary List Concepts
     * @param {string} [teamId]
     * @param {number} [minRelationshipStrength] Min strength
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listConceptsV1ConceptsGet(teamId?: string, minRelationshipStrength?: number, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptPaginationOut>>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserConceptsV1UsersUserIdConceptsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptPaginationOut>>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Concept
     * @param {string} conceptId
     * @param {PatchConceptOp | Array<PatchConceptOp>} patchConceptOpArrayPatchConceptOp
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchConceptV1ConceptsConceptIdPatch(conceptId: string, patchConceptOpArrayPatchConceptOp: PatchConceptOp | Array<PatchConceptOp>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * List Concepts.
     * @summary Semantic Search Concepts
     * @param {string} query Query for the search.
     * @param {number} [distance] Distance for the search.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    semanticSearchConceptsV1ConceptsSemanticGet(query: string, distance?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ConceptOut>>>;
};
/**
 * ConceptsApi - factory interface
 * @export
 */
export declare const ConceptsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a Concept.
     * @summary Create Concept
     * @param {ConceptIn} conceptIn
     * @param {boolean} [overwriteExisting]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createConceptV1ConceptsPost(conceptIn: ConceptIn, overwriteExisting?: boolean, options?: any): AxiosPromise<ConceptOut>;
    /**
     * Delete a Concept.  Deletion will fail if this Concept is attached to any existing variables.
     * @summary Delete Concept
     * @param {string} conceptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteConceptV1ConceptsConceptIdDelete(conceptId: string, options?: any): AxiosPromise<void>;
    /**
     * Fetch concept relationships.
     * @summary Get Concept Relationships
     * @param {string} conceptId
     * @param {boolean} [topPercentileLimit] Flag for limiting to top percentile.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptRelationshipsV1ConceptsConceptIdRelationshipsGet(conceptId: string, topPercentileLimit?: boolean, options?: any): AxiosPromise<ConceptRelationshipsOut>;
    /**
     * Get Concept.
     * @summary Get Concept
     * @param {string} conceptId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptV1ConceptsConceptIdGet(conceptId: string, options?: any): AxiosPromise<ConceptOut>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserConceptsV1UserConceptsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: any): AxiosPromise<ConceptPaginationOut>;
    /**
     * List Concepts.
     * @summary List Concepts
     * @param {string} [teamId]
     * @param {number} [minRelationshipStrength] Min strength
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listConceptsV1ConceptsGet(teamId?: string, minRelationshipStrength?: number, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, options?: any): AxiosPromise<ConceptPaginationOut>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserConceptsV1UsersUserIdConceptsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: any): AxiosPromise<ConceptPaginationOut>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Concept
     * @param {string} conceptId
     * @param {PatchConceptOp | Array<PatchConceptOp>} patchConceptOpArrayPatchConceptOp
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchConceptV1ConceptsConceptIdPatch(conceptId: string, patchConceptOpArrayPatchConceptOp: PatchConceptOp | Array<PatchConceptOp>, options?: any): AxiosPromise<void>;
    /**
     * List Concepts.
     * @summary Semantic Search Concepts
     * @param {string} query Query for the search.
     * @param {number} [distance] Distance for the search.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    semanticSearchConceptsV1ConceptsSemanticGet(query: string, distance?: number, options?: any): AxiosPromise<Array<ConceptOut>>;
};
/**
 * Request parameters for createConceptV1ConceptsPost operation in ConceptsApi.
 * @export
 * @interface ConceptsApiCreateConceptV1ConceptsPostRequest
 */
export interface ConceptsApiCreateConceptV1ConceptsPostRequest {
    /**
     *
     * @type {ConceptIn}
     * @memberof ConceptsApiCreateConceptV1ConceptsPost
     */
    readonly conceptIn: ConceptIn;
    /**
     *
     * @type {boolean}
     * @memberof ConceptsApiCreateConceptV1ConceptsPost
     */
    readonly overwriteExisting?: boolean;
}
/**
 * Request parameters for deleteConceptV1ConceptsConceptIdDelete operation in ConceptsApi.
 * @export
 * @interface ConceptsApiDeleteConceptV1ConceptsConceptIdDeleteRequest
 */
export interface ConceptsApiDeleteConceptV1ConceptsConceptIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof ConceptsApiDeleteConceptV1ConceptsConceptIdDelete
     */
    readonly conceptId: string;
}
/**
 * Request parameters for getConceptRelationshipsV1ConceptsConceptIdRelationshipsGet operation in ConceptsApi.
 * @export
 * @interface ConceptsApiGetConceptRelationshipsV1ConceptsConceptIdRelationshipsGetRequest
 */
export interface ConceptsApiGetConceptRelationshipsV1ConceptsConceptIdRelationshipsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ConceptsApiGetConceptRelationshipsV1ConceptsConceptIdRelationshipsGet
     */
    readonly conceptId: string;
    /**
     * Flag for limiting to top percentile.
     * @type {boolean}
     * @memberof ConceptsApiGetConceptRelationshipsV1ConceptsConceptIdRelationshipsGet
     */
    readonly topPercentileLimit?: boolean;
}
/**
 * Request parameters for getConceptV1ConceptsConceptIdGet operation in ConceptsApi.
 * @export
 * @interface ConceptsApiGetConceptV1ConceptsConceptIdGetRequest
 */
export interface ConceptsApiGetConceptV1ConceptsConceptIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof ConceptsApiGetConceptV1ConceptsConceptIdGet
     */
    readonly conceptId: string;
}
/**
 * Request parameters for listAuthenticatedUserConceptsV1UserConceptsGet operation in ConceptsApi.
 * @export
 * @interface ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGetRequest
 */
export interface ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ConceptSortEnum}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly orderBy?: ConceptSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly sortBy?: string;
    /**
     * Is Concept in the Concept Graph?
     * @type {boolean}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly inConceptGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listConceptsV1ConceptsGet operation in ConceptsApi.
 * @export
 * @interface ConceptsApiListConceptsV1ConceptsGetRequest
 */
export interface ConceptsApiListConceptsV1ConceptsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly teamId?: string;
    /**
     * Min strength
     * @type {number}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly minRelationshipStrength?: number;
    /**
     * Search query.
     * @type {string}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ConceptSortEnum}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly orderBy?: ConceptSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly sortBy?: string;
    /**
     * Is Concept in the Concept Graph?
     * @type {boolean}
     * @memberof ConceptsApiListConceptsV1ConceptsGet
     */
    readonly inConceptGraph?: boolean;
}
/**
 * Request parameters for listUserConceptsV1UsersUserIdConceptsGet operation in ConceptsApi.
 * @export
 * @interface ConceptsApiListUserConceptsV1UsersUserIdConceptsGetRequest
 */
export interface ConceptsApiListUserConceptsV1UsersUserIdConceptsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ConceptSortEnum}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly orderBy?: ConceptSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly sortBy?: string;
    /**
     * Is Concept in the Concept Graph?
     * @type {boolean}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly inConceptGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof ConceptsApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchConceptV1ConceptsConceptIdPatch operation in ConceptsApi.
 * @export
 * @interface ConceptsApiPatchConceptV1ConceptsConceptIdPatchRequest
 */
export interface ConceptsApiPatchConceptV1ConceptsConceptIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof ConceptsApiPatchConceptV1ConceptsConceptIdPatch
     */
    readonly conceptId: string;
    /**
     *
     * @type {PatchConceptOp | Array<PatchConceptOp>}
     * @memberof ConceptsApiPatchConceptV1ConceptsConceptIdPatch
     */
    readonly patchConceptOpArrayPatchConceptOp: PatchConceptOp | Array<PatchConceptOp>;
}
/**
 * Request parameters for semanticSearchConceptsV1ConceptsSemanticGet operation in ConceptsApi.
 * @export
 * @interface ConceptsApiSemanticSearchConceptsV1ConceptsSemanticGetRequest
 */
export interface ConceptsApiSemanticSearchConceptsV1ConceptsSemanticGetRequest {
    /**
     * Query for the search.
     * @type {string}
     * @memberof ConceptsApiSemanticSearchConceptsV1ConceptsSemanticGet
     */
    readonly query: string;
    /**
     * Distance for the search.
     * @type {number}
     * @memberof ConceptsApiSemanticSearchConceptsV1ConceptsSemanticGet
     */
    readonly distance?: number;
}
/**
 * ConceptsApi - object-oriented interface
 * @export
 * @class ConceptsApi
 * @extends {BaseAPI}
 */
export declare class ConceptsApi extends BaseAPI {
    /**
     * Create a Concept.
     * @summary Create Concept
     * @param {ConceptsApiCreateConceptV1ConceptsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    createConceptV1ConceptsPost(requestParameters: ConceptsApiCreateConceptV1ConceptsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptOut>>;
    /**
     * Delete a Concept.  Deletion will fail if this Concept is attached to any existing variables.
     * @summary Delete Concept
     * @param {ConceptsApiDeleteConceptV1ConceptsConceptIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    deleteConceptV1ConceptsConceptIdDelete(requestParameters: ConceptsApiDeleteConceptV1ConceptsConceptIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Fetch concept relationships.
     * @summary Get Concept Relationships
     * @param {ConceptsApiGetConceptRelationshipsV1ConceptsConceptIdRelationshipsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    getConceptRelationshipsV1ConceptsConceptIdRelationshipsGet(requestParameters: ConceptsApiGetConceptRelationshipsV1ConceptsConceptIdRelationshipsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptRelationshipsOut>>;
    /**
     * Get Concept.
     * @summary Get Concept
     * @param {ConceptsApiGetConceptV1ConceptsConceptIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    getConceptV1ConceptsConceptIdGet(requestParameters: ConceptsApiGetConceptV1ConceptsConceptIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptOut>>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    listAuthenticatedUserConceptsV1UserConceptsGet(requestParameters?: ConceptsApiListAuthenticatedUserConceptsV1UserConceptsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptPaginationOut>>;
    /**
     * List Concepts.
     * @summary List Concepts
     * @param {ConceptsApiListConceptsV1ConceptsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    listConceptsV1ConceptsGet(requestParameters?: ConceptsApiListConceptsV1ConceptsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptPaginationOut>>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {ConceptsApiListUserConceptsV1UsersUserIdConceptsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    listUserConceptsV1UsersUserIdConceptsGet(requestParameters: ConceptsApiListUserConceptsV1UsersUserIdConceptsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptPaginationOut>>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Concept
     * @param {ConceptsApiPatchConceptV1ConceptsConceptIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    patchConceptV1ConceptsConceptIdPatch(requestParameters: ConceptsApiPatchConceptV1ConceptsConceptIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * List Concepts.
     * @summary Semantic Search Concepts
     * @param {ConceptsApiSemanticSearchConceptsV1ConceptsSemanticGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConceptsApi
     */
    semanticSearchConceptsV1ConceptsSemanticGet(requestParameters: ConceptsApiSemanticSearchConceptsV1ConceptsSemanticGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptOut[]>>;
}
/**
 * DashboardsApi - axios parameter creator
 * @export
 */
export declare const DashboardsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {string} dashboardId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut: (dashboardId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create an Dashboard.
     * @summary Create Dashboard Post
     * @param {DashboardIn} dashboardIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDashboardPostV1DashboardsPost: (dashboardIn: DashboardIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a Dashboard.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dashboard
     * @param {string} dashboardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDashboardV1DashboardsDashboardIdDelete: (dashboardId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Dashboard.
     * @summary Get Dashboard
     * @param {string} dashboardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDashboardV1DashboardsDashboardIdGet: (dashboardId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {string} dashboardId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet: (dashboardId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Dashboards.  Paginated list of all Dashboards.
     * @summary List Dashboards
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1DashboardsGet: (teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1VariablesVariableIdDashboardsGet: (variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DashboardsApi - functional programming interface
 * @export
 */
export declare const DashboardsApiFp: (configuration?: Configuration) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {string} dashboardId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut(dashboardId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create an Dashboard.
     * @summary Create Dashboard Post
     * @param {DashboardIn} dashboardIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDashboardPostV1DashboardsPost(dashboardIn: DashboardIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DashboardOut>>;
    /**
     * Delete a Dashboard.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dashboard
     * @param {string} dashboardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDashboardV1DashboardsDashboardIdDelete(dashboardId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get Dashboard.
     * @summary Get Dashboard
     * @param {string} dashboardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDashboardV1DashboardsDashboardIdGet(dashboardId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DashboardOut>>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {string} dashboardId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet(dashboardId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List Dashboards.  Paginated list of all Dashboards.
     * @summary List Dashboards
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1DashboardsGet(teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DashboardPaginationOut>>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1VariablesVariableIdDashboardsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DashboardPaginationOut>>;
};
/**
 * DashboardsApi - factory interface
 * @export
 */
export declare const DashboardsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {string} dashboardId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut(dashboardId: string, featureId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Create an Dashboard.
     * @summary Create Dashboard Post
     * @param {DashboardIn} dashboardIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDashboardPostV1DashboardsPost(dashboardIn: DashboardIn, teamId?: string, options?: any): AxiosPromise<DashboardOut>;
    /**
     * Delete a Dashboard.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dashboard
     * @param {string} dashboardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDashboardV1DashboardsDashboardIdDelete(dashboardId: string, options?: any): AxiosPromise<void>;
    /**
     * Get Dashboard.
     * @summary Get Dashboard
     * @param {string} dashboardId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDashboardV1DashboardsDashboardIdGet(dashboardId: string, options?: any): AxiosPromise<DashboardOut>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {string} dashboardId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet(dashboardId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List Dashboards.  Paginated list of all Dashboards.
     * @summary List Dashboards
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1DashboardsGet(teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: any): AxiosPromise<DashboardPaginationOut>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1VariablesVariableIdDashboardsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: any): AxiosPromise<DashboardPaginationOut>;
};
/**
 * Request parameters for addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut operation in DashboardsApi.
 * @export
 * @interface DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest
 */
export interface DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut
     */
    readonly dashboardId: string;
    /**
     *
     * @type {string}
     * @memberof DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut
     */
    readonly featureId: string;
    /**
     *
     * @type {string}
     * @memberof DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createDashboardPostV1DashboardsPost operation in DashboardsApi.
 * @export
 * @interface DashboardsApiCreateDashboardPostV1DashboardsPostRequest
 */
export interface DashboardsApiCreateDashboardPostV1DashboardsPostRequest {
    /**
     *
     * @type {DashboardIn}
     * @memberof DashboardsApiCreateDashboardPostV1DashboardsPost
     */
    readonly dashboardIn: DashboardIn;
    /**
     *
     * @type {string}
     * @memberof DashboardsApiCreateDashboardPostV1DashboardsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteDashboardV1DashboardsDashboardIdDelete operation in DashboardsApi.
 * @export
 * @interface DashboardsApiDeleteDashboardV1DashboardsDashboardIdDeleteRequest
 */
export interface DashboardsApiDeleteDashboardV1DashboardsDashboardIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof DashboardsApiDeleteDashboardV1DashboardsDashboardIdDelete
     */
    readonly dashboardId: string;
}
/**
 * Request parameters for getDashboardV1DashboardsDashboardIdGet operation in DashboardsApi.
 * @export
 * @interface DashboardsApiGetDashboardV1DashboardsDashboardIdGetRequest
 */
export interface DashboardsApiGetDashboardV1DashboardsDashboardIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof DashboardsApiGetDashboardV1DashboardsDashboardIdGet
     */
    readonly dashboardId: string;
}
/**
 * Request parameters for listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet operation in DashboardsApi.
 * @export
 * @interface DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest
 */
export interface DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly dashboardId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listDashboardsV1DashboardsGet operation in DashboardsApi.
 * @export
 * @interface DashboardsApiListDashboardsV1DashboardsGetRequest
 */
export interface DashboardsApiListDashboardsV1DashboardsGetRequest {
    /**
     *
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DashboardSortEnum}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly orderBy?: DashboardSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1DashboardsGet
     */
    readonly sortBy?: string;
}
/**
 * Request parameters for listDashboardsV1VariablesVariableIdDashboardsGet operation in DashboardsApi.
 * @export
 * @interface DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGetRequest
 */
export interface DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGetRequest {
    /**
     *
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly variableId: string;
    /**
     *
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DashboardSortEnum}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly orderBy?: DashboardSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly sortBy?: string;
}
/**
 * DashboardsApi - object-oriented interface
 * @export
 * @class DashboardsApi
 * @extends {BaseAPI}
 */
export declare class DashboardsApi extends BaseAPI {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut(requestParameters: DashboardsApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Create an Dashboard.
     * @summary Create Dashboard Post
     * @param {DashboardsApiCreateDashboardPostV1DashboardsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    createDashboardPostV1DashboardsPost(requestParameters: DashboardsApiCreateDashboardPostV1DashboardsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DashboardOut>>;
    /**
     * Delete a Dashboard.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dashboard
     * @param {DashboardsApiDeleteDashboardV1DashboardsDashboardIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    deleteDashboardV1DashboardsDashboardIdDelete(requestParameters: DashboardsApiDeleteDashboardV1DashboardsDashboardIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get Dashboard.
     * @summary Get Dashboard
     * @param {DashboardsApiGetDashboardV1DashboardsDashboardIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    getDashboardV1DashboardsDashboardIdGet(requestParameters: DashboardsApiGetDashboardV1DashboardsDashboardIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DashboardOut>>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet(requestParameters: DashboardsApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List Dashboards.  Paginated list of all Dashboards.
     * @summary List Dashboards
     * @param {DashboardsApiListDashboardsV1DashboardsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    listDashboardsV1DashboardsGet(requestParameters?: DashboardsApiListDashboardsV1DashboardsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DashboardPaginationOut>>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DashboardsApi
     */
    listDashboardsV1VariablesVariableIdDashboardsGet(requestParameters: DashboardsApiListDashboardsV1VariablesVariableIdDashboardsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DashboardPaginationOut>>;
}
/**
 * DatasetsApi - axios parameter creator
 * @export
 */
export declare const DatasetsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {boolean} [index] If true, then set the feature as the dataset index.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut: (datasetId: string, featureId: string, index?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add a parent dataset.
     * @summary Add Parent Dataset
     * @param {string} datasetId
     * @param {string} parentId
     * @param {boolean} [reconcileFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addParentDatasetV1DatasetsDatasetIdParentsParentIdPut: (datasetId: string, parentId: string, reconcileFeatures?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {string} datasetId
     * @param {Array<FeatureIn>} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost: (datasetId: string, featureIn: Array<FeatureIn>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} datasetId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost: (datasetId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new Dataset.
     * @summary Create Dataset
     * @param {DatasetIn} datasetIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDatasetV1DatasetsPost: (datasetIn: DatasetIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a Dataset.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDatasetV1DatasetsDatasetIdDelete: (datasetId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {string} datasetId
     * @param {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete} bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: (datasetId: string, bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a Dataset.
     * @summary Get Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDatasetV1DatasetsDatasetIdGet: (datasetId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet: (datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet: (datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get parents of this dataset.
     * @summary List Dataset Parents
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetParentsV1DatasetsDatasetIdParentsGet: (datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get all Datasets.
     * @summary List Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetsV1DatasetsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, variableRelationship?: string, featureRelationship?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get models that use the dataset either directly or through child datasets.
     * @summary List Models Using Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsUsingDatasetV1DatasetsDatasetIdModelsGet: (datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserDatasetsV1UsersUserIdDatasetsGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify Dataset resource with partial update.
     * @summary Patch Dataset
     * @param {string} datasetId
     * @param {PatchDatasetOp | Array<PatchDatasetOp>} patchDatasetOpArrayPatchDatasetOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchDatasetV1DatasetsDatasetIdPatch: (datasetId: string, patchDatasetOpArrayPatchDatasetOp: PatchDatasetOp | Array<PatchDatasetOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete: (datasetId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Remove Object Tag From Dataset
     * @param {string} datasetId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete: (datasetId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a parent dataset.
     * @summary Remove Parent Dataset
     * @param {string} datasetId
     * @param {string} parentId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeParentDatasetV1DatasetsDatasetIdParentsParentIdDelete: (datasetId: string, parentId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Replace a Dataset.
     * @summary Replace Dataset
     * @param {string} datasetId
     * @param {DatasetIn} datasetIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceDatasetV1DatasetsDatasetIdPut: (datasetId: string, datasetIn: DatasetIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Tag Study With Object
     * @param {string} datasetId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut: (datasetId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * DatasetsApi - functional programming interface
 * @export
 */
export declare const DatasetsApiFp: (configuration?: Configuration) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {boolean} [index] If true, then set the feature as the dataset index.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut(datasetId: string, featureId: string, index?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Add a parent dataset.
     * @summary Add Parent Dataset
     * @param {string} datasetId
     * @param {string} parentId
     * @param {boolean} [reconcileFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addParentDatasetV1DatasetsDatasetIdParentsParentIdPut(datasetId: string, parentId: string, reconcileFeatures?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {string} datasetId
     * @param {Array<FeatureIn>} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost(datasetId: string, featureIn: Array<FeatureIn>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FeatureOut>>>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} datasetId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost(datasetId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AssociationOut>>>;
    /**
     * Create a new Dataset.
     * @summary Create Dataset
     * @param {DatasetIn} datasetIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDatasetV1DatasetsPost(datasetIn: DatasetIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetOut>>;
    /**
     * Delete a Dataset.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDatasetV1DatasetsDatasetIdDelete(datasetId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {string} datasetId
     * @param {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete} bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete(datasetId: string, bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get a Dataset.
     * @summary Get Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDatasetV1DatasetsDatasetIdGet(datasetId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetOut>>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetPaginationOut>>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * Get parents of this dataset.
     * @summary List Dataset Parents
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetParentsV1DatasetsDatasetIdParentsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetPaginationOut>>;
    /**
     * Get all Datasets.
     * @summary List Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetsV1DatasetsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, variableRelationship?: string, featureRelationship?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetPaginationOut>>;
    /**
     * Get models that use the dataset either directly or through child datasets.
     * @summary List Models Using Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsUsingDatasetV1DatasetsDatasetIdModelsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserDatasetsV1UsersUserIdDatasetsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetPaginationOut>>;
    /**
     * Modify Dataset resource with partial update.
     * @summary Patch Dataset
     * @param {string} datasetId
     * @param {PatchDatasetOp | Array<PatchDatasetOp>} patchDatasetOpArrayPatchDatasetOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchDatasetV1DatasetsDatasetIdPatch(datasetId: string, patchDatasetOpArrayPatchDatasetOp: PatchDatasetOp | Array<PatchDatasetOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete(datasetId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Remove Object Tag From Dataset
     * @param {string} datasetId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete(datasetId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Remove a parent dataset.
     * @summary Remove Parent Dataset
     * @param {string} datasetId
     * @param {string} parentId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeParentDatasetV1DatasetsDatasetIdParentsParentIdDelete(datasetId: string, parentId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Replace a Dataset.
     * @summary Replace Dataset
     * @param {string} datasetId
     * @param {DatasetIn} datasetIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceDatasetV1DatasetsDatasetIdPut(datasetId: string, datasetIn: DatasetIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetOut>>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Tag Study With Object
     * @param {string} datasetId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut(datasetId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * DatasetsApi - factory interface
 * @export
 */
export declare const DatasetsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {boolean} [index] If true, then set the feature as the dataset index.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut(datasetId: string, featureId: string, index?: boolean, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Add a parent dataset.
     * @summary Add Parent Dataset
     * @param {string} datasetId
     * @param {string} parentId
     * @param {boolean} [reconcileFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addParentDatasetV1DatasetsDatasetIdParentsParentIdPut(datasetId: string, parentId: string, reconcileFeatures?: boolean, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {string} datasetId
     * @param {Array<FeatureIn>} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost(datasetId: string, featureIn: Array<FeatureIn>, teamId?: string, options?: any): AxiosPromise<Array<FeatureOut>>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} datasetId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost(datasetId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, teamId?: string, options?: any): AxiosPromise<Array<AssociationOut>>;
    /**
     * Create a new Dataset.
     * @summary Create Dataset
     * @param {DatasetIn} datasetIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createDatasetV1DatasetsPost(datasetIn: DatasetIn, teamId?: string, options?: any): AxiosPromise<DatasetOut>;
    /**
     * Delete a Dataset.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteDatasetV1DatasetsDatasetIdDelete(datasetId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {string} datasetId
     * @param {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete} bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete(datasetId: string, bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get a Dataset.
     * @summary Get Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDatasetV1DatasetsDatasetIdGet(datasetId: string, teamId?: string, options?: any): AxiosPromise<DatasetOut>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<DatasetPaginationOut>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * Get parents of this dataset.
     * @summary List Dataset Parents
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetParentsV1DatasetsDatasetIdParentsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, options?: any): AxiosPromise<DatasetPaginationOut>;
    /**
     * Get all Datasets.
     * @summary List Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetsV1DatasetsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, variableRelationship?: string, featureRelationship?: string, teamId?: string, options?: any): AxiosPromise<DatasetPaginationOut>;
    /**
     * Get models that use the dataset either directly or through child datasets.
     * @summary List Models Using Dataset
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsUsingDatasetV1DatasetsDatasetIdModelsGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserDatasetsV1UsersUserIdDatasetsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<DatasetPaginationOut>;
    /**
     * Modify Dataset resource with partial update.
     * @summary Patch Dataset
     * @param {string} datasetId
     * @param {PatchDatasetOp | Array<PatchDatasetOp>} patchDatasetOpArrayPatchDatasetOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchDatasetV1DatasetsDatasetIdPatch(datasetId: string, patchDatasetOpArrayPatchDatasetOp: PatchDatasetOp | Array<PatchDatasetOp>, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete(datasetId: string, featureId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Remove Object Tag From Dataset
     * @param {string} datasetId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete(datasetId: string, tagObjectId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Remove a parent dataset.
     * @summary Remove Parent Dataset
     * @param {string} datasetId
     * @param {string} parentId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeParentDatasetV1DatasetsDatasetIdParentsParentIdDelete(datasetId: string, parentId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Replace a Dataset.
     * @summary Replace Dataset
     * @param {string} datasetId
     * @param {DatasetIn} datasetIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceDatasetV1DatasetsDatasetIdPut(datasetId: string, datasetIn: DatasetIn, teamId?: string, options?: any): AxiosPromise<DatasetOut>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Tag Study With Object
     * @param {string} datasetId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut(datasetId: string, tagObjectId: string, teamId?: string, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut operation in DatasetsApi.
 * @export
 * @interface DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest
 */
export interface DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly featureId: string;
    /**
     * If true, then set the feature as the dataset index.
     * @type {boolean}
     * @memberof DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly index?: boolean;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for addParentDatasetV1DatasetsDatasetIdParentsParentIdPut operation in DatasetsApi.
 * @export
 * @interface DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPutRequest
 */
export interface DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPut
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPut
     */
    readonly parentId: string;
    /**
     *
     * @type {boolean}
     * @memberof DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPut
     */
    readonly reconcileFeatures?: boolean;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost operation in DatasetsApi.
 * @export
 * @interface DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest
 */
export interface DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost
     */
    readonly datasetId: string;
    /**
     *
     * @type {Array<FeatureIn>}
     * @memberof DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost
     */
    readonly featureIn: Array<FeatureIn>;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createAssociationsV1DatasetsDatasetIdAssociationsPost operation in DatasetsApi.
 * @export
 * @interface DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest
 */
export interface DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPost
     */
    readonly datasetId: string;
    /**
     *
     * @type {AssociationIn | Array<AssociationIn>}
     * @memberof DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPost
     */
    readonly associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createDatasetV1DatasetsPost operation in DatasetsApi.
 * @export
 * @interface DatasetsApiCreateDatasetV1DatasetsPostRequest
 */
export interface DatasetsApiCreateDatasetV1DatasetsPostRequest {
    /**
     *
     * @type {DatasetIn}
     * @memberof DatasetsApiCreateDatasetV1DatasetsPost
     */
    readonly datasetIn: DatasetIn;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiCreateDatasetV1DatasetsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteDatasetV1DatasetsDatasetIdDelete operation in DatasetsApi.
 * @export
 * @interface DatasetsApiDeleteDatasetV1DatasetsDatasetIdDeleteRequest
 */
export interface DatasetsApiDeleteDatasetV1DatasetsDatasetIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiDeleteDatasetV1DatasetsDatasetIdDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiDeleteDatasetV1DatasetsDatasetIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete operation in DatasetsApi.
 * @export
 * @interface DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest
 */
export interface DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete}
     * @memberof DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    readonly bodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete: BodyDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getDatasetV1DatasetsDatasetIdGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiGetDatasetV1DatasetsDatasetIdGetRequest
 */
export interface DatasetsApiGetDatasetV1DatasetsDatasetIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiGetDatasetV1DatasetsDatasetIdGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiGetDatasetV1DatasetsDatasetIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsV1DatasetsDatasetIdAssociationsGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest
 */
export interface DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAuthenticatedUserDatasetsV1UserDatasetsGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest
 */
export interface DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DatasetSortEnum}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly orderBy?: DatasetSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly sortBy?: string;
    /**
     * Filter datasets with variable tag
     * @type {string}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly variableTag?: string;
    /**
     * Filter datasets with concept tag
     * @type {string}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest
 */
export interface DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
}
/**
 * Request parameters for listDatasetParentsV1DatasetsDatasetIdParentsGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGetRequest
 */
export interface DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGetRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DatasetSortEnum}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly orderBy?: DatasetSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly sortBy?: string;
    /**
     * Filter datasets with variable tag
     * @type {string}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly variableTag?: string;
    /**
     * Filter datasets with concept tag
     * @type {string}
     * @memberof DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGet
     */
    readonly conceptTag?: string;
}
/**
 * Request parameters for listDatasetsV1DatasetsGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListDatasetsV1DatasetsGetRequest
 */
export interface DatasetsApiListDatasetsV1DatasetsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DatasetSortEnum}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly orderBy?: DatasetSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly sortBy?: string;
    /**
     * Filter datasets with variable tag
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly variableTag?: string;
    /**
     * Filter datasets with concept tag
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly conceptTag?: string;
    /**
     * Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly variableRelationship?: string;
    /**
     * Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly featureRelationship?: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListDatasetsV1DatasetsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listModelsUsingDatasetV1DatasetsDatasetIdModelsGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGetRequest
 */
export interface DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGetRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGet
     */
    readonly containsVariableId?: string;
}
/**
 * Request parameters for listUserDatasetsV1UsersUserIdDatasetsGet operation in DatasetsApi.
 * @export
 * @interface DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGetRequest
 */
export interface DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGetRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DatasetSortEnum}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly orderBy?: DatasetSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly sortBy?: string;
    /**
     * Filter datasets with variable tag
     * @type {string}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly variableTag?: string;
    /**
     * Filter datasets with concept tag
     * @type {string}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchDatasetV1DatasetsDatasetIdPatch operation in DatasetsApi.
 * @export
 * @interface DatasetsApiPatchDatasetV1DatasetsDatasetIdPatchRequest
 */
export interface DatasetsApiPatchDatasetV1DatasetsDatasetIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiPatchDatasetV1DatasetsDatasetIdPatch
     */
    readonly datasetId: string;
    /**
     *
     * @type {PatchDatasetOp | Array<PatchDatasetOp>}
     * @memberof DatasetsApiPatchDatasetV1DatasetsDatasetIdPatch
     */
    readonly patchDatasetOpArrayPatchDatasetOp: PatchDatasetOp | Array<PatchDatasetOp>;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiPatchDatasetV1DatasetsDatasetIdPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete operation in DatasetsApi.
 * @export
 * @interface DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest
 */
export interface DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete
     */
    readonly featureId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for removeObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete operation in DatasetsApi.
 * @export
 * @interface DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDeleteRequest
 */
export interface DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete
     */
    readonly tagObjectId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for removeParentDatasetV1DatasetsDatasetIdParentsParentIdDelete operation in DatasetsApi.
 * @export
 * @interface DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDeleteRequest
 */
export interface DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDelete
     */
    readonly parentId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for replaceDatasetV1DatasetsDatasetIdPut operation in DatasetsApi.
 * @export
 * @interface DatasetsApiReplaceDatasetV1DatasetsDatasetIdPutRequest
 */
export interface DatasetsApiReplaceDatasetV1DatasetsDatasetIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiReplaceDatasetV1DatasetsDatasetIdPut
     */
    readonly datasetId: string;
    /**
     *
     * @type {DatasetIn}
     * @memberof DatasetsApiReplaceDatasetV1DatasetsDatasetIdPut
     */
    readonly datasetIn: DatasetIn;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiReplaceDatasetV1DatasetsDatasetIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for tagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut operation in DatasetsApi.
 * @export
 * @interface DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPutRequest
 */
export interface DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut
     */
    readonly tagObjectId: string;
    /**
     *
     * @type {string}
     * @memberof DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut
     */
    readonly teamId?: string;
}
/**
 * DatasetsApi - object-oriented interface
 * @export
 * @class DatasetsApi
 * @extends {BaseAPI}
 */
export declare class DatasetsApi extends BaseAPI {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut(requestParameters: DatasetsApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Add a parent dataset.
     * @summary Add Parent Dataset
     * @param {DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    addParentDatasetV1DatasetsDatasetIdParentsParentIdPut(requestParameters: DatasetsApiAddParentDatasetV1DatasetsDatasetIdParentsParentIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost(requestParameters: DatasetsApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeatureOut[]>>;
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 1000 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    createAssociationsV1DatasetsDatasetIdAssociationsPost(requestParameters: DatasetsApiCreateAssociationsV1DatasetsDatasetIdAssociationsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut[]>>;
    /**
     * Create a new Dataset.
     * @summary Create Dataset
     * @param {DatasetsApiCreateDatasetV1DatasetsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    createDatasetV1DatasetsPost(requestParameters: DatasetsApiCreateDatasetV1DatasetsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetOut>>;
    /**
     * Delete a Dataset.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Dataset
     * @param {DatasetsApiDeleteDatasetV1DatasetsDatasetIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    deleteDatasetV1DatasetsDatasetIdDelete(requestParameters: DatasetsApiDeleteDatasetV1DatasetsDatasetIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Interaction Associations
     * @param {DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    deleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDelete(requestParameters: DatasetsApiDeleteInteractionAssociationsV1DatasetsDatasetIdAssociationsDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get a Dataset.
     * @summary Get Dataset
     * @param {DatasetsApiGetDatasetV1DatasetsDatasetIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    getDatasetV1DatasetsDatasetIdGet(requestParameters: DatasetsApiGetDatasetV1DatasetsDatasetIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetOut>>;
    /**
     * Get associations derived from the Dataset.
     * @summary List Associations
     * @param {DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listAssociationsV1DatasetsDatasetIdAssociationsGet(requestParameters: DatasetsApiListAssociationsV1DatasetsDatasetIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet(requestParameters?: DatasetsApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetPaginationOut>>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet(requestParameters: DatasetsApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * Get parents of this dataset.
     * @summary List Dataset Parents
     * @param {DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listDatasetParentsV1DatasetsDatasetIdParentsGet(requestParameters: DatasetsApiListDatasetParentsV1DatasetsDatasetIdParentsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetPaginationOut>>;
    /**
     * Get all Datasets.
     * @summary List Datasets
     * @param {DatasetsApiListDatasetsV1DatasetsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listDatasetsV1DatasetsGet(requestParameters?: DatasetsApiListDatasetsV1DatasetsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetPaginationOut>>;
    /**
     * Get models that use the dataset either directly or through child datasets.
     * @summary List Models Using Dataset
     * @param {DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listModelsUsingDatasetV1DatasetsDatasetIdModelsGet(requestParameters: DatasetsApiListModelsUsingDatasetV1DatasetsDatasetIdModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    listUserDatasetsV1UsersUserIdDatasetsGet(requestParameters: DatasetsApiListUserDatasetsV1UsersUserIdDatasetsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetPaginationOut>>;
    /**
     * Modify Dataset resource with partial update.
     * @summary Patch Dataset
     * @param {DatasetsApiPatchDatasetV1DatasetsDatasetIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    patchDatasetV1DatasetsDatasetIdPatch(requestParameters: DatasetsApiPatchDatasetV1DatasetsDatasetIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete(requestParameters: DatasetsApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Remove Object Tag From Dataset
     * @param {DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    removeObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDelete(requestParameters: DatasetsApiRemoveObjectTagFromDatasetV1DatasetsDatasetIdObjectTagsTagObjectIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Remove a parent dataset.
     * @summary Remove Parent Dataset
     * @param {DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    removeParentDatasetV1DatasetsDatasetIdParentsParentIdDelete(requestParameters: DatasetsApiRemoveParentDatasetV1DatasetsDatasetIdParentsParentIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Replace a Dataset.
     * @summary Replace Dataset
     * @param {DatasetsApiReplaceDatasetV1DatasetsDatasetIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    replaceDatasetV1DatasetsDatasetIdPut(requestParameters: DatasetsApiReplaceDatasetV1DatasetsDatasetIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetOut>>;
    /**
     * Tag the dataset with object with provided id.
     * @summary Tag Study With Object
     * @param {DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DatasetsApi
     */
    tagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPut(requestParameters: DatasetsApiTagStudyWithObjectV1DatasetsDatasetIdObjectTagsTagObjectIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
}
/**
 * EnterpriseApi - axios parameter creator
 * @export
 */
export declare const EnterpriseApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new integration.
     * @summary Create Integration
     * @param {IntegrationIn} integrationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createIntegrationV1EnterpriseIntegrationsPost: (integrationIn: IntegrationIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new message.
     * @summary Create Message
     * @param {MessageIn} messageIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMessageV1EnterpriseMessagesPost: (messageIn: MessageIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get the Enterprise.
     * @summary Get Enterprise
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseV1EnterpriseGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Integration.
     * @summary Get Integration
     * @param {string} integrationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIntegrationV1EnterpriseIntegrationsIntegrationIdGet: (integrationId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get team integrations.
     * @summary Get Integrations
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIntegrationsV1EnterpriseIntegrationsGet: (teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get a Message.
     * @summary Get Message
     * @param {string} messageId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMessageV1EnterpriseMessagesMessageIdGet: (messageId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update Enterprise.
     * @summary Update Enterprise
     * @param {EnterpriseIn} enterpriseIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateEnterpriseV1EnterprisePatch: (enterpriseIn: EnterpriseIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update Integration.
     * @summary Update Integration
     * @param {string} integrationId
     * @param {IntegrationIn} integrationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch: (integrationId: string, integrationIn: IntegrationIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update a Message.
     * @summary Update Message
     * @param {string} messageId
     * @param {MessageIn} messageIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateMessageV1EnterpriseMessagesMessageIdPatch: (messageId: string, messageIn: MessageIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * EnterpriseApi - functional programming interface
 * @export
 */
export declare const EnterpriseApiFp: (configuration?: Configuration) => {
    /**
     * Create a new integration.
     * @summary Create Integration
     * @param {IntegrationIn} integrationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createIntegrationV1EnterpriseIntegrationsPost(integrationIn: IntegrationIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Integration>>;
    /**
     * Create a new message.
     * @summary Create Message
     * @param {MessageIn} messageIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMessageV1EnterpriseMessagesPost(messageIn: MessageIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MessageOut>>;
    /**
     * Get the Enterprise.
     * @summary Get Enterprise
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseV1EnterpriseGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Enterprise>>;
    /**
     * Get an Integration.
     * @summary Get Integration
     * @param {string} integrationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIntegrationV1EnterpriseIntegrationsIntegrationIdGet(integrationId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Integration>>;
    /**
     * Get team integrations.
     * @summary Get Integrations
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIntegrationsV1EnterpriseIntegrationsGet(teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Integration>>>;
    /**
     * Get a Message.
     * @summary Get Message
     * @param {string} messageId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMessageV1EnterpriseMessagesMessageIdGet(messageId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MessageOut>>;
    /**
     * Update Enterprise.
     * @summary Update Enterprise
     * @param {EnterpriseIn} enterpriseIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateEnterpriseV1EnterprisePatch(enterpriseIn: EnterpriseIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Enterprise>>;
    /**
     * Update Integration.
     * @summary Update Integration
     * @param {string} integrationId
     * @param {IntegrationIn} integrationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch(integrationId: string, integrationIn: IntegrationIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Integration>>;
    /**
     * Update a Message.
     * @summary Update Message
     * @param {string} messageId
     * @param {MessageIn} messageIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateMessageV1EnterpriseMessagesMessageIdPatch(messageId: string, messageIn: MessageIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<MessageOut>>;
};
/**
 * EnterpriseApi - factory interface
 * @export
 */
export declare const EnterpriseApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new integration.
     * @summary Create Integration
     * @param {IntegrationIn} integrationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createIntegrationV1EnterpriseIntegrationsPost(integrationIn: IntegrationIn, teamId?: string, options?: any): AxiosPromise<Integration>;
    /**
     * Create a new message.
     * @summary Create Message
     * @param {MessageIn} messageIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMessageV1EnterpriseMessagesPost(messageIn: MessageIn, teamId?: string, options?: any): AxiosPromise<MessageOut>;
    /**
     * Get the Enterprise.
     * @summary Get Enterprise
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getEnterpriseV1EnterpriseGet(options?: any): AxiosPromise<Enterprise>;
    /**
     * Get an Integration.
     * @summary Get Integration
     * @param {string} integrationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIntegrationV1EnterpriseIntegrationsIntegrationIdGet(integrationId: string, teamId?: string, options?: any): AxiosPromise<Integration>;
    /**
     * Get team integrations.
     * @summary Get Integrations
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIntegrationsV1EnterpriseIntegrationsGet(teamId?: string, options?: any): AxiosPromise<Array<Integration>>;
    /**
     * Get a Message.
     * @summary Get Message
     * @param {string} messageId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMessageV1EnterpriseMessagesMessageIdGet(messageId: string, teamId?: string, options?: any): AxiosPromise<MessageOut>;
    /**
     * Update Enterprise.
     * @summary Update Enterprise
     * @param {EnterpriseIn} enterpriseIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateEnterpriseV1EnterprisePatch(enterpriseIn: EnterpriseIn, options?: any): AxiosPromise<Enterprise>;
    /**
     * Update Integration.
     * @summary Update Integration
     * @param {string} integrationId
     * @param {IntegrationIn} integrationIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch(integrationId: string, integrationIn: IntegrationIn, teamId?: string, options?: any): AxiosPromise<Integration>;
    /**
     * Update a Message.
     * @summary Update Message
     * @param {string} messageId
     * @param {MessageIn} messageIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateMessageV1EnterpriseMessagesMessageIdPatch(messageId: string, messageIn: MessageIn, teamId?: string, options?: any): AxiosPromise<MessageOut>;
};
/**
 * Request parameters for createIntegrationV1EnterpriseIntegrationsPost operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiCreateIntegrationV1EnterpriseIntegrationsPostRequest
 */
export interface EnterpriseApiCreateIntegrationV1EnterpriseIntegrationsPostRequest {
    /**
     *
     * @type {IntegrationIn}
     * @memberof EnterpriseApiCreateIntegrationV1EnterpriseIntegrationsPost
     */
    readonly integrationIn: IntegrationIn;
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiCreateIntegrationV1EnterpriseIntegrationsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createMessageV1EnterpriseMessagesPost operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiCreateMessageV1EnterpriseMessagesPostRequest
 */
export interface EnterpriseApiCreateMessageV1EnterpriseMessagesPostRequest {
    /**
     *
     * @type {MessageIn}
     * @memberof EnterpriseApiCreateMessageV1EnterpriseMessagesPost
     */
    readonly messageIn: MessageIn;
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiCreateMessageV1EnterpriseMessagesPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getIntegrationV1EnterpriseIntegrationsIntegrationIdGet operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiGetIntegrationV1EnterpriseIntegrationsIntegrationIdGetRequest
 */
export interface EnterpriseApiGetIntegrationV1EnterpriseIntegrationsIntegrationIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiGetIntegrationV1EnterpriseIntegrationsIntegrationIdGet
     */
    readonly integrationId: string;
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiGetIntegrationV1EnterpriseIntegrationsIntegrationIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getIntegrationsV1EnterpriseIntegrationsGet operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiGetIntegrationsV1EnterpriseIntegrationsGetRequest
 */
export interface EnterpriseApiGetIntegrationsV1EnterpriseIntegrationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiGetIntegrationsV1EnterpriseIntegrationsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getMessageV1EnterpriseMessagesMessageIdGet operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiGetMessageV1EnterpriseMessagesMessageIdGetRequest
 */
export interface EnterpriseApiGetMessageV1EnterpriseMessagesMessageIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiGetMessageV1EnterpriseMessagesMessageIdGet
     */
    readonly messageId: string;
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiGetMessageV1EnterpriseMessagesMessageIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for updateEnterpriseV1EnterprisePatch operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiUpdateEnterpriseV1EnterprisePatchRequest
 */
export interface EnterpriseApiUpdateEnterpriseV1EnterprisePatchRequest {
    /**
     *
     * @type {EnterpriseIn}
     * @memberof EnterpriseApiUpdateEnterpriseV1EnterprisePatch
     */
    readonly enterpriseIn: EnterpriseIn;
}
/**
 * Request parameters for updateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatchRequest
 */
export interface EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch
     */
    readonly integrationId: string;
    /**
     *
     * @type {IntegrationIn}
     * @memberof EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch
     */
    readonly integrationIn: IntegrationIn;
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for updateMessageV1EnterpriseMessagesMessageIdPatch operation in EnterpriseApi.
 * @export
 * @interface EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatchRequest
 */
export interface EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatch
     */
    readonly messageId: string;
    /**
     *
     * @type {MessageIn}
     * @memberof EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatch
     */
    readonly messageIn: MessageIn;
    /**
     *
     * @type {string}
     * @memberof EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatch
     */
    readonly teamId?: string;
}
/**
 * EnterpriseApi - object-oriented interface
 * @export
 * @class EnterpriseApi
 * @extends {BaseAPI}
 */
export declare class EnterpriseApi extends BaseAPI {
    /**
     * Create a new integration.
     * @summary Create Integration
     * @param {EnterpriseApiCreateIntegrationV1EnterpriseIntegrationsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    createIntegrationV1EnterpriseIntegrationsPost(requestParameters: EnterpriseApiCreateIntegrationV1EnterpriseIntegrationsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Integration>>;
    /**
     * Create a new message.
     * @summary Create Message
     * @param {EnterpriseApiCreateMessageV1EnterpriseMessagesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    createMessageV1EnterpriseMessagesPost(requestParameters: EnterpriseApiCreateMessageV1EnterpriseMessagesPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageOut>>;
    /**
     * Get the Enterprise.
     * @summary Get Enterprise
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    getEnterpriseV1EnterpriseGet(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Enterprise>>;
    /**
     * Get an Integration.
     * @summary Get Integration
     * @param {EnterpriseApiGetIntegrationV1EnterpriseIntegrationsIntegrationIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    getIntegrationV1EnterpriseIntegrationsIntegrationIdGet(requestParameters: EnterpriseApiGetIntegrationV1EnterpriseIntegrationsIntegrationIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Integration>>;
    /**
     * Get team integrations.
     * @summary Get Integrations
     * @param {EnterpriseApiGetIntegrationsV1EnterpriseIntegrationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    getIntegrationsV1EnterpriseIntegrationsGet(requestParameters?: EnterpriseApiGetIntegrationsV1EnterpriseIntegrationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Integration[]>>;
    /**
     * Get a Message.
     * @summary Get Message
     * @param {EnterpriseApiGetMessageV1EnterpriseMessagesMessageIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    getMessageV1EnterpriseMessagesMessageIdGet(requestParameters: EnterpriseApiGetMessageV1EnterpriseMessagesMessageIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageOut>>;
    /**
     * Update Enterprise.
     * @summary Update Enterprise
     * @param {EnterpriseApiUpdateEnterpriseV1EnterprisePatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    updateEnterpriseV1EnterprisePatch(requestParameters: EnterpriseApiUpdateEnterpriseV1EnterprisePatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Enterprise>>;
    /**
     * Update Integration.
     * @summary Update Integration
     * @param {EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    updateIntegrationV1EnterpriseIntegrationsIntegrationIdPatch(requestParameters: EnterpriseApiUpdateIntegrationV1EnterpriseIntegrationsIntegrationIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<Integration>>;
    /**
     * Update a Message.
     * @summary Update Message
     * @param {EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof EnterpriseApi
     */
    updateMessageV1EnterpriseMessagesMessageIdPatch(requestParameters: EnterpriseApiUpdateMessageV1EnterpriseMessagesMessageIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<MessageOut>>;
}
/**
 * FeaturesApi - axios parameter creator
 * @export
 */
export declare const FeaturesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {string} dashboardId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut: (dashboardId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {boolean} [index] If true, then set the feature as the dataset index.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut: (datasetId: string, featureId: string, index?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {string} datasetId
     * @param {Array<FeatureIn>} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost: (datasetId: string, featureIn: Array<FeatureIn>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new Feature.
     * @summary Create Feature
     * @param {FeatureIn} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createFeatureV1FeaturesPost: (featureIn: FeatureIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a feature.
     * @summary Delete Feature
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFeatureV1FeaturesFeatureIdDelete: (featureId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get feature.
     * @summary Get Feature
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFeatureV1FeaturesFeatureIdGet: (featureId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {string} dashboardId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet: (dashboardId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet: (datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Features.
     * @summary List Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFeaturesV1FeaturesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet: (modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserFeaturesV1UsersUserIdFeaturesGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify Feature resource with partial update.  Updating `feature_statistics` will replace all current feature statistics.
     * @summary Patch Feature
     * @param {string} featureId
     * @param {PatchFeatureOp | Array<PatchFeatureOp>} patchFeatureOpArrayPatchFeatureOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchFeatureV1FeaturesFeatureIdPatch: (featureId: string, patchFeatureOpArrayPatchFeatureOp: PatchFeatureOp | Array<PatchFeatureOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Batch feature patching.
     * @summary Patch Multiple Features
     * @param {Array<BulkPatchFeatureOp>} bulkPatchFeatureOp
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchMultipleFeaturesV1FeaturesPatch: (bulkPatchFeatureOp: Array<BulkPatchFeatureOp>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete: (datasetId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Replace a Feature.
     * @summary Replace Feature
     * @param {string} featureId
     * @param {FeatureIn} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceFeatureV1FeaturesFeatureIdPut: (featureId: string, featureIn: FeatureIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FeaturesApi - functional programming interface
 * @export
 */
export declare const FeaturesApiFp: (configuration?: Configuration) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {string} dashboardId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut(dashboardId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {boolean} [index] If true, then set the feature as the dataset index.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut(datasetId: string, featureId: string, index?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {string} datasetId
     * @param {Array<FeatureIn>} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost(datasetId: string, featureIn: Array<FeatureIn>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<FeatureOut>>>;
    /**
     * Create a new Feature.
     * @summary Create Feature
     * @param {FeatureIn} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createFeatureV1FeaturesPost(featureIn: FeatureIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeatureOut>>;
    /**
     * Delete a feature.
     * @summary Delete Feature
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFeatureV1FeaturesFeatureIdDelete(featureId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get feature.
     * @summary Get Feature
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFeatureV1FeaturesFeatureIdGet(featureId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeatureOut>>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {string} dashboardId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet(dashboardId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List Features.
     * @summary List Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFeaturesV1FeaturesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserFeaturesV1UsersUserIdFeaturesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * Modify Feature resource with partial update.  Updating `feature_statistics` will replace all current feature statistics.
     * @summary Patch Feature
     * @param {string} featureId
     * @param {PatchFeatureOp | Array<PatchFeatureOp>} patchFeatureOpArrayPatchFeatureOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchFeatureV1FeaturesFeatureIdPatch(featureId: string, patchFeatureOpArrayPatchFeatureOp: PatchFeatureOp | Array<PatchFeatureOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Batch feature patching.
     * @summary Patch Multiple Features
     * @param {Array<BulkPatchFeatureOp>} bulkPatchFeatureOp
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchMultipleFeaturesV1FeaturesPatch(bulkPatchFeatureOp: Array<BulkPatchFeatureOp>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete(datasetId: string, featureId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Replace a Feature.
     * @summary Replace Feature
     * @param {string} featureId
     * @param {FeatureIn} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceFeatureV1FeaturesFeatureIdPut(featureId: string, featureIn: FeatureIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeatureOut>>;
};
/**
 * FeaturesApi - factory interface
 * @export
 */
export declare const FeaturesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {string} dashboardId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut(dashboardId: string, featureId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {boolean} [index] If true, then set the feature as the dataset index.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut(datasetId: string, featureId: string, index?: boolean, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {string} datasetId
     * @param {Array<FeatureIn>} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost(datasetId: string, featureIn: Array<FeatureIn>, teamId?: string, options?: any): AxiosPromise<Array<FeatureOut>>;
    /**
     * Create a new Feature.
     * @summary Create Feature
     * @param {FeatureIn} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createFeatureV1FeaturesPost(featureIn: FeatureIn, teamId?: string, options?: any): AxiosPromise<FeatureOut>;
    /**
     * Delete a feature.
     * @summary Delete Feature
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteFeatureV1FeaturesFeatureIdDelete(featureId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get feature.
     * @summary Get Feature
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getFeatureV1FeaturesFeatureIdGet(featureId: string, teamId?: string, options?: any): AxiosPromise<FeatureOut>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {string} dashboardId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet(dashboardId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {string} datasetId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet(datasetId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List Features.
     * @summary List Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listFeaturesV1FeaturesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserFeaturesV1UsersUserIdFeaturesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * Modify Feature resource with partial update.  Updating `feature_statistics` will replace all current feature statistics.
     * @summary Patch Feature
     * @param {string} featureId
     * @param {PatchFeatureOp | Array<PatchFeatureOp>} patchFeatureOpArrayPatchFeatureOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchFeatureV1FeaturesFeatureIdPatch(featureId: string, patchFeatureOpArrayPatchFeatureOp: PatchFeatureOp | Array<PatchFeatureOp>, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Batch feature patching.
     * @summary Patch Multiple Features
     * @param {Array<BulkPatchFeatureOp>} bulkPatchFeatureOp
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchMultipleFeaturesV1FeaturesPatch(bulkPatchFeatureOp: Array<BulkPatchFeatureOp>, options?: any): AxiosPromise<void>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {string} datasetId
     * @param {string} featureId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete(datasetId: string, featureId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Replace a Feature.
     * @summary Replace Feature
     * @param {string} featureId
     * @param {FeatureIn} featureIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceFeatureV1FeaturesFeatureIdPut(featureId: string, featureIn: FeatureIn, teamId?: string, options?: any): AxiosPromise<FeatureOut>;
};
/**
 * Request parameters for addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut operation in FeaturesApi.
 * @export
 * @interface FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest
 */
export interface FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut
     */
    readonly dashboardId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut
     */
    readonly featureId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut operation in FeaturesApi.
 * @export
 * @interface FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest
 */
export interface FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly featureId: string;
    /**
     * If true, then set the feature as the dataset index.
     * @type {boolean}
     * @memberof FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly index?: boolean;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost operation in FeaturesApi.
 * @export
 * @interface FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest
 */
export interface FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost
     */
    readonly datasetId: string;
    /**
     *
     * @type {Array<FeatureIn>}
     * @memberof FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost
     */
    readonly featureIn: Array<FeatureIn>;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createFeatureV1FeaturesPost operation in FeaturesApi.
 * @export
 * @interface FeaturesApiCreateFeatureV1FeaturesPostRequest
 */
export interface FeaturesApiCreateFeatureV1FeaturesPostRequest {
    /**
     *
     * @type {FeatureIn}
     * @memberof FeaturesApiCreateFeatureV1FeaturesPost
     */
    readonly featureIn: FeatureIn;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiCreateFeatureV1FeaturesPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteFeatureV1FeaturesFeatureIdDelete operation in FeaturesApi.
 * @export
 * @interface FeaturesApiDeleteFeatureV1FeaturesFeatureIdDeleteRequest
 */
export interface FeaturesApiDeleteFeatureV1FeaturesFeatureIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiDeleteFeatureV1FeaturesFeatureIdDelete
     */
    readonly featureId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiDeleteFeatureV1FeaturesFeatureIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getFeatureV1FeaturesFeatureIdGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiGetFeatureV1FeaturesFeatureIdGetRequest
 */
export interface FeaturesApiGetFeatureV1FeaturesFeatureIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiGetFeatureV1FeaturesFeatureIdGet
     */
    readonly featureId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiGetFeatureV1FeaturesFeatureIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserFeaturesV1UserFeaturesGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest
 */
export interface FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest
 */
export interface FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly dashboardId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest
 */
export interface FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
}
/**
 * Request parameters for listFeaturesV1FeaturesGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiListFeaturesV1FeaturesGetRequest
 */
export interface FeaturesApiListFeaturesV1FeaturesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListFeaturesV1FeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listModelFeaturesV1ModelsModelIdFeaturesGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest
 */
export interface FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
}
/**
 * Request parameters for listUserFeaturesV1UsersUserIdFeaturesGet operation in FeaturesApi.
 * @export
 * @interface FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGetRequest
 */
export interface FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchFeatureV1FeaturesFeatureIdPatch operation in FeaturesApi.
 * @export
 * @interface FeaturesApiPatchFeatureV1FeaturesFeatureIdPatchRequest
 */
export interface FeaturesApiPatchFeatureV1FeaturesFeatureIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiPatchFeatureV1FeaturesFeatureIdPatch
     */
    readonly featureId: string;
    /**
     *
     * @type {PatchFeatureOp | Array<PatchFeatureOp>}
     * @memberof FeaturesApiPatchFeatureV1FeaturesFeatureIdPatch
     */
    readonly patchFeatureOpArrayPatchFeatureOp: PatchFeatureOp | Array<PatchFeatureOp>;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiPatchFeatureV1FeaturesFeatureIdPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchMultipleFeaturesV1FeaturesPatch operation in FeaturesApi.
 * @export
 * @interface FeaturesApiPatchMultipleFeaturesV1FeaturesPatchRequest
 */
export interface FeaturesApiPatchMultipleFeaturesV1FeaturesPatchRequest {
    /**
     *
     * @type {Array<BulkPatchFeatureOp>}
     * @memberof FeaturesApiPatchMultipleFeaturesV1FeaturesPatch
     */
    readonly bulkPatchFeatureOp: Array<BulkPatchFeatureOp>;
}
/**
 * Request parameters for removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete operation in FeaturesApi.
 * @export
 * @interface FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest
 */
export interface FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete
     */
    readonly datasetId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete
     */
    readonly featureId: string;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for replaceFeatureV1FeaturesFeatureIdPut operation in FeaturesApi.
 * @export
 * @interface FeaturesApiReplaceFeatureV1FeaturesFeatureIdPutRequest
 */
export interface FeaturesApiReplaceFeatureV1FeaturesFeatureIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof FeaturesApiReplaceFeatureV1FeaturesFeatureIdPut
     */
    readonly featureId: string;
    /**
     *
     * @type {FeatureIn}
     * @memberof FeaturesApiReplaceFeatureV1FeaturesFeatureIdPut
     */
    readonly featureIn: FeatureIn;
    /**
     *
     * @type {string}
     * @memberof FeaturesApiReplaceFeatureV1FeaturesFeatureIdPut
     */
    readonly teamId?: string;
}
/**
 * FeaturesApi - object-oriented interface
 * @export
 * @class FeaturesApi
 * @extends {BaseAPI}
 */
export declare class FeaturesApi extends BaseAPI {
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dashboard Endpoint
     * @param {FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    addFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPut(requestParameters: FeaturesApiAddFeatureToDashboardEndpointV1DashboardsDashboardIdFeaturesFeatureIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Add a feature to a dataset.  The feature can be marked as the dataset\'s index feature via the `index` query parameter if True or it can be removed as the index if False. A 400 error is returned if the index feature is already set and the user tries to set a different feature to the index.
     * @summary Add Feature To Dataset
     * @param {FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    addFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPut(requestParameters: FeaturesApiAddFeatureToDatasetV1DatasetsDatasetIdFeaturesFeatureIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Create and attach Features to Dataset in bulk.
     * @summary Create And Attach Features
     * @param {FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    createAndAttachFeaturesV1DatasetsDatasetIdFeaturesPost(requestParameters: FeaturesApiCreateAndAttachFeaturesV1DatasetsDatasetIdFeaturesPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeatureOut[]>>;
    /**
     * Create a new Feature.
     * @summary Create Feature
     * @param {FeaturesApiCreateFeatureV1FeaturesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    createFeatureV1FeaturesPost(requestParameters: FeaturesApiCreateFeatureV1FeaturesPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeatureOut>>;
    /**
     * Delete a feature.
     * @summary Delete Feature
     * @param {FeaturesApiDeleteFeatureV1FeaturesFeatureIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    deleteFeatureV1FeaturesFeatureIdDelete(requestParameters: FeaturesApiDeleteFeatureV1FeaturesFeatureIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get feature.
     * @summary Get Feature
     * @param {FeaturesApiGetFeatureV1FeaturesFeatureIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    getFeatureV1FeaturesFeatureIdGet(requestParameters: FeaturesApiGetFeatureV1FeaturesFeatureIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeatureOut>>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet(requestParameters?: FeaturesApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List a datasets features.
     * @summary List Dashboard Features
     * @param {FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    listDashboardFeaturesV1DashboardsDashboardIdFeaturesGet(requestParameters: FeaturesApiListDashboardFeaturesV1DashboardsDashboardIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List a datasets features.
     * @summary List Dataset Features
     * @param {FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    listDatasetFeaturesV1DatasetsDatasetIdFeaturesGet(requestParameters: FeaturesApiListDatasetFeaturesV1DatasetsDatasetIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List Features.
     * @summary List Features
     * @param {FeaturesApiListFeaturesV1FeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    listFeaturesV1FeaturesGet(requestParameters?: FeaturesApiListFeaturesV1FeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet(requestParameters: FeaturesApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    listUserFeaturesV1UsersUserIdFeaturesGet(requestParameters: FeaturesApiListUserFeaturesV1UsersUserIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * Modify Feature resource with partial update.  Updating `feature_statistics` will replace all current feature statistics.
     * @summary Patch Feature
     * @param {FeaturesApiPatchFeatureV1FeaturesFeatureIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    patchFeatureV1FeaturesFeatureIdPatch(requestParameters: FeaturesApiPatchFeatureV1FeaturesFeatureIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Batch feature patching.
     * @summary Patch Multiple Features
     * @param {FeaturesApiPatchMultipleFeaturesV1FeaturesPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    patchMultipleFeaturesV1FeaturesPatch(requestParameters: FeaturesApiPatchMultipleFeaturesV1FeaturesPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Remove a feature from a dataset.  If the feature is also the index of the dataset, index information will also be deleted.
     * @summary Remove Feature From Dataset
     * @param {FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    removeFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDelete(requestParameters: FeaturesApiRemoveFeatureFromDatasetV1DatasetsDatasetIdFeaturesFeatureIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Replace a Feature.
     * @summary Replace Feature
     * @param {FeaturesApiReplaceFeatureV1FeaturesFeatureIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeaturesApi
     */
    replaceFeatureV1FeaturesFeatureIdPut(requestParameters: FeaturesApiReplaceFeatureV1FeaturesFeatureIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeatureOut>>;
}
/**
 * FeedbackApi - axios parameter creator
 * @export
 */
export declare const FeedbackApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Post user feedback on AI-generated relationship synthesis to s3.
     * @summary Post Synthesis Feedback
     * @param {SynthesisFeedbackIn} synthesisFeedbackIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postSynthesisFeedbackV1FeedbackPost: (synthesisFeedbackIn: SynthesisFeedbackIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FeedbackApi - functional programming interface
 * @export
 */
export declare const FeedbackApiFp: (configuration?: Configuration) => {
    /**
     * Post user feedback on AI-generated relationship synthesis to s3.
     * @summary Post Synthesis Feedback
     * @param {SynthesisFeedbackIn} synthesisFeedbackIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postSynthesisFeedbackV1FeedbackPost(synthesisFeedbackIn: SynthesisFeedbackIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * FeedbackApi - factory interface
 * @export
 */
export declare const FeedbackApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Post user feedback on AI-generated relationship synthesis to s3.
     * @summary Post Synthesis Feedback
     * @param {SynthesisFeedbackIn} synthesisFeedbackIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postSynthesisFeedbackV1FeedbackPost(synthesisFeedbackIn: SynthesisFeedbackIn, options?: any): AxiosPromise<any>;
};
/**
 * Request parameters for postSynthesisFeedbackV1FeedbackPost operation in FeedbackApi.
 * @export
 * @interface FeedbackApiPostSynthesisFeedbackV1FeedbackPostRequest
 */
export interface FeedbackApiPostSynthesisFeedbackV1FeedbackPostRequest {
    /**
     *
     * @type {SynthesisFeedbackIn}
     * @memberof FeedbackApiPostSynthesisFeedbackV1FeedbackPost
     */
    readonly synthesisFeedbackIn: SynthesisFeedbackIn;
}
/**
 * FeedbackApi - object-oriented interface
 * @export
 * @class FeedbackApi
 * @extends {BaseAPI}
 */
export declare class FeedbackApi extends BaseAPI {
    /**
     * Post user feedback on AI-generated relationship synthesis to s3.
     * @summary Post Synthesis Feedback
     * @param {FeedbackApiPostSynthesisFeedbackV1FeedbackPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FeedbackApi
     */
    postSynthesisFeedbackV1FeedbackPost(requestParameters: FeedbackApiPostSynthesisFeedbackV1FeedbackPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
}
/**
 * FindingsApi - axios parameter creator
 * @export
 */
export declare const FindingsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get study findings via association ids or dois.
     * @summary Get Study Findings From Association Ids Or Dois
     * @param {StudyFindingsIn} studyFindingsIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyFindingsFromAssociationIdsOrDOIsV1FindingsPost: (studyFindingsIn: StudyFindingsIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * FindingsApi - functional programming interface
 * @export
 */
export declare const FindingsApiFp: (configuration?: Configuration) => {
    /**
     * Get study findings via association ids or dois.
     * @summary Get Study Findings From Association Ids Or Dois
     * @param {StudyFindingsIn} studyFindingsIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyFindingsFromAssociationIdsOrDOIsV1FindingsPost(studyFindingsIn: StudyFindingsIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyFindingsOut>>;
};
/**
 * FindingsApi - factory interface
 * @export
 */
export declare const FindingsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get study findings via association ids or dois.
     * @summary Get Study Findings From Association Ids Or Dois
     * @param {StudyFindingsIn} studyFindingsIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyFindingsFromAssociationIdsOrDOIsV1FindingsPost(studyFindingsIn: StudyFindingsIn, options?: any): AxiosPromise<StudyFindingsOut>;
};
/**
 * Request parameters for getStudyFindingsFromAssociationIdsOrDOIsV1FindingsPost operation in FindingsApi.
 * @export
 * @interface FindingsApiGetStudyFindingsFromAssociationIdsOrDOIsV1FindingsPostRequest
 */
export interface FindingsApiGetStudyFindingsFromAssociationIdsOrDOIsV1FindingsPostRequest {
    /**
     *
     * @type {StudyFindingsIn}
     * @memberof FindingsApiGetStudyFindingsFromAssociationIdsOrDOIsV1FindingsPost
     */
    readonly studyFindingsIn: StudyFindingsIn;
}
/**
 * FindingsApi - object-oriented interface
 * @export
 * @class FindingsApi
 * @extends {BaseAPI}
 */
export declare class FindingsApi extends BaseAPI {
    /**
     * Get study findings via association ids or dois.
     * @summary Get Study Findings From Association Ids Or Dois
     * @param {FindingsApiGetStudyFindingsFromAssociationIdsOrDOIsV1FindingsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof FindingsApi
     */
    getStudyFindingsFromAssociationIdsOrDOIsV1FindingsPost(requestParameters: FindingsApiGetStudyFindingsFromAssociationIdsOrDOIsV1FindingsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyFindingsOut>>;
}
/**
 * GraphApi - axios parameter creator
 * @export
 */
export declare const GraphApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Fetch concept graph.
     * @summary Get Concept Graph
     * @param {string} teamId
     * @param {number} [minRelationshipStrength] Min strength
     * @param {Array<string>} [tags] Custom metric tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptGraphV1GraphConceptGraphGet: (teamId: string, minRelationshipStrength?: number, tags?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch dataset graph.
     * @summary Get Dataset Graph
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDatasetGraphV1GraphDatasetGraphGet: (teamId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Node Graph
     * @param {string} metricId
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetricNodeGraphV1GraphMetricsMetricIdGet: (metricId: string, teamId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Relationship Graph
     * @param {string} metricId1
     * @param {string} metricId2
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get: (metricId1: string, metricId2: string, teamId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph
     * @param {string} [topic1] Topic 1
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids1] Topic 1 ids
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {number} [minStrength] Min strength
     * @param {number} [minCount] Min count
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphV1GraphSemanticGraphGet: (topic1?: string, topic2?: string, ids1?: Array<string>, ids2?: Array<string>, minStrength?: number, minCount?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph
     * @param {SemanticTopicGraphIn} semanticTopicGraphIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticTopicGraphV1GraphSemanticTopicGraphPost: (semanticTopicGraphIn: SemanticTopicGraphIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch topic graph.
     * @summary Get Topic Graph
     * @param {number} [numRelationships] Number of relationships to return.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicGraphV1GraphTopicGraphGet: (numRelationships?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch topic node graph.
     * @summary Get Topic Node Graph
     * @param {string} topicId
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicNodeGraphV1GraphTopicsTopicIdGet: (topicId: string, teamId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch dataset graph.
     * @summary Get Topic Relationship Graph
     * @param {string} topicId1
     * @param {string} topicId2
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get: (topicId1: string, topicId2: string, teamId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * GraphApi - functional programming interface
 * @export
 */
export declare const GraphApiFp: (configuration?: Configuration) => {
    /**
     * Fetch concept graph.
     * @summary Get Concept Graph
     * @param {string} teamId
     * @param {number} [minRelationshipStrength] Min strength
     * @param {Array<string>} [tags] Custom metric tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptGraphV1GraphConceptGraphGet(teamId: string, minRelationshipStrength?: number, tags?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Dataset Graph
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDatasetGraphV1GraphDatasetGraphGet(teamId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Node Graph
     * @param {string} metricId
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetricNodeGraphV1GraphMetricsMetricIdGet(metricId: string, teamId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Relationship Graph
     * @param {string} metricId1
     * @param {string} metricId2
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get(metricId1: string, metricId2: string, teamId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph
     * @param {string} [topic1] Topic 1
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids1] Topic 1 ids
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {number} [minStrength] Min strength
     * @param {number} [minCount] Min count
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphV1GraphSemanticGraphGet(topic1?: string, topic2?: string, ids1?: Array<string>, ids2?: Array<string>, minStrength?: number, minCount?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph
     * @param {SemanticTopicGraphIn} semanticTopicGraphIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticTopicGraphV1GraphSemanticTopicGraphPost(semanticTopicGraphIn: SemanticTopicGraphIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch topic graph.
     * @summary Get Topic Graph
     * @param {number} [numRelationships] Number of relationships to return.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicGraphV1GraphTopicGraphGet(numRelationships?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch topic node graph.
     * @summary Get Topic Node Graph
     * @param {string} topicId
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicNodeGraphV1GraphTopicsTopicIdGet(topicId: string, teamId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Topic Relationship Graph
     * @param {string} topicId1
     * @param {string} topicId2
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get(topicId1: string, topicId2: string, teamId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>>;
};
/**
 * GraphApi - factory interface
 * @export
 */
export declare const GraphApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Fetch concept graph.
     * @summary Get Concept Graph
     * @param {string} teamId
     * @param {number} [minRelationshipStrength] Min strength
     * @param {Array<string>} [tags] Custom metric tags
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getConceptGraphV1GraphConceptGraphGet(teamId: string, minRelationshipStrength?: number, tags?: Array<string>, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch dataset graph.
     * @summary Get Dataset Graph
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getDatasetGraphV1GraphDatasetGraphGet(teamId: string, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Node Graph
     * @param {string} metricId
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetricNodeGraphV1GraphMetricsMetricIdGet(metricId: string, teamId: string, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Relationship Graph
     * @param {string} metricId1
     * @param {string} metricId2
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get(metricId1: string, metricId2: string, teamId: string, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph
     * @param {string} [topic1] Topic 1
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids1] Topic 1 ids
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {number} [minStrength] Min strength
     * @param {number} [minCount] Min count
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphV1GraphSemanticGraphGet(topic1?: string, topic2?: string, ids1?: Array<string>, ids2?: Array<string>, minStrength?: number, minCount?: number, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph
     * @param {SemanticTopicGraphIn} semanticTopicGraphIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticTopicGraphV1GraphSemanticTopicGraphPost(semanticTopicGraphIn: SemanticTopicGraphIn, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch topic graph.
     * @summary Get Topic Graph
     * @param {number} [numRelationships] Number of relationships to return.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicGraphV1GraphTopicGraphGet(numRelationships?: number, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch topic node graph.
     * @summary Get Topic Node Graph
     * @param {string} topicId
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicNodeGraphV1GraphTopicsTopicIdGet(topicId: string, teamId: string, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
    /**
     * Fetch dataset graph.
     * @summary Get Topic Relationship Graph
     * @param {string} topicId1
     * @param {string} topicId2
     * @param {string} teamId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get(topicId1: string, topicId2: string, teamId: string, options?: any): AxiosPromise<SystemGraphApiClientModelsPydanticGraphData>;
};
/**
 * Request parameters for getConceptGraphV1GraphConceptGraphGet operation in GraphApi.
 * @export
 * @interface GraphApiGetConceptGraphV1GraphConceptGraphGetRequest
 */
export interface GraphApiGetConceptGraphV1GraphConceptGraphGetRequest {
    /**
     *
     * @type {string}
     * @memberof GraphApiGetConceptGraphV1GraphConceptGraphGet
     */
    readonly teamId: string;
    /**
     * Min strength
     * @type {number}
     * @memberof GraphApiGetConceptGraphV1GraphConceptGraphGet
     */
    readonly minRelationshipStrength?: number;
    /**
     * Custom metric tags
     * @type {Array<string>}
     * @memberof GraphApiGetConceptGraphV1GraphConceptGraphGet
     */
    readonly tags?: Array<string>;
}
/**
 * Request parameters for getDatasetGraphV1GraphDatasetGraphGet operation in GraphApi.
 * @export
 * @interface GraphApiGetDatasetGraphV1GraphDatasetGraphGetRequest
 */
export interface GraphApiGetDatasetGraphV1GraphDatasetGraphGetRequest {
    /**
     *
     * @type {string}
     * @memberof GraphApiGetDatasetGraphV1GraphDatasetGraphGet
     */
    readonly teamId: string;
}
/**
 * Request parameters for getMetricNodeGraphV1GraphMetricsMetricIdGet operation in GraphApi.
 * @export
 * @interface GraphApiGetMetricNodeGraphV1GraphMetricsMetricIdGetRequest
 */
export interface GraphApiGetMetricNodeGraphV1GraphMetricsMetricIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof GraphApiGetMetricNodeGraphV1GraphMetricsMetricIdGet
     */
    readonly metricId: string;
    /**
     *
     * @type {string}
     * @memberof GraphApiGetMetricNodeGraphV1GraphMetricsMetricIdGet
     */
    readonly teamId: string;
}
/**
 * Request parameters for getMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get operation in GraphApi.
 * @export
 * @interface GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2GetRequest
 */
export interface GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2GetRequest {
    /**
     *
     * @type {string}
     * @memberof GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get
     */
    readonly metricId1: string;
    /**
     *
     * @type {string}
     * @memberof GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get
     */
    readonly metricId2: string;
    /**
     *
     * @type {string}
     * @memberof GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get
     */
    readonly teamId: string;
}
/**
 * Request parameters for getSemanticGraphV1GraphSemanticGraphGet operation in GraphApi.
 * @export
 * @interface GraphApiGetSemanticGraphV1GraphSemanticGraphGetRequest
 */
export interface GraphApiGetSemanticGraphV1GraphSemanticGraphGetRequest {
    /**
     * Topic 1
     * @type {string}
     * @memberof GraphApiGetSemanticGraphV1GraphSemanticGraphGet
     */
    readonly topic1?: string;
    /**
     * Topic 2
     * @type {string}
     * @memberof GraphApiGetSemanticGraphV1GraphSemanticGraphGet
     */
    readonly topic2?: string;
    /**
     * Topic 1 ids
     * @type {Array<string>}
     * @memberof GraphApiGetSemanticGraphV1GraphSemanticGraphGet
     */
    readonly ids1?: Array<string>;
    /**
     * Topic 2 ids
     * @type {Array<string>}
     * @memberof GraphApiGetSemanticGraphV1GraphSemanticGraphGet
     */
    readonly ids2?: Array<string>;
    /**
     * Min strength
     * @type {number}
     * @memberof GraphApiGetSemanticGraphV1GraphSemanticGraphGet
     */
    readonly minStrength?: number;
    /**
     * Min count
     * @type {number}
     * @memberof GraphApiGetSemanticGraphV1GraphSemanticGraphGet
     */
    readonly minCount?: number;
}
/**
 * Request parameters for getSemanticTopicGraphV1GraphSemanticTopicGraphPost operation in GraphApi.
 * @export
 * @interface GraphApiGetSemanticTopicGraphV1GraphSemanticTopicGraphPostRequest
 */
export interface GraphApiGetSemanticTopicGraphV1GraphSemanticTopicGraphPostRequest {
    /**
     *
     * @type {SemanticTopicGraphIn}
     * @memberof GraphApiGetSemanticTopicGraphV1GraphSemanticTopicGraphPost
     */
    readonly semanticTopicGraphIn: SemanticTopicGraphIn;
}
/**
 * Request parameters for getTopicGraphV1GraphTopicGraphGet operation in GraphApi.
 * @export
 * @interface GraphApiGetTopicGraphV1GraphTopicGraphGetRequest
 */
export interface GraphApiGetTopicGraphV1GraphTopicGraphGetRequest {
    /**
     * Number of relationships to return.
     * @type {number}
     * @memberof GraphApiGetTopicGraphV1GraphTopicGraphGet
     */
    readonly numRelationships?: number;
}
/**
 * Request parameters for getTopicNodeGraphV1GraphTopicsTopicIdGet operation in GraphApi.
 * @export
 * @interface GraphApiGetTopicNodeGraphV1GraphTopicsTopicIdGetRequest
 */
export interface GraphApiGetTopicNodeGraphV1GraphTopicsTopicIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof GraphApiGetTopicNodeGraphV1GraphTopicsTopicIdGet
     */
    readonly topicId: string;
    /**
     *
     * @type {string}
     * @memberof GraphApiGetTopicNodeGraphV1GraphTopicsTopicIdGet
     */
    readonly teamId: string;
}
/**
 * Request parameters for getTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get operation in GraphApi.
 * @export
 * @interface GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2GetRequest
 */
export interface GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2GetRequest {
    /**
     *
     * @type {string}
     * @memberof GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get
     */
    readonly topicId1: string;
    /**
     *
     * @type {string}
     * @memberof GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get
     */
    readonly topicId2: string;
    /**
     *
     * @type {string}
     * @memberof GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get
     */
    readonly teamId: string;
}
/**
 * GraphApi - object-oriented interface
 * @export
 * @class GraphApi
 * @extends {BaseAPI}
 */
export declare class GraphApi extends BaseAPI {
    /**
     * Fetch concept graph.
     * @summary Get Concept Graph
     * @param {GraphApiGetConceptGraphV1GraphConceptGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getConceptGraphV1GraphConceptGraphGet(requestParameters: GraphApiGetConceptGraphV1GraphConceptGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Dataset Graph
     * @param {GraphApiGetDatasetGraphV1GraphDatasetGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getDatasetGraphV1GraphDatasetGraphGet(requestParameters: GraphApiGetDatasetGraphV1GraphDatasetGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Node Graph
     * @param {GraphApiGetMetricNodeGraphV1GraphMetricsMetricIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getMetricNodeGraphV1GraphMetricsMetricIdGet(requestParameters: GraphApiGetMetricNodeGraphV1GraphMetricsMetricIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Metric Relationship Graph
     * @param {GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2GetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2Get(requestParameters: GraphApiGetMetricRelationshipGraphV1GraphMetricsMetricId1RelationshipMetricId2GetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph
     * @param {GraphApiGetSemanticGraphV1GraphSemanticGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getSemanticGraphV1GraphSemanticGraphGet(requestParameters?: GraphApiGetSemanticGraphV1GraphSemanticGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph
     * @param {GraphApiGetSemanticTopicGraphV1GraphSemanticTopicGraphPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getSemanticTopicGraphV1GraphSemanticTopicGraphPost(requestParameters: GraphApiGetSemanticTopicGraphV1GraphSemanticTopicGraphPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch topic graph.
     * @summary Get Topic Graph
     * @param {GraphApiGetTopicGraphV1GraphTopicGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getTopicGraphV1GraphTopicGraphGet(requestParameters?: GraphApiGetTopicGraphV1GraphTopicGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch topic node graph.
     * @summary Get Topic Node Graph
     * @param {GraphApiGetTopicNodeGraphV1GraphTopicsTopicIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getTopicNodeGraphV1GraphTopicsTopicIdGet(requestParameters: GraphApiGetTopicNodeGraphV1GraphTopicsTopicIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
    /**
     * Fetch dataset graph.
     * @summary Get Topic Relationship Graph
     * @param {GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2GetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GraphApi
     */
    getTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2Get(requestParameters: GraphApiGetTopicRelationshipGraphV1GraphTopicsTopicId1RelationshipTopicId2GetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsPydanticGraphData>>;
}
/**
 * MetricsApi - axios parameter creator
 * @export
 */
export declare const MetricsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get metrics on the graph.
     * @summary Get Graph Metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGraphMetricsV1MetricsGraphGet: (options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * MetricsApi - functional programming interface
 * @export
 */
export declare const MetricsApiFp: (configuration?: Configuration) => {
    /**
     * Get metrics on the graph.
     * @summary Get Graph Metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGraphMetricsV1MetricsGraphGet(options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GraphMetrics>>;
};
/**
 * MetricsApi - factory interface
 * @export
 */
export declare const MetricsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get metrics on the graph.
     * @summary Get Graph Metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getGraphMetricsV1MetricsGraphGet(options?: any): AxiosPromise<GraphMetrics>;
};
/**
 * MetricsApi - object-oriented interface
 * @export
 * @class MetricsApi
 * @extends {BaseAPI}
 */
export declare class MetricsApi extends BaseAPI {
    /**
     * Get metrics on the graph.
     * @summary Get Graph Metrics
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof MetricsApi
     */
    getGraphMetricsV1MetricsGraphGet(options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<GraphMetrics>>;
}
/**
 * ModeldbApi - axios parameter creator
 * @export
 */
export declare const ModeldbApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get algorithms by id.
     * @summary Get Algorithm
     * @param {string} algorithmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAlgorithmV1ModeldbAlgorithmsAlgorithmIdGet: (algorithmId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List available algorithms in ModelDB. Search with algorithm class if passed.
     * @summary List Algorithms
     * @param {string} [algorithmClass]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAlgorithmsV1ModeldbAlgorithmsGet: (algorithmClass?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ModeldbApi - functional programming interface
 * @export
 */
export declare const ModeldbApiFp: (configuration?: Configuration) => {
    /**
     * Get algorithms by id.
     * @summary Get Algorithm
     * @param {string} algorithmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAlgorithmV1ModeldbAlgorithmsAlgorithmIdGet(algorithmId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AlgorithmOut>>;
    /**
     * List available algorithms in ModelDB. Search with algorithm class if passed.
     * @summary List Algorithms
     * @param {string} [algorithmClass]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAlgorithmsV1ModeldbAlgorithmsGet(algorithmClass?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AlgorithmListResult>>;
};
/**
 * ModeldbApi - factory interface
 * @export
 */
export declare const ModeldbApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get algorithms by id.
     * @summary Get Algorithm
     * @param {string} algorithmId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAlgorithmV1ModeldbAlgorithmsAlgorithmIdGet(algorithmId: string, options?: any): AxiosPromise<AlgorithmOut>;
    /**
     * List available algorithms in ModelDB. Search with algorithm class if passed.
     * @summary List Algorithms
     * @param {string} [algorithmClass]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAlgorithmsV1ModeldbAlgorithmsGet(algorithmClass?: string, options?: any): AxiosPromise<AlgorithmListResult>;
};
/**
 * Request parameters for getAlgorithmV1ModeldbAlgorithmsAlgorithmIdGet operation in ModeldbApi.
 * @export
 * @interface ModeldbApiGetAlgorithmV1ModeldbAlgorithmsAlgorithmIdGetRequest
 */
export interface ModeldbApiGetAlgorithmV1ModeldbAlgorithmsAlgorithmIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModeldbApiGetAlgorithmV1ModeldbAlgorithmsAlgorithmIdGet
     */
    readonly algorithmId: string;
}
/**
 * Request parameters for listAlgorithmsV1ModeldbAlgorithmsGet operation in ModeldbApi.
 * @export
 * @interface ModeldbApiListAlgorithmsV1ModeldbAlgorithmsGetRequest
 */
export interface ModeldbApiListAlgorithmsV1ModeldbAlgorithmsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModeldbApiListAlgorithmsV1ModeldbAlgorithmsGet
     */
    readonly algorithmClass?: string;
}
/**
 * ModeldbApi - object-oriented interface
 * @export
 * @class ModeldbApi
 * @extends {BaseAPI}
 */
export declare class ModeldbApi extends BaseAPI {
    /**
     * Get algorithms by id.
     * @summary Get Algorithm
     * @param {ModeldbApiGetAlgorithmV1ModeldbAlgorithmsAlgorithmIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModeldbApi
     */
    getAlgorithmV1ModeldbAlgorithmsAlgorithmIdGet(requestParameters: ModeldbApiGetAlgorithmV1ModeldbAlgorithmsAlgorithmIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AlgorithmOut>>;
    /**
     * List available algorithms in ModelDB. Search with algorithm class if passed.
     * @summary List Algorithms
     * @param {ModeldbApiListAlgorithmsV1ModeldbAlgorithmsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModeldbApi
     */
    listAlgorithmsV1ModeldbAlgorithmsGet(requestParameters?: ModeldbApiListAlgorithmsV1ModeldbAlgorithmsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AlgorithmListResult>>;
}
/**
 * ModelsApi - axios parameter creator
 * @export
 */
export declare const ModelsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} modelId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {boolean} [mergeFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1ModelsModelIdAssociationsPost: (modelId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, mergeFeatures?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {string} studyId
     * @param {Array<ModelIn>} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModelsV1StudiesStudyIdModelsPost: (studyId: string, modelIn: Array<ModelIn>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {string} modelId
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete: (modelId: string, associationId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {string} modelId
     * @param {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete} bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete: (modelId: string, bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete Model and related resources from SystemDB.  Related resources also removed:  - All model associations.  - Training dataset if not referenced by other objects (e.x. as a parent).  - If deleting the training dataset, its features will also be    removed unless used in other datasets.
     * @summary Delete Model
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteModelV1ModelsModelIdDelete: (modelId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {string} associationId
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet: (associationId: string, modelId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Model.
     * @summary Get Model
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getModelV1ModelsModelIdGet: (modelId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1ModelsModelIdAssociationsGet: (modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserModelsV1UserModelsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet: (modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsInStudyV1StudiesStudyIdModelsGet: (studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Models.
     * @summary List Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsV1ModelsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserModelsV1UsersUserIdModelsGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {string} modelId
     * @param {Array<BulkPatchAssociationOp>} bulkPatchAssociationOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch: (modelId: string, bulkPatchAssociationOp: Array<BulkPatchAssociationOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify Model resource with partial update.
     * @summary Patch Model
     * @param {string} modelId
     * @param {PatchModelOp | Array<PatchModelOp>} patchModelOpArrayPatchModelOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchModelV1ModelsModelIdPatch: (modelId: string, patchModelOpArrayPatchModelOp: PatchModelOp | Array<PatchModelOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {string} associationId
     * @param {string} modelId
     * @param {DirectionIn} directionIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost: (associationId: string, modelId: string, directionIn: DirectionIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Replace a Model.
     * @summary Replace Model
     * @param {string} modelId
     * @param {ModelIn} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceModelV1ModelsModelIdPut: (modelId: string, modelIn: ModelIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * ModelsApi - functional programming interface
 * @export
 */
export declare const ModelsApiFp: (configuration?: Configuration) => {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} modelId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {boolean} [mergeFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1ModelsModelIdAssociationsPost(modelId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, mergeFeatures?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<AssociationOut>>>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {string} studyId
     * @param {Array<ModelIn>} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModelsV1StudiesStudyIdModelsPost(studyId: string, modelIn: Array<ModelIn>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelOut>>>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {string} modelId
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete(modelId: string, associationId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {string} modelId
     * @param {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete} bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete(modelId: string, bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Delete Model and related resources from SystemDB.  Related resources also removed:  - All model associations.  - Training dataset if not referenced by other objects (e.x. as a parent).  - If deleting the training dataset, its features will also be    removed unless used in other datasets.
     * @summary Delete Model
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteModelV1ModelsModelIdDelete(modelId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {string} associationId
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet(associationId: string, modelId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationOut>>;
    /**
     * Get Model.
     * @summary Get Model
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getModelV1ModelsModelIdGet(modelId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelOut>>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1ModelsModelIdAssociationsGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserModelsV1UserModelsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsInStudyV1StudiesStudyIdModelsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * List Models.
     * @summary List Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsV1ModelsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserModelsV1UsersUserIdModelsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {string} modelId
     * @param {Array<BulkPatchAssociationOp>} bulkPatchAssociationOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch(modelId: string, bulkPatchAssociationOp: Array<BulkPatchAssociationOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Modify Model resource with partial update.
     * @summary Patch Model
     * @param {string} modelId
     * @param {PatchModelOp | Array<PatchModelOp>} patchModelOpArrayPatchModelOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchModelV1ModelsModelIdPatch(modelId: string, patchModelOpArrayPatchModelOp: PatchModelOp | Array<PatchModelOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {string} associationId
     * @param {string} modelId
     * @param {DirectionIn} directionIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost(associationId: string, modelId: string, directionIn: DirectionIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationOut>>;
    /**
     * Replace a Model.
     * @summary Replace Model
     * @param {string} modelId
     * @param {ModelIn} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceModelV1ModelsModelIdPut(modelId: string, modelIn: ModelIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelOut>>;
};
/**
 * ModelsApi - factory interface
 * @export
 */
export declare const ModelsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {string} modelId
     * @param {AssociationIn | Array<AssociationIn>} associationInArrayAssociationIn
     * @param {boolean} [mergeFeatures]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAssociationsV1ModelsModelIdAssociationsPost(modelId: string, associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>, mergeFeatures?: boolean, teamId?: string, options?: any): AxiosPromise<Array<AssociationOut>>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {string} studyId
     * @param {Array<ModelIn>} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModelsV1StudiesStudyIdModelsPost(studyId: string, modelIn: Array<ModelIn>, teamId?: string, options?: any): AxiosPromise<Array<ModelOut>>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {string} modelId
     * @param {string} associationId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete(modelId: string, associationId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {string} modelId
     * @param {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete} bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete(modelId: string, bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Delete Model and related resources from SystemDB.  Related resources also removed:  - All model associations.  - Training dataset if not referenced by other objects (e.x. as a parent).  - If deleting the training dataset, its features will also be    removed unless used in other datasets.
     * @summary Delete Model
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteModelV1ModelsModelIdDelete(modelId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {string} associationId
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet(associationId: string, modelId: string, teamId?: string, options?: any): AxiosPromise<AssociationOut>;
    /**
     * Get Model.
     * @summary Get Model
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getModelV1ModelsModelIdGet(modelId: string, teamId?: string, options?: any): AxiosPromise<ModelOut>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1ModelsModelIdAssociationsGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserModelsV1UserModelsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {string} modelId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet(modelId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsInStudyV1StudiesStudyIdModelsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * List Models.
     * @summary List Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsV1ModelsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserModelsV1UsersUserIdModelsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {string} modelId
     * @param {Array<BulkPatchAssociationOp>} bulkPatchAssociationOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch(modelId: string, bulkPatchAssociationOp: Array<BulkPatchAssociationOp>, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Modify Model resource with partial update.
     * @summary Patch Model
     * @param {string} modelId
     * @param {PatchModelOp | Array<PatchModelOp>} patchModelOpArrayPatchModelOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchModelV1ModelsModelIdPatch(modelId: string, patchModelOpArrayPatchModelOp: PatchModelOp | Array<PatchModelOp>, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {string} associationId
     * @param {string} modelId
     * @param {DirectionIn} directionIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost(associationId: string, modelId: string, directionIn: DirectionIn, teamId?: string, options?: any): AxiosPromise<AssociationOut>;
    /**
     * Replace a Model.
     * @summary Replace Model
     * @param {string} modelId
     * @param {ModelIn} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    replaceModelV1ModelsModelIdPut(modelId: string, modelIn: ModelIn, teamId?: string, options?: any): AxiosPromise<ModelOut>;
};
/**
 * Request parameters for createAssociationsV1ModelsModelIdAssociationsPost operation in ModelsApi.
 * @export
 * @interface ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest
 */
export interface ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly modelId: string;
    /**
     *
     * @type {AssociationIn | Array<AssociationIn>}
     * @memberof ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly associationInArrayAssociationIn: AssociationIn | Array<AssociationIn>;
    /**
     *
     * @type {boolean}
     * @memberof ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly mergeFeatures?: boolean;
    /**
     *
     * @type {string}
     * @memberof ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createModelsV1StudiesStudyIdModelsPost operation in ModelsApi.
 * @export
 * @interface ModelsApiCreateModelsV1StudiesStudyIdModelsPostRequest
 */
export interface ModelsApiCreateModelsV1StudiesStudyIdModelsPostRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiCreateModelsV1StudiesStudyIdModelsPost
     */
    readonly studyId: string;
    /**
     *
     * @type {Array<ModelIn>}
     * @memberof ModelsApiCreateModelsV1StudiesStudyIdModelsPost
     */
    readonly modelIn: Array<ModelIn>;
    /**
     *
     * @type {string}
     * @memberof ModelsApiCreateModelsV1StudiesStudyIdModelsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete operation in ModelsApi.
 * @export
 * @interface ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest
 */
export interface ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteAssociationsV1ModelsModelIdAssociationsDelete operation in ModelsApi.
 * @export
 * @interface ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest
 */
export interface ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    readonly modelId: string;
    /**
     *
     * @type {BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete}
     * @memberof ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    readonly bodyDeleteAssociationsV1ModelsModelIdAssociationsDelete: BodyDeleteAssociationsV1ModelsModelIdAssociationsDelete;
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteModelV1ModelsModelIdDelete operation in ModelsApi.
 * @export
 * @interface ModelsApiDeleteModelV1ModelsModelIdDeleteRequest
 */
export interface ModelsApiDeleteModelV1ModelsModelIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteModelV1ModelsModelIdDelete
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiDeleteModelV1ModelsModelIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getAssociationV1ModelsModelIdAssociationsAssociationIdGet operation in ModelsApi.
 * @export
 * @interface ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest
 */
export interface ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGet
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getModelV1ModelsModelIdGet operation in ModelsApi.
 * @export
 * @interface ModelsApiGetModelV1ModelsModelIdGetRequest
 */
export interface ModelsApiGetModelV1ModelsModelIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetModelV1ModelsModelIdGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiGetModelV1ModelsModelIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsV1ModelsModelIdAssociationsGet operation in ModelsApi.
 * @export
 * @interface ModelsApiListAssociationsV1ModelsModelIdAssociationsGetRequest
 */
export interface ModelsApiListAssociationsV1ModelsModelIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof ModelsApiListAssociationsV1ModelsModelIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAuthenticatedUserModelsV1UserModelsGet operation in ModelsApi.
 * @export
 * @interface ModelsApiListAuthenticatedUserModelsV1UserModelsGetRequest
 */
export interface ModelsApiListAuthenticatedUserModelsV1UserModelsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly containsVariableId?: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listModelFeaturesV1ModelsModelIdFeaturesGet operation in ModelsApi.
 * @export
 * @interface ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest
 */
export interface ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly modelId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
}
/**
 * Request parameters for listModelsInStudyV1StudiesStudyIdModelsGet operation in ModelsApi.
 * @export
 * @interface ModelsApiListModelsInStudyV1StudiesStudyIdModelsGetRequest
 */
export interface ModelsApiListModelsInStudyV1StudiesStudyIdModelsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof ModelsApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly containsVariableId?: string;
}
/**
 * Request parameters for listModelsV1ModelsGet operation in ModelsApi.
 * @export
 * @interface ModelsApiListModelsV1ModelsGetRequest
 */
export interface ModelsApiListModelsV1ModelsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly containsVariableId?: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiListModelsV1ModelsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserModelsV1UsersUserIdModelsGet operation in ModelsApi.
 * @export
 * @interface ModelsApiListUserModelsV1UsersUserIdModelsGetRequest
 */
export interface ModelsApiListUserModelsV1UsersUserIdModelsGetRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly containsVariableId?: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchAssociationsV1ModelsModelIdAssociationsPatch operation in ModelsApi.
 * @export
 * @interface ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest
 */
export interface ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatch
     */
    readonly modelId: string;
    /**
     *
     * @type {Array<BulkPatchAssociationOp>}
     * @memberof ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatch
     */
    readonly bulkPatchAssociationOp: Array<BulkPatchAssociationOp>;
    /**
     *
     * @type {string}
     * @memberof ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchModelV1ModelsModelIdPatch operation in ModelsApi.
 * @export
 * @interface ModelsApiPatchModelV1ModelsModelIdPatchRequest
 */
export interface ModelsApiPatchModelV1ModelsModelIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiPatchModelV1ModelsModelIdPatch
     */
    readonly modelId: string;
    /**
     *
     * @type {PatchModelOp | Array<PatchModelOp>}
     * @memberof ModelsApiPatchModelV1ModelsModelIdPatch
     */
    readonly patchModelOpArrayPatchModelOp: PatchModelOp | Array<PatchModelOp>;
    /**
     *
     * @type {string}
     * @memberof ModelsApiPatchModelV1ModelsModelIdPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost operation in ModelsApi.
 * @export
 * @interface ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest
 */
export interface ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly associationId: string;
    /**
     *
     * @type {string}
     * @memberof ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly modelId: string;
    /**
     *
     * @type {DirectionIn}
     * @memberof ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly directionIn: DirectionIn;
    /**
     *
     * @type {string}
     * @memberof ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for replaceModelV1ModelsModelIdPut operation in ModelsApi.
 * @export
 * @interface ModelsApiReplaceModelV1ModelsModelIdPutRequest
 */
export interface ModelsApiReplaceModelV1ModelsModelIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof ModelsApiReplaceModelV1ModelsModelIdPut
     */
    readonly modelId: string;
    /**
     *
     * @type {ModelIn}
     * @memberof ModelsApiReplaceModelV1ModelsModelIdPut
     */
    readonly modelIn: ModelIn;
    /**
     *
     * @type {string}
     * @memberof ModelsApiReplaceModelV1ModelsModelIdPut
     */
    readonly teamId?: string;
}
/**
 * ModelsApi - object-oriented interface
 * @export
 * @class ModelsApi
 * @extends {BaseAPI}
 */
export declare class ModelsApi extends BaseAPI {
    /**
     * Create and add Associations to a Model.  Constraints:      1. A max of 25 can be created in one request.     2. The Feature ids must be unique per Association.     3. The Features must be members of the Model\'s training dataset.
     * @summary Create Associations
     * @param {ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    createAssociationsV1ModelsModelIdAssociationsPost(requestParameters: ModelsApiCreateAssociationsV1ModelsModelIdAssociationsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut[]>>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {ModelsApiCreateModelsV1StudiesStudyIdModelsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    createModelsV1StudiesStudyIdModelsPost(requestParameters: ModelsApiCreateModelsV1StudiesStudyIdModelsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelOut[]>>;
    /**
     * Delete an Association.
     * @summary Delete Association
     * @param {ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    deleteAssociationV1ModelsModelIdAssociationsAssociationIdDelete(requestParameters: ModelsApiDeleteAssociationV1ModelsModelIdAssociationsAssociationIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Delete multiple Associations in a Model.
     * @summary Delete Associations
     * @param {ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    deleteAssociationsV1ModelsModelIdAssociationsDelete(requestParameters: ModelsApiDeleteAssociationsV1ModelsModelIdAssociationsDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Delete Model and related resources from SystemDB.  Related resources also removed:  - All model associations.  - Training dataset if not referenced by other objects (e.x. as a parent).  - If deleting the training dataset, its features will also be    removed unless used in other datasets.
     * @summary Delete Model
     * @param {ModelsApiDeleteModelV1ModelsModelIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    deleteModelV1ModelsModelIdDelete(requestParameters: ModelsApiDeleteModelV1ModelsModelIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get an Association.
     * @summary Get Association
     * @param {ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    getAssociationV1ModelsModelIdAssociationsAssociationIdGet(requestParameters: ModelsApiGetAssociationV1ModelsModelIdAssociationsAssociationIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut>>;
    /**
     * Get Model.
     * @summary Get Model
     * @param {ModelsApiGetModelV1ModelsModelIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    getModelV1ModelsModelIdGet(requestParameters: ModelsApiGetModelV1ModelsModelIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelOut>>;
    /**
     * Get associations in model.
     * @summary List Associations
     * @param {ModelsApiListAssociationsV1ModelsModelIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listAssociationsV1ModelsModelIdAssociationsGet(requestParameters: ModelsApiListAssociationsV1ModelsModelIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {ModelsApiListAuthenticatedUserModelsV1UserModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listAuthenticatedUserModelsV1UserModelsGet(requestParameters?: ModelsApiListAuthenticatedUserModelsV1UserModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * Get features in model.
     * @summary List Model Features
     * @param {ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listModelFeaturesV1ModelsModelIdFeaturesGet(requestParameters: ModelsApiListModelFeaturesV1ModelsModelIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {ModelsApiListModelsInStudyV1StudiesStudyIdModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listModelsInStudyV1StudiesStudyIdModelsGet(requestParameters: ModelsApiListModelsInStudyV1StudiesStudyIdModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * List Models.
     * @summary List Models
     * @param {ModelsApiListModelsV1ModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listModelsV1ModelsGet(requestParameters?: ModelsApiListModelsV1ModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {ModelsApiListUserModelsV1UsersUserIdModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    listUserModelsV1UsersUserIdModelsGet(requestParameters: ModelsApiListUserModelsV1UsersUserIdModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * Bulk association patching.
     * @summary Patch Associations
     * @param {ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    patchAssociationsV1ModelsModelIdAssociationsPatch(requestParameters: ModelsApiPatchAssociationsV1ModelsModelIdAssociationsPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Modify Model resource with partial update.
     * @summary Patch Model
     * @param {ModelsApiPatchModelV1ModelsModelIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    patchModelV1ModelsModelIdPatch(requestParameters: ModelsApiPatchModelV1ModelsModelIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get an Association.
     * @summary Post Association Direction
     * @param {ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    postAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPost(requestParameters: ModelsApiPostAssociationDirectionV1ModelsModelIdAssociationsAssociationIdDirectedAtPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationOut>>;
    /**
     * Replace a Model.
     * @summary Replace Model
     * @param {ModelsApiReplaceModelV1ModelsModelIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ModelsApi
     */
    replaceModelV1ModelsModelIdPut(requestParameters: ModelsApiReplaceModelV1ModelsModelIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelOut>>;
}
/**
 * PassthroughApi - axios parameter creator
 * @export
 */
export declare const PassthroughApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Forward request to crossref.
     * @summary Get Crossref
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCrossrefV1CrossrefRestOfPathGet: (restOfPath: any, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Forward request to ORCID.
     * @summary Get Orcid
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrcidV1OrcidRestOfPathGet: (restOfPath: any, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Semantic Graph
     * @param {string} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphV1SemanticGraphRestOfPathGet: (restOfPath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Forward request to UMLS.
     * @summary Get Umls Concepts
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUmlsConceptsV1UmlsRestOfPathGet: (restOfPath: any, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Variable Concepts
     * @param {string} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVariableConceptsV1VariableConceptsRestOfPathGet: (restOfPath: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Forward GraphQL request to SystemDB.
     * @summary Post Graphql
     * @param {GraphQLQuery} graphQLQuery
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postGraphqlV1GraphqlPost: (graphQLQuery: GraphQLQuery, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * PassthroughApi - functional programming interface
 * @export
 */
export declare const PassthroughApiFp: (configuration?: Configuration) => {
    /**
     * Forward request to crossref.
     * @summary Get Crossref
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCrossrefV1CrossrefRestOfPathGet(restOfPath: any, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Forward request to ORCID.
     * @summary Get Orcid
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrcidV1OrcidRestOfPathGet(restOfPath: any, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Semantic Graph
     * @param {string} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphV1SemanticGraphRestOfPathGet(restOfPath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Forward request to UMLS.
     * @summary Get Umls Concepts
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUmlsConceptsV1UmlsRestOfPathGet(restOfPath: any, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Variable Concepts
     * @param {string} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVariableConceptsV1VariableConceptsRestOfPathGet(restOfPath: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Forward GraphQL request to SystemDB.
     * @summary Post Graphql
     * @param {GraphQLQuery} graphQLQuery
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postGraphqlV1GraphqlPost(graphQLQuery: GraphQLQuery, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * PassthroughApi - factory interface
 * @export
 */
export declare const PassthroughApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Forward request to crossref.
     * @summary Get Crossref
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getCrossrefV1CrossrefRestOfPathGet(restOfPath: any, options?: any): AxiosPromise<any>;
    /**
     * Forward request to ORCID.
     * @summary Get Orcid
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOrcidV1OrcidRestOfPathGet(restOfPath: any, options?: any): AxiosPromise<any>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Semantic Graph
     * @param {string} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphV1SemanticGraphRestOfPathGet(restOfPath: string, options?: any): AxiosPromise<any>;
    /**
     * Forward request to UMLS.
     * @summary Get Umls Concepts
     * @param {any} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUmlsConceptsV1UmlsRestOfPathGet(restOfPath: any, options?: any): AxiosPromise<any>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Variable Concepts
     * @param {string} restOfPath
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVariableConceptsV1VariableConceptsRestOfPathGet(restOfPath: string, options?: any): AxiosPromise<any>;
    /**
     * Forward GraphQL request to SystemDB.
     * @summary Post Graphql
     * @param {GraphQLQuery} graphQLQuery
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    postGraphqlV1GraphqlPost(graphQLQuery: GraphQLQuery, options?: any): AxiosPromise<any>;
};
/**
 * Request parameters for getCrossrefV1CrossrefRestOfPathGet operation in PassthroughApi.
 * @export
 * @interface PassthroughApiGetCrossrefV1CrossrefRestOfPathGetRequest
 */
export interface PassthroughApiGetCrossrefV1CrossrefRestOfPathGetRequest {
    /**
     *
     * @type {any}
     * @memberof PassthroughApiGetCrossrefV1CrossrefRestOfPathGet
     */
    readonly restOfPath: any;
}
/**
 * Request parameters for getOrcidV1OrcidRestOfPathGet operation in PassthroughApi.
 * @export
 * @interface PassthroughApiGetOrcidV1OrcidRestOfPathGetRequest
 */
export interface PassthroughApiGetOrcidV1OrcidRestOfPathGetRequest {
    /**
     *
     * @type {any}
     * @memberof PassthroughApiGetOrcidV1OrcidRestOfPathGet
     */
    readonly restOfPath: any;
}
/**
 * Request parameters for getSemanticGraphV1SemanticGraphRestOfPathGet operation in PassthroughApi.
 * @export
 * @interface PassthroughApiGetSemanticGraphV1SemanticGraphRestOfPathGetRequest
 */
export interface PassthroughApiGetSemanticGraphV1SemanticGraphRestOfPathGetRequest {
    /**
     *
     * @type {string}
     * @memberof PassthroughApiGetSemanticGraphV1SemanticGraphRestOfPathGet
     */
    readonly restOfPath: string;
}
/**
 * Request parameters for getUmlsConceptsV1UmlsRestOfPathGet operation in PassthroughApi.
 * @export
 * @interface PassthroughApiGetUmlsConceptsV1UmlsRestOfPathGetRequest
 */
export interface PassthroughApiGetUmlsConceptsV1UmlsRestOfPathGetRequest {
    /**
     *
     * @type {any}
     * @memberof PassthroughApiGetUmlsConceptsV1UmlsRestOfPathGet
     */
    readonly restOfPath: any;
}
/**
 * Request parameters for getVariableConceptsV1VariableConceptsRestOfPathGet operation in PassthroughApi.
 * @export
 * @interface PassthroughApiGetVariableConceptsV1VariableConceptsRestOfPathGetRequest
 */
export interface PassthroughApiGetVariableConceptsV1VariableConceptsRestOfPathGetRequest {
    /**
     *
     * @type {string}
     * @memberof PassthroughApiGetVariableConceptsV1VariableConceptsRestOfPathGet
     */
    readonly restOfPath: string;
}
/**
 * Request parameters for postGraphqlV1GraphqlPost operation in PassthroughApi.
 * @export
 * @interface PassthroughApiPostGraphqlV1GraphqlPostRequest
 */
export interface PassthroughApiPostGraphqlV1GraphqlPostRequest {
    /**
     *
     * @type {GraphQLQuery}
     * @memberof PassthroughApiPostGraphqlV1GraphqlPost
     */
    readonly graphQLQuery: GraphQLQuery;
}
/**
 * PassthroughApi - object-oriented interface
 * @export
 * @class PassthroughApi
 * @extends {BaseAPI}
 */
export declare class PassthroughApi extends BaseAPI {
    /**
     * Forward request to crossref.
     * @summary Get Crossref
     * @param {PassthroughApiGetCrossrefV1CrossrefRestOfPathGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PassthroughApi
     */
    getCrossrefV1CrossrefRestOfPathGet(requestParameters: PassthroughApiGetCrossrefV1CrossrefRestOfPathGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Forward request to ORCID.
     * @summary Get Orcid
     * @param {PassthroughApiGetOrcidV1OrcidRestOfPathGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PassthroughApi
     */
    getOrcidV1OrcidRestOfPathGet(requestParameters: PassthroughApiGetOrcidV1OrcidRestOfPathGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Semantic Graph
     * @param {PassthroughApiGetSemanticGraphV1SemanticGraphRestOfPathGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PassthroughApi
     */
    getSemanticGraphV1SemanticGraphRestOfPathGet(requestParameters: PassthroughApiGetSemanticGraphV1SemanticGraphRestOfPathGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Forward request to UMLS.
     * @summary Get Umls Concepts
     * @param {PassthroughApiGetUmlsConceptsV1UmlsRestOfPathGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PassthroughApi
     */
    getUmlsConceptsV1UmlsRestOfPathGet(requestParameters: PassthroughApiGetUmlsConceptsV1UmlsRestOfPathGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Forward request to SearchGraph.
     * @summary Get Variable Concepts
     * @param {PassthroughApiGetVariableConceptsV1VariableConceptsRestOfPathGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PassthroughApi
     */
    getVariableConceptsV1VariableConceptsRestOfPathGet(requestParameters: PassthroughApiGetVariableConceptsV1VariableConceptsRestOfPathGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Forward GraphQL request to SystemDB.
     * @summary Post Graphql
     * @param {PassthroughApiPostGraphqlV1GraphqlPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof PassthroughApi
     */
    postGraphqlV1GraphqlPost(requestParameters: PassthroughApiPostGraphqlV1GraphqlPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
}
/**
 * QuerySuggestionsApi - axios parameter creator
 * @export
 */
export declare const QuerySuggestionsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get query suggestions.
     * @summary Get Query Suggestions.
     * @param {SuggestedQueriesIn} suggestedQueriesIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getQuerySuggestionsV1QuerySuggestionsPost: (suggestedQueriesIn: SuggestedQueriesIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * QuerySuggestionsApi - functional programming interface
 * @export
 */
export declare const QuerySuggestionsApiFp: (configuration?: Configuration) => {
    /**
     * Get query suggestions.
     * @summary Get Query Suggestions.
     * @param {SuggestedQueriesIn} suggestedQueriesIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getQuerySuggestionsV1QuerySuggestionsPost(suggestedQueriesIn: SuggestedQueriesIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SuggestedQueriesOut>>;
};
/**
 * QuerySuggestionsApi - factory interface
 * @export
 */
export declare const QuerySuggestionsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get query suggestions.
     * @summary Get Query Suggestions.
     * @param {SuggestedQueriesIn} suggestedQueriesIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getQuerySuggestionsV1QuerySuggestionsPost(suggestedQueriesIn: SuggestedQueriesIn, options?: any): AxiosPromise<SuggestedQueriesOut>;
};
/**
 * Request parameters for getQuerySuggestionsV1QuerySuggestionsPost operation in QuerySuggestionsApi.
 * @export
 * @interface QuerySuggestionsApiGetQuerySuggestionsV1QuerySuggestionsPostRequest
 */
export interface QuerySuggestionsApiGetQuerySuggestionsV1QuerySuggestionsPostRequest {
    /**
     *
     * @type {SuggestedQueriesIn}
     * @memberof QuerySuggestionsApiGetQuerySuggestionsV1QuerySuggestionsPost
     */
    readonly suggestedQueriesIn: SuggestedQueriesIn;
}
/**
 * QuerySuggestionsApi - object-oriented interface
 * @export
 * @class QuerySuggestionsApi
 * @extends {BaseAPI}
 */
export declare class QuerySuggestionsApi extends BaseAPI {
    /**
     * Get query suggestions.
     * @summary Get Query Suggestions.
     * @param {QuerySuggestionsApiGetQuerySuggestionsV1QuerySuggestionsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof QuerySuggestionsApi
     */
    getQuerySuggestionsV1QuerySuggestionsPost(requestParameters: QuerySuggestionsApiGetQuerySuggestionsV1QuerySuggestionsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SuggestedQueriesOut>>;
}
/**
 * RelationshipsApi - axios parameter creator
 * @export
 */
export declare const RelationshipsApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get Topic Relationship Synthesis.
     * @summary Get Synthesis
     * @param {any} relationshipId
     * @param {string} [directedAt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSynthesisV1RelationshipsRelationshipIdSynthesisGet: (relationshipId: any, directedAt?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List relationships.
     * @summary List Relationships
     * @param {GraphSearchDirection} [direction] Optional directionality.
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {number} [directionality] Filter by directionality
     * @param {string} [originQuery] Search query for the origin node.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRelationshipsV1RelationshipsGet: (direction?: GraphSearchDirection, query?: string, includeHidden?: boolean, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, sortBy?: string, directionality?: number, originQuery?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * RelationshipsApi - functional programming interface
 * @export
 */
export declare const RelationshipsApiFp: (configuration?: Configuration) => {
    /**
     * Get Topic Relationship Synthesis.
     * @summary Get Synthesis
     * @param {any} relationshipId
     * @param {string} [directedAt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSynthesisV1RelationshipsRelationshipIdSynthesisGet(relationshipId: any, directedAt?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TopicRelationshipSynthesisOut>>;
    /**
     * List relationships.
     * @summary List Relationships
     * @param {GraphSearchDirection} [direction] Optional directionality.
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {number} [directionality] Filter by directionality
     * @param {string} [originQuery] Search query for the origin node.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRelationshipsV1RelationshipsGet(direction?: GraphSearchDirection, query?: string, includeHidden?: boolean, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, sortBy?: string, directionality?: number, originQuery?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<RelationshipPaginationOut>>;
};
/**
 * RelationshipsApi - factory interface
 * @export
 */
export declare const RelationshipsApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get Topic Relationship Synthesis.
     * @summary Get Synthesis
     * @param {any} relationshipId
     * @param {string} [directedAt]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSynthesisV1RelationshipsRelationshipIdSynthesisGet(relationshipId: any, directedAt?: string, options?: any): AxiosPromise<TopicRelationshipSynthesisOut>;
    /**
     * List relationships.
     * @summary List Relationships
     * @param {GraphSearchDirection} [direction] Optional directionality.
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {number} [directionality] Filter by directionality
     * @param {string} [originQuery] Search query for the origin node.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listRelationshipsV1RelationshipsGet(direction?: GraphSearchDirection, query?: string, includeHidden?: boolean, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, sortBy?: string, directionality?: number, originQuery?: string, teamId?: string, options?: any): AxiosPromise<RelationshipPaginationOut>;
};
/**
 * Request parameters for getSynthesisV1RelationshipsRelationshipIdSynthesisGet operation in RelationshipsApi.
 * @export
 * @interface RelationshipsApiGetSynthesisV1RelationshipsRelationshipIdSynthesisGetRequest
 */
export interface RelationshipsApiGetSynthesisV1RelationshipsRelationshipIdSynthesisGetRequest {
    /**
     *
     * @type {any}
     * @memberof RelationshipsApiGetSynthesisV1RelationshipsRelationshipIdSynthesisGet
     */
    readonly relationshipId: any;
    /**
     *
     * @type {string}
     * @memberof RelationshipsApiGetSynthesisV1RelationshipsRelationshipIdSynthesisGet
     */
    readonly directedAt?: string;
}
/**
 * Request parameters for listRelationshipsV1RelationshipsGet operation in RelationshipsApi.
 * @export
 * @interface RelationshipsApiListRelationshipsV1RelationshipsGetRequest
 */
export interface RelationshipsApiListRelationshipsV1RelationshipsGetRequest {
    /**
     * Optional directionality.
     * @type {GraphSearchDirection}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly direction?: GraphSearchDirection;
    /**
     * Search query.
     * @type {string}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly includeHidden?: boolean;
    /**
     *
     * @type {number}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly sortBy?: string;
    /**
     * Filter by directionality
     * @type {number}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly directionality?: number;
    /**
     * Search query for the origin node.
     * @type {string}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly originQuery?: string;
    /**
     *
     * @type {string}
     * @memberof RelationshipsApiListRelationshipsV1RelationshipsGet
     */
    readonly teamId?: string;
}
/**
 * RelationshipsApi - object-oriented interface
 * @export
 * @class RelationshipsApi
 * @extends {BaseAPI}
 */
export declare class RelationshipsApi extends BaseAPI {
    /**
     * Get Topic Relationship Synthesis.
     * @summary Get Synthesis
     * @param {RelationshipsApiGetSynthesisV1RelationshipsRelationshipIdSynthesisGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RelationshipsApi
     */
    getSynthesisV1RelationshipsRelationshipIdSynthesisGet(requestParameters: RelationshipsApiGetSynthesisV1RelationshipsRelationshipIdSynthesisGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TopicRelationshipSynthesisOut>>;
    /**
     * List relationships.
     * @summary List Relationships
     * @param {RelationshipsApiListRelationshipsV1RelationshipsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RelationshipsApi
     */
    listRelationshipsV1RelationshipsGet(requestParameters?: RelationshipsApiListRelationshipsV1RelationshipsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<RelationshipPaginationOut>>;
}
/**
 * SemanticSearchApi - axios parameter creator
 * @export
 */
export declare const SemanticSearchApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Cluster Relationships
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asyncClusterRelationshipsV1SemanticSearchClusterAsyncPost: (systemSearchIn: SystemSearchIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Semantic Search
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asyncSemanticSearchV1SemanticSearchClusterPost: (systemSearchIn: SystemSearchIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Fetch Cluster Response
     * @param {string} runId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchClusterResponseV1SemanticSearchClusterAsyncRunIdGet: (runId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get semantic search.  Values from semantic search. Logs freemium usage on success
     * @summary Fetch Synthesis
     * @param {string} cacheKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchSynthesisV1SemanticSearchFetchGet: (cacheKey: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get semantic search usage.  date defaults to Jan 1st 2023 - before releasing tracking. Ommiting the date query param is equivalent of getting usage regardless of the date  metric defaults to Metrics.semantic_search_create for backward compatibility so that API consumers that don\'t pass a metric query param still get the original behaviour.
     * @summary Get Semantic Search Usage
     * @param {string} [dateFrom]
     * @param {Metrics} [metric]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticSearchUsageV1SemanticSearchUsageGet: (dateFrom?: string, metric?: Metrics, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get semantic search findings.  Values from semantic search.
     * @summary Get System Search Findings Data
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSystemSearchFindingsDataV1SemanticSearchDataPost: (systemSearchIn: SystemSearchIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Regenerate Synthesis
     * @param {string} cacheKey
     * @param {boolean} [forceRerun]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    regenerateSynthesisV1SemanticSearchRegeneratePost: (cacheKey: string, forceRerun?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SemanticSearchApi - functional programming interface
 * @export
 */
export declare const SemanticSearchApiFp: (configuration?: Configuration) => {
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Cluster Relationships
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asyncClusterRelationshipsV1SemanticSearchClusterAsyncPost(systemSearchIn: SystemSearchIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Semantic Search
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asyncSemanticSearchV1SemanticSearchClusterPost(systemSearchIn: SystemSearchIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ClusterOut>>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Fetch Cluster Response
     * @param {string} runId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchClusterResponseV1SemanticSearchClusterAsyncRunIdGet(runId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ClusterOutStatus>>;
    /**
     * Get semantic search.  Values from semantic search. Logs freemium usage on success
     * @summary Fetch Synthesis
     * @param {string} cacheKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchSynthesisV1SemanticSearchFetchGet(cacheKey: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SynthesisOut>>;
    /**
     * Get semantic search usage.  date defaults to Jan 1st 2023 - before releasing tracking. Ommiting the date query param is equivalent of getting usage regardless of the date  metric defaults to Metrics.semantic_search_create for backward compatibility so that API consumers that don\'t pass a metric query param still get the original behaviour.
     * @summary Get Semantic Search Usage
     * @param {string} [dateFrom]
     * @param {Metrics} [metric]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticSearchUsageV1SemanticSearchUsageGet(dateFrom?: string, metric?: Metrics, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserMetricUsageOut>>;
    /**
     * Get semantic search findings.  Values from semantic search.
     * @summary Get System Search Findings Data
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSystemSearchFindingsDataV1SemanticSearchDataPost(systemSearchIn: SystemSearchIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemSearchData>>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Regenerate Synthesis
     * @param {string} cacheKey
     * @param {boolean} [forceRerun]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    regenerateSynthesisV1SemanticSearchRegeneratePost(cacheKey: string, forceRerun?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
};
/**
 * SemanticSearchApi - factory interface
 * @export
 */
export declare const SemanticSearchApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Cluster Relationships
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asyncClusterRelationshipsV1SemanticSearchClusterAsyncPost(systemSearchIn: SystemSearchIn, options?: any): AxiosPromise<any>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Semantic Search
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    asyncSemanticSearchV1SemanticSearchClusterPost(systemSearchIn: SystemSearchIn, options?: any): AxiosPromise<ClusterOut>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Fetch Cluster Response
     * @param {string} runId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchClusterResponseV1SemanticSearchClusterAsyncRunIdGet(runId: string, options?: any): AxiosPromise<ClusterOutStatus>;
    /**
     * Get semantic search.  Values from semantic search. Logs freemium usage on success
     * @summary Fetch Synthesis
     * @param {string} cacheKey
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    fetchSynthesisV1SemanticSearchFetchGet(cacheKey: string, options?: any): AxiosPromise<SynthesisOut>;
    /**
     * Get semantic search usage.  date defaults to Jan 1st 2023 - before releasing tracking. Ommiting the date query param is equivalent of getting usage regardless of the date  metric defaults to Metrics.semantic_search_create for backward compatibility so that API consumers that don\'t pass a metric query param still get the original behaviour.
     * @summary Get Semantic Search Usage
     * @param {string} [dateFrom]
     * @param {Metrics} [metric]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticSearchUsageV1SemanticSearchUsageGet(dateFrom?: string, metric?: Metrics, options?: any): AxiosPromise<UserMetricUsageOut>;
    /**
     * Get semantic search findings.  Values from semantic search.
     * @summary Get System Search Findings Data
     * @param {SystemSearchIn} systemSearchIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSystemSearchFindingsDataV1SemanticSearchDataPost(systemSearchIn: SystemSearchIn, options?: any): AxiosPromise<SystemSearchData>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Regenerate Synthesis
     * @param {string} cacheKey
     * @param {boolean} [forceRerun]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    regenerateSynthesisV1SemanticSearchRegeneratePost(cacheKey: string, forceRerun?: boolean, options?: any): AxiosPromise<any>;
};
/**
 * Request parameters for asyncClusterRelationshipsV1SemanticSearchClusterAsyncPost operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiAsyncClusterRelationshipsV1SemanticSearchClusterAsyncPostRequest
 */
export interface SemanticSearchApiAsyncClusterRelationshipsV1SemanticSearchClusterAsyncPostRequest {
    /**
     *
     * @type {SystemSearchIn}
     * @memberof SemanticSearchApiAsyncClusterRelationshipsV1SemanticSearchClusterAsyncPost
     */
    readonly systemSearchIn: SystemSearchIn;
}
/**
 * Request parameters for asyncSemanticSearchV1SemanticSearchClusterPost operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiAsyncSemanticSearchV1SemanticSearchClusterPostRequest
 */
export interface SemanticSearchApiAsyncSemanticSearchV1SemanticSearchClusterPostRequest {
    /**
     *
     * @type {SystemSearchIn}
     * @memberof SemanticSearchApiAsyncSemanticSearchV1SemanticSearchClusterPost
     */
    readonly systemSearchIn: SystemSearchIn;
}
/**
 * Request parameters for fetchClusterResponseV1SemanticSearchClusterAsyncRunIdGet operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiFetchClusterResponseV1SemanticSearchClusterAsyncRunIdGetRequest
 */
export interface SemanticSearchApiFetchClusterResponseV1SemanticSearchClusterAsyncRunIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof SemanticSearchApiFetchClusterResponseV1SemanticSearchClusterAsyncRunIdGet
     */
    readonly runId: string;
}
/**
 * Request parameters for fetchSynthesisV1SemanticSearchFetchGet operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiFetchSynthesisV1SemanticSearchFetchGetRequest
 */
export interface SemanticSearchApiFetchSynthesisV1SemanticSearchFetchGetRequest {
    /**
     *
     * @type {string}
     * @memberof SemanticSearchApiFetchSynthesisV1SemanticSearchFetchGet
     */
    readonly cacheKey: string;
}
/**
 * Request parameters for getSemanticSearchUsageV1SemanticSearchUsageGet operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiGetSemanticSearchUsageV1SemanticSearchUsageGetRequest
 */
export interface SemanticSearchApiGetSemanticSearchUsageV1SemanticSearchUsageGetRequest {
    /**
     *
     * @type {string}
     * @memberof SemanticSearchApiGetSemanticSearchUsageV1SemanticSearchUsageGet
     */
    readonly dateFrom?: string;
    /**
     *
     * @type {Metrics}
     * @memberof SemanticSearchApiGetSemanticSearchUsageV1SemanticSearchUsageGet
     */
    readonly metric?: Metrics;
}
/**
 * Request parameters for getSystemSearchFindingsDataV1SemanticSearchDataPost operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiGetSystemSearchFindingsDataV1SemanticSearchDataPostRequest
 */
export interface SemanticSearchApiGetSystemSearchFindingsDataV1SemanticSearchDataPostRequest {
    /**
     *
     * @type {SystemSearchIn}
     * @memberof SemanticSearchApiGetSystemSearchFindingsDataV1SemanticSearchDataPost
     */
    readonly systemSearchIn: SystemSearchIn;
}
/**
 * Request parameters for regenerateSynthesisV1SemanticSearchRegeneratePost operation in SemanticSearchApi.
 * @export
 * @interface SemanticSearchApiRegenerateSynthesisV1SemanticSearchRegeneratePostRequest
 */
export interface SemanticSearchApiRegenerateSynthesisV1SemanticSearchRegeneratePostRequest {
    /**
     *
     * @type {string}
     * @memberof SemanticSearchApiRegenerateSynthesisV1SemanticSearchRegeneratePost
     */
    readonly cacheKey: string;
    /**
     *
     * @type {boolean}
     * @memberof SemanticSearchApiRegenerateSynthesisV1SemanticSearchRegeneratePost
     */
    readonly forceRerun?: boolean;
}
/**
 * SemanticSearchApi - object-oriented interface
 * @export
 * @class SemanticSearchApi
 * @extends {BaseAPI}
 */
export declare class SemanticSearchApi extends BaseAPI {
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Cluster Relationships
     * @param {SemanticSearchApiAsyncClusterRelationshipsV1SemanticSearchClusterAsyncPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    asyncClusterRelationshipsV1SemanticSearchClusterAsyncPost(requestParameters: SemanticSearchApiAsyncClusterRelationshipsV1SemanticSearchClusterAsyncPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Async Semantic Search
     * @param {SemanticSearchApiAsyncSemanticSearchV1SemanticSearchClusterPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    asyncSemanticSearchV1SemanticSearchClusterPost(requestParameters: SemanticSearchApiAsyncSemanticSearchV1SemanticSearchClusterPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ClusterOut>>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Fetch Cluster Response
     * @param {SemanticSearchApiFetchClusterResponseV1SemanticSearchClusterAsyncRunIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    fetchClusterResponseV1SemanticSearchClusterAsyncRunIdGet(requestParameters: SemanticSearchApiFetchClusterResponseV1SemanticSearchClusterAsyncRunIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ClusterOutStatus>>;
    /**
     * Get semantic search.  Values from semantic search. Logs freemium usage on success
     * @summary Fetch Synthesis
     * @param {SemanticSearchApiFetchSynthesisV1SemanticSearchFetchGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    fetchSynthesisV1SemanticSearchFetchGet(requestParameters: SemanticSearchApiFetchSynthesisV1SemanticSearchFetchGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SynthesisOut>>;
    /**
     * Get semantic search usage.  date defaults to Jan 1st 2023 - before releasing tracking. Ommiting the date query param is equivalent of getting usage regardless of the date  metric defaults to Metrics.semantic_search_create for backward compatibility so that API consumers that don\'t pass a metric query param still get the original behaviour.
     * @summary Get Semantic Search Usage
     * @param {SemanticSearchApiGetSemanticSearchUsageV1SemanticSearchUsageGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    getSemanticSearchUsageV1SemanticSearchUsageGet(requestParameters?: SemanticSearchApiGetSemanticSearchUsageV1SemanticSearchUsageGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserMetricUsageOut>>;
    /**
     * Get semantic search findings.  Values from semantic search.
     * @summary Get System Search Findings Data
     * @param {SemanticSearchApiGetSystemSearchFindingsDataV1SemanticSearchDataPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    getSystemSearchFindingsDataV1SemanticSearchDataPost(requestParameters: SemanticSearchApiGetSystemSearchFindingsDataV1SemanticSearchDataPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemSearchData>>;
    /**
     * Get semantic search.  Values from semantic search.
     * @summary Regenerate Synthesis
     * @param {SemanticSearchApiRegenerateSynthesisV1SemanticSearchRegeneratePostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SemanticSearchApi
     */
    regenerateSynthesisV1SemanticSearchRegeneratePost(requestParameters: SemanticSearchApiRegenerateSynthesisV1SemanticSearchRegeneratePostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
}
/**
 * SsoApi - axios parameter creator
 * @export
 */
export declare const SsoApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get Identity Provider name for given email domain.
     * @summary Get Identity Provider Name
     * @param {string} email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIdentityProviderNameV1IdpNameEmailGet: (email: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SsoApi - functional programming interface
 * @export
 */
export declare const SsoApiFp: (configuration?: Configuration) => {
    /**
     * Get Identity Provider name for given email domain.
     * @summary Get Identity Provider Name
     * @param {string} email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIdentityProviderNameV1IdpNameEmailGet(email: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<IdentityProviderNameOut>>;
};
/**
 * SsoApi - factory interface
 * @export
 */
export declare const SsoApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get Identity Provider name for given email domain.
     * @summary Get Identity Provider Name
     * @param {string} email
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getIdentityProviderNameV1IdpNameEmailGet(email: string, options?: any): AxiosPromise<IdentityProviderNameOut>;
};
/**
 * Request parameters for getIdentityProviderNameV1IdpNameEmailGet operation in SsoApi.
 * @export
 * @interface SsoApiGetIdentityProviderNameV1IdpNameEmailGetRequest
 */
export interface SsoApiGetIdentityProviderNameV1IdpNameEmailGetRequest {
    /**
     *
     * @type {string}
     * @memberof SsoApiGetIdentityProviderNameV1IdpNameEmailGet
     */
    readonly email: string;
}
/**
 * SsoApi - object-oriented interface
 * @export
 * @class SsoApi
 * @extends {BaseAPI}
 */
export declare class SsoApi extends BaseAPI {
    /**
     * Get Identity Provider name for given email domain.
     * @summary Get Identity Provider Name
     * @param {SsoApiGetIdentityProviderNameV1IdpNameEmailGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SsoApi
     */
    getIdentityProviderNameV1IdpNameEmailGet(requestParameters: SsoApiGetIdentityProviderNameV1IdpNameEmailGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<IdentityProviderNameOut>>;
}
/**
 * StripeApi - axios parameter creator
 * @export
 */
export declare const StripeApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add subscription seats.
     * @summary Add Subscription Seats
     * @param {string} subscriptionId
     * @param {AddSubscriptionSeatIn} addSubscriptionSeatIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost: (subscriptionId: string, addSubscriptionSeatIn: AddSubscriptionSeatIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get subscription seats.
     * @summary Get Subscription Seats
     * @param {string} subscriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGet: (subscriptionId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Start stripe checkout session.
     * @summary Manage Subscription
     * @param {string} [domainCallback]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manageSubscriptionV1StripeSubscriptionManagePost: (domainCallback?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove subscription seat.
     * @summary Remove Subscription Seat
     * @param {string} email
     * @param {string} subscriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete: (email: string, subscriptionId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StripeApi - functional programming interface
 * @export
 */
export declare const StripeApiFp: (configuration?: Configuration) => {
    /**
     * Add subscription seats.
     * @summary Add Subscription Seats
     * @param {string} subscriptionId
     * @param {AddSubscriptionSeatIn} addSubscriptionSeatIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost(subscriptionId: string, addSubscriptionSeatIn: AddSubscriptionSeatIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean>>;
    /**
     * Get subscription seats.
     * @summary Get Subscription Seats
     * @param {string} subscriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGet(subscriptionId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SubscriptionSeats>>;
    /**
     * Start stripe checkout session.
     * @summary Manage Subscription
     * @param {string} [domainCallback]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manageSubscriptionV1StripeSubscriptionManagePost(domainCallback?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StripeSessionOut>>;
    /**
     * Remove subscription seat.
     * @summary Remove Subscription Seat
     * @param {string} email
     * @param {string} subscriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete(email: string, subscriptionId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<boolean>>;
};
/**
 * StripeApi - factory interface
 * @export
 */
export declare const StripeApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add subscription seats.
     * @summary Add Subscription Seats
     * @param {string} subscriptionId
     * @param {AddSubscriptionSeatIn} addSubscriptionSeatIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost(subscriptionId: string, addSubscriptionSeatIn: AddSubscriptionSeatIn, options?: any): AxiosPromise<boolean>;
    /**
     * Get subscription seats.
     * @summary Get Subscription Seats
     * @param {string} subscriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGet(subscriptionId: string, options?: any): AxiosPromise<SubscriptionSeats>;
    /**
     * Start stripe checkout session.
     * @summary Manage Subscription
     * @param {string} [domainCallback]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    manageSubscriptionV1StripeSubscriptionManagePost(domainCallback?: string, options?: any): AxiosPromise<StripeSessionOut>;
    /**
     * Remove subscription seat.
     * @summary Remove Subscription Seat
     * @param {string} email
     * @param {string} subscriptionId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete(email: string, subscriptionId: string, options?: any): AxiosPromise<boolean>;
};
/**
 * Request parameters for addSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost operation in StripeApi.
 * @export
 * @interface StripeApiAddSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPostRequest
 */
export interface StripeApiAddSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPostRequest {
    /**
     *
     * @type {string}
     * @memberof StripeApiAddSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost
     */
    readonly subscriptionId: string;
    /**
     *
     * @type {AddSubscriptionSeatIn}
     * @memberof StripeApiAddSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost
     */
    readonly addSubscriptionSeatIn: AddSubscriptionSeatIn;
}
/**
 * Request parameters for getSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGet operation in StripeApi.
 * @export
 * @interface StripeApiGetSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGetRequest
 */
export interface StripeApiGetSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGetRequest {
    /**
     *
     * @type {string}
     * @memberof StripeApiGetSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGet
     */
    readonly subscriptionId: string;
}
/**
 * Request parameters for manageSubscriptionV1StripeSubscriptionManagePost operation in StripeApi.
 * @export
 * @interface StripeApiManageSubscriptionV1StripeSubscriptionManagePostRequest
 */
export interface StripeApiManageSubscriptionV1StripeSubscriptionManagePostRequest {
    /**
     *
     * @type {string}
     * @memberof StripeApiManageSubscriptionV1StripeSubscriptionManagePost
     */
    readonly domainCallback?: string;
}
/**
 * Request parameters for removeSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete operation in StripeApi.
 * @export
 * @interface StripeApiRemoveSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDeleteRequest
 */
export interface StripeApiRemoveSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof StripeApiRemoveSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete
     */
    readonly email: string;
    /**
     *
     * @type {string}
     * @memberof StripeApiRemoveSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete
     */
    readonly subscriptionId: string;
}
/**
 * StripeApi - object-oriented interface
 * @export
 * @class StripeApi
 * @extends {BaseAPI}
 */
export declare class StripeApi extends BaseAPI {
    /**
     * Add subscription seats.
     * @summary Add Subscription Seats
     * @param {StripeApiAddSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeApi
     */
    addSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPost(requestParameters: StripeApiAddSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<boolean>>;
    /**
     * Get subscription seats.
     * @summary Get Subscription Seats
     * @param {StripeApiGetSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeApi
     */
    getSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGet(requestParameters: StripeApiGetSubscriptionSeatsV1StripeSubscriptionsSubscriptionIdSeatsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SubscriptionSeats>>;
    /**
     * Start stripe checkout session.
     * @summary Manage Subscription
     * @param {StripeApiManageSubscriptionV1StripeSubscriptionManagePostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeApi
     */
    manageSubscriptionV1StripeSubscriptionManagePost(requestParameters?: StripeApiManageSubscriptionV1StripeSubscriptionManagePostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StripeSessionOut>>;
    /**
     * Remove subscription seat.
     * @summary Remove Subscription Seat
     * @param {StripeApiRemoveSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StripeApi
     */
    removeSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDelete(requestParameters: StripeApiRemoveSubscriptionSeatV1StripeSubscriptionsSubscriptionIdSeatsEmailDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<boolean>>;
}
/**
 * StudiesApi - axios parameter creator
 * @export
 */
export declare const StudiesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut: (studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {string} studyId
     * @param {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost} bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: (studyId: string, bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a Study.
     * @summary Create A Study.
     * @param {StudyIn | DoiIn} studyInDoiIn
     * @param {boolean} [updateExisting]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAStudyV1StudiesPost: (studyInDoiIn: StudyIn | DoiIn, updateExisting?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {string} studyId
     * @param {Array<ModelIn>} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModelsV1StudiesStudyIdModelsPost: (studyId: string, modelIn: Array<ModelIn>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a Study.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteStudyV1StudiesStudyIdDelete: (studyId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Study.
     * @summary Get Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyV1StudiesStudyIdGet: (studyId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1StudiesStudyIdAssociationsGet: (studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserStudiesV1UserStudiesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a study\'s authors.
     * @summary List Authors
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AuthorSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthorsV1StudiesStudyIdAuthorsGet: (studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AuthorSortEnum, ordering?: Ordering, sortBy?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsInStudyV1StudiesStudyIdModelsGet: (studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Studies.
     * @summary List Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listStudiesV1StudiesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, variableRelationship?: string, featureRelationship?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserStudiesV1UsersUserIdStudiesGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify Study resource with partial update.
     * @summary Patch Study Endpoint
     * @param {string} studyId
     * @param {PatchStudyOp | Array<PatchStudyOp>} patchStudyOpArrayPatchStudyOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchStudyEndpointV1StudiesStudyIdPatch: (studyId: string, patchStudyOpArrayPatchStudyOp: PatchStudyOp | Array<PatchStudyOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Publish the study making it visible to other users.
     * @summary Publish Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishStudyV1StudiesStudyIdPublishPost: (studyId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete: (studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Tag the study with object with provided id.
     * @summary Remove Object Tag From Study
     * @param {string} studyId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete: (studyId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Tag the study with object with provided id.
     * @summary Tag Study With Object
     * @param {string} studyId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut: (studyId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StudiesApi - functional programming interface
 * @export
 */
export declare const StudiesApiFp: (configuration?: Configuration) => {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut(studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {string} studyId
     * @param {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost} bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost(studyId: string, bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Create a Study.
     * @summary Create A Study.
     * @param {StudyIn | DoiIn} studyInDoiIn
     * @param {boolean} [updateExisting]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAStudyV1StudiesPost(studyInDoiIn: StudyIn | DoiIn, updateExisting?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyOut>>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {string} studyId
     * @param {Array<ModelIn>} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModelsV1StudiesStudyIdModelsPost(studyId: string, modelIn: Array<ModelIn>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<ModelOut>>>;
    /**
     * Delete a Study.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteStudyV1StudiesStudyIdDelete(studyId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get Study.
     * @summary Get Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyV1StudiesStudyIdGet(studyId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyOut>>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1StudiesStudyIdAssociationsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserStudiesV1UserStudiesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyPaginationOut>>;
    /**
     * List a study\'s authors.
     * @summary List Authors
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AuthorSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthorsV1StudiesStudyIdAuthorsGet(studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AuthorSortEnum, ordering?: Ordering, sortBy?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AuthorPaginationOut>>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsInStudyV1StudiesStudyIdModelsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * List Studies.
     * @summary List Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listStudiesV1StudiesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, variableRelationship?: string, featureRelationship?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyPaginationOut>>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserStudiesV1UsersUserIdStudiesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyPaginationOut>>;
    /**
     * Modify Study resource with partial update.
     * @summary Patch Study Endpoint
     * @param {string} studyId
     * @param {PatchStudyOp | Array<PatchStudyOp>} patchStudyOpArrayPatchStudyOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchStudyEndpointV1StudiesStudyIdPatch(studyId: string, patchStudyOpArrayPatchStudyOp: PatchStudyOp | Array<PatchStudyOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Publish the study making it visible to other users.
     * @summary Publish Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishStudyV1StudiesStudyIdPublishPost(studyId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyOut>>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete(studyId: string, authorId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Tag the study with object with provided id.
     * @summary Remove Object Tag From Study
     * @param {string} studyId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete(studyId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Tag the study with object with provided id.
     * @summary Tag Study With Object
     * @param {string} studyId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut(studyId: string, tagObjectId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * StudiesApi - factory interface
 * @export
 */
export declare const StudiesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut(studyId: string, authorId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {string} studyId
     * @param {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost} bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost(studyId: string, bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Create a Study.
     * @summary Create A Study.
     * @param {StudyIn | DoiIn} studyInDoiIn
     * @param {boolean} [updateExisting]
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAStudyV1StudiesPost(studyInDoiIn: StudyIn | DoiIn, updateExisting?: boolean, teamId?: string, options?: any): AxiosPromise<StudyOut>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {string} studyId
     * @param {Array<ModelIn>} modelIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createModelsV1StudiesStudyIdModelsPost(studyId: string, modelIn: Array<ModelIn>, teamId?: string, options?: any): AxiosPromise<Array<ModelOut>>;
    /**
     * Delete a Study.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteStudyV1StudiesStudyIdDelete(studyId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get Study.
     * @summary Get Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyV1StudiesStudyIdGet(studyId: string, teamId?: string, options?: any): AxiosPromise<StudyOut>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1StudiesStudyIdAssociationsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserStudiesV1UserStudiesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<StudyPaginationOut>;
    /**
     * List a study\'s authors.
     * @summary List Authors
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AuthorSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthorsV1StudiesStudyIdAuthorsGet(studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AuthorSortEnum, ordering?: Ordering, sortBy?: string, teamId?: string, options?: any): AxiosPromise<AuthorPaginationOut>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listModelsInStudyV1StudiesStudyIdModelsGet(studyId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * List Studies.
     * @summary List Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [variableRelationship] Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @param {string} [featureRelationship] Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listStudiesV1StudiesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, variableRelationship?: string, featureRelationship?: string, teamId?: string, options?: any): AxiosPromise<StudyPaginationOut>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserStudiesV1UsersUserIdStudiesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<StudyPaginationOut>;
    /**
     * Modify Study resource with partial update.
     * @summary Patch Study Endpoint
     * @param {string} studyId
     * @param {PatchStudyOp | Array<PatchStudyOp>} patchStudyOpArrayPatchStudyOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchStudyEndpointV1StudiesStudyIdPatch(studyId: string, patchStudyOpArrayPatchStudyOp: PatchStudyOp | Array<PatchStudyOp>, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Publish the study making it visible to other users.
     * @summary Publish Study
     * @param {string} studyId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    publishStudyV1StudiesStudyIdPublishPost(studyId: string, teamId?: string, options?: any): AxiosPromise<StudyOut>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {string} studyId
     * @param {string} authorId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete(studyId: string, authorId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Tag the study with object with provided id.
     * @summary Remove Object Tag From Study
     * @param {string} studyId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    removeObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete(studyId: string, tagObjectId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Tag the study with object with provided id.
     * @summary Tag Study With Object
     * @param {string} studyId
     * @param {string} tagObjectId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    tagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut(studyId: string, tagObjectId: string, teamId?: string, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut operation in StudiesApi.
 * @export
 * @interface StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest
 */
export interface StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut
     */
    readonly authorId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut
     */
    readonly teamId?: string;
}
/**
 * Request parameters for bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost operation in StudiesApi.
 * @export
 * @interface StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest
 */
export interface StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    readonly studyId: string;
    /**
     *
     * @type {BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost}
     * @memberof StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    readonly bodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost: BodyBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost;
    /**
     *
     * @type {string}
     * @memberof StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createAStudyV1StudiesPost operation in StudiesApi.
 * @export
 * @interface StudiesApiCreateAStudyV1StudiesPostRequest
 */
export interface StudiesApiCreateAStudyV1StudiesPostRequest {
    /**
     *
     * @type {StudyIn | DoiIn}
     * @memberof StudiesApiCreateAStudyV1StudiesPost
     */
    readonly studyInDoiIn: StudyIn | DoiIn;
    /**
     *
     * @type {boolean}
     * @memberof StudiesApiCreateAStudyV1StudiesPost
     */
    readonly updateExisting?: boolean;
    /**
     *
     * @type {string}
     * @memberof StudiesApiCreateAStudyV1StudiesPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createModelsV1StudiesStudyIdModelsPost operation in StudiesApi.
 * @export
 * @interface StudiesApiCreateModelsV1StudiesStudyIdModelsPostRequest
 */
export interface StudiesApiCreateModelsV1StudiesStudyIdModelsPostRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiCreateModelsV1StudiesStudyIdModelsPost
     */
    readonly studyId: string;
    /**
     *
     * @type {Array<ModelIn>}
     * @memberof StudiesApiCreateModelsV1StudiesStudyIdModelsPost
     */
    readonly modelIn: Array<ModelIn>;
    /**
     *
     * @type {string}
     * @memberof StudiesApiCreateModelsV1StudiesStudyIdModelsPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteStudyV1StudiesStudyIdDelete operation in StudiesApi.
 * @export
 * @interface StudiesApiDeleteStudyV1StudiesStudyIdDeleteRequest
 */
export interface StudiesApiDeleteStudyV1StudiesStudyIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiDeleteStudyV1StudiesStudyIdDelete
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiDeleteStudyV1StudiesStudyIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getStudyV1StudiesStudyIdGet operation in StudiesApi.
 * @export
 * @interface StudiesApiGetStudyV1StudiesStudyIdGetRequest
 */
export interface StudiesApiGetStudyV1StudiesStudyIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiGetStudyV1StudiesStudyIdGet
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiGetStudyV1StudiesStudyIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsV1StudiesStudyIdAssociationsGet operation in StudiesApi.
 * @export
 * @interface StudiesApiListAssociationsV1StudiesStudyIdAssociationsGetRequest
 */
export interface StudiesApiListAssociationsV1StudiesStudyIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof StudiesApiListAssociationsV1StudiesStudyIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAuthenticatedUserStudiesV1UserStudiesGet operation in StudiesApi.
 * @export
 * @interface StudiesApiListAuthenticatedUserStudiesV1UserStudiesGetRequest
 */
export interface StudiesApiListAuthenticatedUserStudiesV1UserStudiesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {StudySortEnum}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly orderBy?: StudySortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly sortBy?: string;
    /**
     * Filter studies with variable tag
     * @type {string}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly variableTag?: string;
    /**
     * Filter studies with concept tag
     * @type {string}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthorsV1StudiesStudyIdAuthorsGet operation in StudiesApi.
 * @export
 * @interface StudiesApiListAuthorsV1StudiesStudyIdAuthorsGetRequest
 */
export interface StudiesApiListAuthorsV1StudiesStudyIdAuthorsGetRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly studyId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AuthorSortEnum}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly orderBy?: AuthorSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly sortBy?: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiListAuthorsV1StudiesStudyIdAuthorsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listModelsInStudyV1StudiesStudyIdModelsGet operation in StudiesApi.
 * @export
 * @interface StudiesApiListModelsInStudyV1StudiesStudyIdModelsGetRequest
 */
export interface StudiesApiListModelsInStudyV1StudiesStudyIdModelsGetRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof StudiesApiListModelsInStudyV1StudiesStudyIdModelsGet
     */
    readonly containsVariableId?: string;
}
/**
 * Request parameters for listStudiesV1StudiesGet operation in StudiesApi.
 * @export
 * @interface StudiesApiListStudiesV1StudiesGetRequest
 */
export interface StudiesApiListStudiesV1StudiesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {StudySortEnum}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly orderBy?: StudySortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly sortBy?: string;
    /**
     * Filter studies with variable tag
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly variableTag?: string;
    /**
     * Filter studies with concept tag
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly conceptTag?: string;
    /**
     * Format: \&#39;&lt;var_id_1&gt;;&lt;var_id_2&gt;\&#39;
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly variableRelationship?: string;
    /**
     * Format: \&#39;&lt;feat_id_1&gt;;&lt;feat_id_2&gt;\&#39;
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly featureRelationship?: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiListStudiesV1StudiesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserStudiesV1UsersUserIdStudiesGet operation in StudiesApi.
 * @export
 * @interface StudiesApiListUserStudiesV1UsersUserIdStudiesGetRequest
 */
export interface StudiesApiListUserStudiesV1UsersUserIdStudiesGetRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {StudySortEnum}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly orderBy?: StudySortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly sortBy?: string;
    /**
     * Filter studies with variable tag
     * @type {string}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly variableTag?: string;
    /**
     * Filter studies with concept tag
     * @type {string}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchStudyEndpointV1StudiesStudyIdPatch operation in StudiesApi.
 * @export
 * @interface StudiesApiPatchStudyEndpointV1StudiesStudyIdPatchRequest
 */
export interface StudiesApiPatchStudyEndpointV1StudiesStudyIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiPatchStudyEndpointV1StudiesStudyIdPatch
     */
    readonly studyId: string;
    /**
     *
     * @type {PatchStudyOp | Array<PatchStudyOp>}
     * @memberof StudiesApiPatchStudyEndpointV1StudiesStudyIdPatch
     */
    readonly patchStudyOpArrayPatchStudyOp: PatchStudyOp | Array<PatchStudyOp>;
    /**
     *
     * @type {string}
     * @memberof StudiesApiPatchStudyEndpointV1StudiesStudyIdPatch
     */
    readonly teamId?: string;
}
/**
 * Request parameters for publishStudyV1StudiesStudyIdPublishPost operation in StudiesApi.
 * @export
 * @interface StudiesApiPublishStudyV1StudiesStudyIdPublishPostRequest
 */
export interface StudiesApiPublishStudyV1StudiesStudyIdPublishPostRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiPublishStudyV1StudiesStudyIdPublishPost
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiPublishStudyV1StudiesStudyIdPublishPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete operation in StudiesApi.
 * @export
 * @interface StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest
 */
export interface StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete
     */
    readonly authorId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for removeObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete operation in StudiesApi.
 * @export
 * @interface StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDeleteRequest
 */
export interface StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete
     */
    readonly tagObjectId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for tagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut operation in StudiesApi.
 * @export
 * @interface StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPutRequest
 */
export interface StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPutRequest {
    /**
     *
     * @type {string}
     * @memberof StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut
     */
    readonly studyId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut
     */
    readonly tagObjectId: string;
    /**
     *
     * @type {string}
     * @memberof StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut
     */
    readonly teamId?: string;
}
/**
 * StudiesApi - object-oriented interface
 * @export
 * @class StudiesApi
 * @extends {BaseAPI}
 */
export declare class StudiesApi extends BaseAPI {
    /**
     * Add an author to a study.
     * @summary Add Author To Study
     * @param {StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    addAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPut(requestParameters: StudiesApiAddAuthorToStudyV1StudiesStudyIdAuthorsAuthorIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Add an author to a study.
     * @summary Bulk Add Authors To Study
     * @param {StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    bulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPost(requestParameters: StudiesApiBulkAddAuthorsToStudyV1StudiesStudyIdAuthorsBulkPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Create a Study.
     * @summary Create A Study.
     * @param {StudiesApiCreateAStudyV1StudiesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    createAStudyV1StudiesPost(requestParameters: StudiesApiCreateAStudyV1StudiesPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyOut>>;
    /**
     * Create models and add to study.
     * @summary Create Models
     * @param {StudiesApiCreateModelsV1StudiesStudyIdModelsPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    createModelsV1StudiesStudyIdModelsPost(requestParameters: StudiesApiCreateModelsV1StudiesStudyIdModelsPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelOut[]>>;
    /**
     * Delete a Study.  Deletion will fail if this Dataset is attached to any existing experiments or parent datasets.
     * @summary Delete Study
     * @param {StudiesApiDeleteStudyV1StudiesStudyIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    deleteStudyV1StudiesStudyIdDelete(requestParameters: StudiesApiDeleteStudyV1StudiesStudyIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get Study.
     * @summary Get Study
     * @param {StudiesApiGetStudyV1StudiesStudyIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    getStudyV1StudiesStudyIdGet(requestParameters: StudiesApiGetStudyV1StudiesStudyIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyOut>>;
    /**
     * Get associations in a project.
     * @summary List Associations
     * @param {StudiesApiListAssociationsV1StudiesStudyIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    listAssociationsV1StudiesStudyIdAssociationsGet(requestParameters: StudiesApiListAssociationsV1StudiesStudyIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {StudiesApiListAuthenticatedUserStudiesV1UserStudiesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    listAuthenticatedUserStudiesV1UserStudiesGet(requestParameters?: StudiesApiListAuthenticatedUserStudiesV1UserStudiesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyPaginationOut>>;
    /**
     * List a study\'s authors.
     * @summary List Authors
     * @param {StudiesApiListAuthorsV1StudiesStudyIdAuthorsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    listAuthorsV1StudiesStudyIdAuthorsGet(requestParameters: StudiesApiListAuthorsV1StudiesStudyIdAuthorsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AuthorPaginationOut>>;
    /**
     * Get models in a project.
     * @summary List Models In Study
     * @param {StudiesApiListModelsInStudyV1StudiesStudyIdModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    listModelsInStudyV1StudiesStudyIdModelsGet(requestParameters: StudiesApiListModelsInStudyV1StudiesStudyIdModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * List Studies.
     * @summary List Studies
     * @param {StudiesApiListStudiesV1StudiesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    listStudiesV1StudiesGet(requestParameters?: StudiesApiListStudiesV1StudiesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyPaginationOut>>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {StudiesApiListUserStudiesV1UsersUserIdStudiesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    listUserStudiesV1UsersUserIdStudiesGet(requestParameters: StudiesApiListUserStudiesV1UsersUserIdStudiesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyPaginationOut>>;
    /**
     * Modify Study resource with partial update.
     * @summary Patch Study Endpoint
     * @param {StudiesApiPatchStudyEndpointV1StudiesStudyIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    patchStudyEndpointV1StudiesStudyIdPatch(requestParameters: StudiesApiPatchStudyEndpointV1StudiesStudyIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Publish the study making it visible to other users.
     * @summary Publish Study
     * @param {StudiesApiPublishStudyV1StudiesStudyIdPublishPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    publishStudyV1StudiesStudyIdPublishPost(requestParameters: StudiesApiPublishStudyV1StudiesStudyIdPublishPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyOut>>;
    /**
     * Remove an author from a study.
     * @summary Remove Author From Study
     * @param {StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    removeAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDelete(requestParameters: StudiesApiRemoveAuthorFromStudyV1StudiesStudyIdAuthorsAuthorIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Tag the study with object with provided id.
     * @summary Remove Object Tag From Study
     * @param {StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    removeObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDelete(requestParameters: StudiesApiRemoveObjectTagFromStudyV1StudiesStudyIdObjectTagsTagObjectIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Tag the study with object with provided id.
     * @summary Tag Study With Object
     * @param {StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudiesApi
     */
    tagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPut(requestParameters: StudiesApiTagStudyWithObjectV1StudiesStudyIdObjectTagsTagObjectIdPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
}
/**
 * StudyMetadataApi - axios parameter creator
 * @export
 */
export declare const StudyMetadataApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get study metadata from OpenAlex and DynamoDB via pmids.
     * @summary Get Study Metadata From Openalex For A Given List Of Pmids.
     * @param {StudyMetadataIn} studyMetadataIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPost: (studyMetadataIn: StudyMetadataIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * StudyMetadataApi - functional programming interface
 * @export
 */
export declare const StudyMetadataApiFp: (configuration?: Configuration) => {
    /**
     * Get study metadata from OpenAlex and DynamoDB via pmids.
     * @summary Get Study Metadata From Openalex For A Given List Of Pmids.
     * @param {StudyMetadataIn} studyMetadataIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPost(studyMetadataIn: StudyMetadataIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyMetadataOut>>;
};
/**
 * StudyMetadataApi - factory interface
 * @export
 */
export declare const StudyMetadataApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get study metadata from OpenAlex and DynamoDB via pmids.
     * @summary Get Study Metadata From Openalex For A Given List Of Pmids.
     * @param {StudyMetadataIn} studyMetadataIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPost(studyMetadataIn: StudyMetadataIn, options?: any): AxiosPromise<StudyMetadataOut>;
};
/**
 * Request parameters for getStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPost operation in StudyMetadataApi.
 * @export
 * @interface StudyMetadataApiGetStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPostRequest
 */
export interface StudyMetadataApiGetStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPostRequest {
    /**
     *
     * @type {StudyMetadataIn}
     * @memberof StudyMetadataApiGetStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPost
     */
    readonly studyMetadataIn: StudyMetadataIn;
}
/**
 * StudyMetadataApi - object-oriented interface
 * @export
 * @class StudyMetadataApi
 * @extends {BaseAPI}
 */
export declare class StudyMetadataApi extends BaseAPI {
    /**
     * Get study metadata from OpenAlex and DynamoDB via pmids.
     * @summary Get Study Metadata From Openalex For A Given List Of Pmids.
     * @param {StudyMetadataApiGetStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof StudyMetadataApi
     */
    getStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPost(requestParameters: StudyMetadataApiGetStudyMetadataFromOpenAlexForAGivenListOfPmidsV1StudyMetadataPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyMetadataOut>>;
}
/**
 * SystemGraphApi - axios parameter creator
 * @export
 */
export declare const SystemGraphApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Get system graph from the database.
     * @summary Get One Degree From Topic
     * @param {string} topicId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGet: (topicId: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph Endpoint
     * @param {string} [topic1] Topic 1
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids1] Topic 1 ids
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphEndpointV1SystemGraphSemanticGraphGet: (topic1?: string, topic2?: string, ids1?: Array<string>, ids2?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph Endpoint
     * @param {string} [topicName] Topic name
     * @param {Array<string>} [topicIds] Topic ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet: (topicName?: string, topicIds?: Array<string>, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get system graph from the database.
     * @summary Get System Graph Endpoint
     * @param {number} [numRelationships] Number of relationships to return.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSystemGraphEndpointV1SystemGraphSystemGraphGet: (numRelationships?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch semantic graph.
     * @summary Get Topological Categories Endpoint
     * @param {string} topic1 Topic 1
     * @param {Array<string>} ids1 Topic 1 ids
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {number} [pageSize] Page size
     * @param {number} [offset] Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet: (topic1: string, ids1: Array<string>, topic2?: string, ids2?: Array<string>, pageSize?: number, offset?: number, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * SystemGraphApi - functional programming interface
 * @export
 */
export declare const SystemGraphApiFp: (configuration?: Configuration) => {
    /**
     * Get system graph from the database.
     * @summary Get One Degree From Topic
     * @param {string} topicId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGet(topicId: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptRelationshipsOut>>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph Endpoint
     * @param {string} [topic1] Topic 1
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids1] Topic 1 ids
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphEndpointV1SystemGraphSemanticGraphGet(topic1?: string, topic2?: string, ids1?: Array<string>, ids2?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsGraphDataGraphData>>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph Endpoint
     * @param {string} [topicName] Topic name
     * @param {Array<string>} [topicIds] Topic ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet(topicName?: string, topicIds?: Array<string>, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsGraphDataGraphData>>;
    /**
     * Get system graph from the database.
     * @summary Get System Graph Endpoint
     * @param {number} [numRelationships] Number of relationships to return.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSystemGraphEndpointV1SystemGraphSystemGraphGet(numRelationships?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SystemGraphApiClientModelsGraphDataGraphData>>;
    /**
     * Fetch semantic graph.
     * @summary Get Topological Categories Endpoint
     * @param {string} topic1 Topic 1
     * @param {Array<string>} ids1 Topic 1 ids
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {number} [pageSize] Page size
     * @param {number} [offset] Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet(topic1: string, ids1: Array<string>, topic2?: string, ids2?: Array<string>, pageSize?: number, offset?: number, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TopicCategories>>;
};
/**
 * SystemGraphApi - factory interface
 * @export
 */
export declare const SystemGraphApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Get system graph from the database.
     * @summary Get One Degree From Topic
     * @param {string} topicId
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGet(topicId: string, options?: any): AxiosPromise<ConceptRelationshipsOut>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph Endpoint
     * @param {string} [topic1] Topic 1
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids1] Topic 1 ids
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticGraphEndpointV1SystemGraphSemanticGraphGet(topic1?: string, topic2?: string, ids1?: Array<string>, ids2?: Array<string>, options?: any): AxiosPromise<SystemGraphApiClientModelsGraphDataGraphData>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph Endpoint
     * @param {string} [topicName] Topic name
     * @param {Array<string>} [topicIds] Topic ids
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet(topicName?: string, topicIds?: Array<string>, options?: any): AxiosPromise<SystemGraphApiClientModelsGraphDataGraphData>;
    /**
     * Get system graph from the database.
     * @summary Get System Graph Endpoint
     * @param {number} [numRelationships] Number of relationships to return.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getSystemGraphEndpointV1SystemGraphSystemGraphGet(numRelationships?: number, options?: any): AxiosPromise<SystemGraphApiClientModelsGraphDataGraphData>;
    /**
     * Fetch semantic graph.
     * @summary Get Topological Categories Endpoint
     * @param {string} topic1 Topic 1
     * @param {Array<string>} ids1 Topic 1 ids
     * @param {string} [topic2] Topic 2
     * @param {Array<string>} [ids2] Topic 2 ids
     * @param {number} [pageSize] Page size
     * @param {number} [offset] Offset
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet(topic1: string, ids1: Array<string>, topic2?: string, ids2?: Array<string>, pageSize?: number, offset?: number, options?: any): AxiosPromise<TopicCategories>;
};
/**
 * Request parameters for getOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGet operation in SystemGraphApi.
 * @export
 * @interface SystemGraphApiGetOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGetRequest
 */
export interface SystemGraphApiGetOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGetRequest {
    /**
     *
     * @type {string}
     * @memberof SystemGraphApiGetOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGet
     */
    readonly topicId: string;
}
/**
 * Request parameters for getSemanticGraphEndpointV1SystemGraphSemanticGraphGet operation in SystemGraphApi.
 * @export
 * @interface SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGetRequest
 */
export interface SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGetRequest {
    /**
     * Topic 1
     * @type {string}
     * @memberof SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGet
     */
    readonly topic1?: string;
    /**
     * Topic 2
     * @type {string}
     * @memberof SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGet
     */
    readonly topic2?: string;
    /**
     * Topic 1 ids
     * @type {Array<string>}
     * @memberof SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGet
     */
    readonly ids1?: Array<string>;
    /**
     * Topic 2 ids
     * @type {Array<string>}
     * @memberof SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGet
     */
    readonly ids2?: Array<string>;
}
/**
 * Request parameters for getSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet operation in SystemGraphApi.
 * @export
 * @interface SystemGraphApiGetSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGetRequest
 */
export interface SystemGraphApiGetSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGetRequest {
    /**
     * Topic name
     * @type {string}
     * @memberof SystemGraphApiGetSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet
     */
    readonly topicName?: string;
    /**
     * Topic ids
     * @type {Array<string>}
     * @memberof SystemGraphApiGetSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet
     */
    readonly topicIds?: Array<string>;
}
/**
 * Request parameters for getSystemGraphEndpointV1SystemGraphSystemGraphGet operation in SystemGraphApi.
 * @export
 * @interface SystemGraphApiGetSystemGraphEndpointV1SystemGraphSystemGraphGetRequest
 */
export interface SystemGraphApiGetSystemGraphEndpointV1SystemGraphSystemGraphGetRequest {
    /**
     * Number of relationships to return.
     * @type {number}
     * @memberof SystemGraphApiGetSystemGraphEndpointV1SystemGraphSystemGraphGet
     */
    readonly numRelationships?: number;
}
/**
 * Request parameters for getTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet operation in SystemGraphApi.
 * @export
 * @interface SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGetRequest
 */
export interface SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGetRequest {
    /**
     * Topic 1
     * @type {string}
     * @memberof SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet
     */
    readonly topic1: string;
    /**
     * Topic 1 ids
     * @type {Array<string>}
     * @memberof SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet
     */
    readonly ids1: Array<string>;
    /**
     * Topic 2
     * @type {string}
     * @memberof SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet
     */
    readonly topic2?: string;
    /**
     * Topic 2 ids
     * @type {Array<string>}
     * @memberof SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet
     */
    readonly ids2?: Array<string>;
    /**
     * Page size
     * @type {number}
     * @memberof SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet
     */
    readonly pageSize?: number;
    /**
     * Offset
     * @type {number}
     * @memberof SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet
     */
    readonly offset?: number;
}
/**
 * SystemGraphApi - object-oriented interface
 * @export
 * @class SystemGraphApi
 * @extends {BaseAPI}
 */
export declare class SystemGraphApi extends BaseAPI {
    /**
     * Get system graph from the database.
     * @summary Get One Degree From Topic
     * @param {SystemGraphApiGetOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemGraphApi
     */
    getOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGet(requestParameters: SystemGraphApiGetOneDegreeFromTopicV1SystemGraphTopicTopicIdOneDegreeGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptRelationshipsOut>>;
    /**
     * Fetch semantic graph.
     * @summary Get Semantic Graph Endpoint
     * @param {SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemGraphApi
     */
    getSemanticGraphEndpointV1SystemGraphSemanticGraphGet(requestParameters?: SystemGraphApiGetSemanticGraphEndpointV1SystemGraphSemanticGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsGraphDataGraphData>>;
    /**
     * Fetch single topic semantic graph.
     * @summary Get Semantic Topic Graph Endpoint
     * @param {SystemGraphApiGetSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemGraphApi
     */
    getSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGet(requestParameters?: SystemGraphApiGetSemanticTopicGraphEndpointV1SystemGraphSemanticTopicGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsGraphDataGraphData>>;
    /**
     * Get system graph from the database.
     * @summary Get System Graph Endpoint
     * @param {SystemGraphApiGetSystemGraphEndpointV1SystemGraphSystemGraphGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemGraphApi
     */
    getSystemGraphEndpointV1SystemGraphSystemGraphGet(requestParameters?: SystemGraphApiGetSystemGraphEndpointV1SystemGraphSystemGraphGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<SystemGraphApiClientModelsGraphDataGraphData>>;
    /**
     * Fetch semantic graph.
     * @summary Get Topological Categories Endpoint
     * @param {SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SystemGraphApi
     */
    getTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGet(requestParameters: SystemGraphApiGetTopologicalCategoriesEndpointV1SystemGraphTopologicalCategoriesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<TopicCategories>>;
}
/**
 * UsersApi - axios parameter creator
 * @export
 */
export declare const UsersApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a new user.
     * @summary Create A User By Cognito Id.
     * @param {string} userId
     * @param {UpdateProfileIn} updateProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAUserByCognitoIdV1UsersPost: (userId: string, updateProfileIn: UpdateProfileIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new user.
     * @summary Create A User From Credentials.
     * @param {UserProfileIn} userProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAUserFromCredentialsV1UserPost: (userProfileIn: UserProfileIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch the authenticated user\'s profile.
     * @summary Get Authenticated User
     * @param {boolean} [includeAvatar] Include the user\&#39;s avatar.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthenticatedUserV1UserGet: (includeAvatar?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Fetch a single user\'s public profile.
     * @summary Get User
     * @param {string} userId
     * @param {boolean} [includeAvatar]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserV1UsersUserIdGet: (userId: string, includeAvatar?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List public profiles.
     * @summary Get Users
     * @param {string} [teamId]
     * @param {string} [email] Email address
     * @param {boolean} [includeAvatar] Include avatar
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsersV1UsersGet: (teamId?: string, email?: string, includeAvatar?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet: (studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserConceptsV1UserConceptsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserModelsV1UserModelsGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserStudiesV1UserStudiesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserVariablesV1UserVariablesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserConceptsV1UsersUserIdConceptsGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserDatasetsV1UsersUserIdDatasetsGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserFeaturesV1UsersUserIdFeaturesGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserModelsV1UsersUserIdModelsGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserStudiesV1UsersUserIdStudiesGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserVariablesV1UsersUserIdVariablesGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create a new user.
     * @summary Update A User By Id.
     * @param {string} userId
     * @param {UpdateProfileIn} updateProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAUserByIdV1UsersUserIdPatch: (userId: string, updateProfileIn: UpdateProfileIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Update the authenticated user\'s profile.
     * @summary Update Authenticated User Profile
     * @param {UserProfileIn} userProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAuthenticatedUserProfileV1UserPut: (userProfileIn: UserProfileIn, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * UsersApi - functional programming interface
 * @export
 */
export declare const UsersApiFp: (configuration?: Configuration) => {
    /**
     * Create a new user.
     * @summary Create A User By Cognito Id.
     * @param {string} userId
     * @param {UpdateProfileIn} updateProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAUserByCognitoIdV1UsersPost(userId: string, updateProfileIn: UpdateProfileIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserPrivateProfileOut>>;
    /**
     * Create a new user.
     * @summary Create A User From Credentials.
     * @param {UserProfileIn} userProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAUserFromCredentialsV1UserPost(userProfileIn: UserProfileIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserPrivateProfileOut>>;
    /**
     * Fetch the authenticated user\'s profile.
     * @summary Get Authenticated User
     * @param {boolean} [includeAvatar] Include the user\&#39;s avatar.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthenticatedUserV1UserGet(includeAvatar?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserPrivateProfileOut>>;
    /**
     * Fetch a single user\'s public profile.
     * @summary Get User
     * @param {string} userId
     * @param {boolean} [includeAvatar]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserV1UsersUserIdGet(userId: string, includeAvatar?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserPublicProfileOut>>;
    /**
     * List public profiles.
     * @summary Get Users
     * @param {string} [teamId]
     * @param {string} [email] Email address
     * @param {boolean} [includeAvatar] Include avatar
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsersV1UsersGet(teamId?: string, email?: string, includeAvatar?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<UserPublicProfileOut>>>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet(studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserConceptsV1UserConceptsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptPaginationOut>>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetPaginationOut>>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserModelsV1UserModelsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserStudiesV1UserStudiesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyPaginationOut>>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserVariablesV1UserVariablesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariablePaginationOut>>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserConceptsV1UsersUserIdConceptsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ConceptPaginationOut>>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserDatasetsV1UsersUserIdDatasetsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DatasetPaginationOut>>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserFeaturesV1UsersUserIdFeaturesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<FeaturePaginationOut>>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserModelsV1UsersUserIdModelsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ModelPaginationOut>>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserStudiesV1UsersUserIdStudiesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<StudyPaginationOut>>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserVariablesV1UsersUserIdVariablesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariablePaginationOut>>;
    /**
     * Create a new user.
     * @summary Update A User By Id.
     * @param {string} userId
     * @param {UpdateProfileIn} updateProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAUserByIdV1UsersUserIdPatch(userId: string, updateProfileIn: UpdateProfileIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserPrivateProfileOut>>;
    /**
     * Update the authenticated user\'s profile.
     * @summary Update Authenticated User Profile
     * @param {UserProfileIn} userProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAuthenticatedUserProfileV1UserPut(userProfileIn: UserProfileIn, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UserPrivateProfileOut>>;
};
/**
 * UsersApi - factory interface
 * @export
 */
export declare const UsersApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a new user.
     * @summary Create A User By Cognito Id.
     * @param {string} userId
     * @param {UpdateProfileIn} updateProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAUserByCognitoIdV1UsersPost(userId: string, updateProfileIn: UpdateProfileIn, options?: any): AxiosPromise<UserPrivateProfileOut>;
    /**
     * Create a new user.
     * @summary Create A User From Credentials.
     * @param {UserProfileIn} userProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAUserFromCredentialsV1UserPost(userProfileIn: UserProfileIn, options?: any): AxiosPromise<UserPrivateProfileOut>;
    /**
     * Fetch the authenticated user\'s profile.
     * @summary Get Authenticated User
     * @param {boolean} [includeAvatar] Include the user\&#39;s avatar.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getAuthenticatedUserV1UserGet(includeAvatar?: boolean, options?: any): AxiosPromise<UserPrivateProfileOut>;
    /**
     * Fetch a single user\'s public profile.
     * @summary Get User
     * @param {string} userId
     * @param {boolean} [includeAvatar]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUserV1UsersUserIdGet(userId: string, includeAvatar?: boolean, options?: any): AxiosPromise<UserPublicProfileOut>;
    /**
     * List public profiles.
     * @summary Get Users
     * @param {string} [teamId]
     * @param {string} [email] Email address
     * @param {boolean} [includeAvatar] Include avatar
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getUsersV1UsersGet(teamId?: string, email?: string, includeAvatar?: boolean, options?: any): AxiosPromise<Array<UserPublicProfileOut>>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {string} studyId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet(studyId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, teamId?: string, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserConceptsV1UserConceptsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: any): AxiosPromise<ConceptPaginationOut>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<DatasetPaginationOut>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserModelsV1UserModelsGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserStudiesV1UserStudiesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<StudyPaginationOut>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserVariablesV1UserVariablesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: any): AxiosPromise<VariablePaginationOut>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ConceptSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inConceptGraph] Is Concept in the Concept Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserConceptsV1UsersUserIdConceptsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ConceptSortEnum, ordering?: Ordering, sortBy?: string, inConceptGraph?: boolean, teamId?: string, options?: any): AxiosPromise<ConceptPaginationOut>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DatasetSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter datasets with variable tag
     * @param {string} [conceptTag] Filter datasets with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserDatasetsV1UsersUserIdDatasetsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DatasetSortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<DatasetPaginationOut>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {FeatureSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inFeatureGraph] Is Feature in the Feature Graph?
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserFeaturesV1UsersUserIdFeaturesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: FeatureSortEnum, ordering?: Ordering, sortBy?: string, inFeatureGraph?: boolean, teamId?: string, options?: any): AxiosPromise<FeaturePaginationOut>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {ModelSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [containsVariableId] Filter models containing a variable via an association
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserModelsV1UsersUserIdModelsGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: ModelSortEnum, ordering?: Ordering, sortBy?: string, containsVariableId?: string, teamId?: string, options?: any): AxiosPromise<ModelPaginationOut>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {StudySortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {string} [variableTag] Filter studies with variable tag
     * @param {string} [conceptTag] Filter studies with concept tag
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserStudiesV1UsersUserIdStudiesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: StudySortEnum, ordering?: Ordering, sortBy?: string, variableTag?: string, conceptTag?: string, teamId?: string, options?: any): AxiosPromise<StudyPaginationOut>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserVariablesV1UsersUserIdVariablesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: any): AxiosPromise<VariablePaginationOut>;
    /**
     * Create a new user.
     * @summary Update A User By Id.
     * @param {string} userId
     * @param {UpdateProfileIn} updateProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAUserByIdV1UsersUserIdPatch(userId: string, updateProfileIn: UpdateProfileIn, options?: any): AxiosPromise<UserPrivateProfileOut>;
    /**
     * Update the authenticated user\'s profile.
     * @summary Update Authenticated User Profile
     * @param {UserProfileIn} userProfileIn
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    updateAuthenticatedUserProfileV1UserPut(userProfileIn: UserProfileIn, options?: any): AxiosPromise<UserPrivateProfileOut>;
};
/**
 * Request parameters for createAUserByCognitoIdV1UsersPost operation in UsersApi.
 * @export
 * @interface UsersApiCreateAUserByCognitoIdV1UsersPostRequest
 */
export interface UsersApiCreateAUserByCognitoIdV1UsersPostRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiCreateAUserByCognitoIdV1UsersPost
     */
    readonly userId: string;
    /**
     *
     * @type {UpdateProfileIn}
     * @memberof UsersApiCreateAUserByCognitoIdV1UsersPost
     */
    readonly updateProfileIn: UpdateProfileIn;
}
/**
 * Request parameters for createAUserFromCredentialsV1UserPost operation in UsersApi.
 * @export
 * @interface UsersApiCreateAUserFromCredentialsV1UserPostRequest
 */
export interface UsersApiCreateAUserFromCredentialsV1UserPostRequest {
    /**
     *
     * @type {UserProfileIn}
     * @memberof UsersApiCreateAUserFromCredentialsV1UserPost
     */
    readonly userProfileIn: UserProfileIn;
}
/**
 * Request parameters for getAuthenticatedUserV1UserGet operation in UsersApi.
 * @export
 * @interface UsersApiGetAuthenticatedUserV1UserGetRequest
 */
export interface UsersApiGetAuthenticatedUserV1UserGetRequest {
    /**
     * Include the user\&#39;s avatar.
     * @type {boolean}
     * @memberof UsersApiGetAuthenticatedUserV1UserGet
     */
    readonly includeAvatar?: boolean;
}
/**
 * Request parameters for getUserV1UsersUserIdGet operation in UsersApi.
 * @export
 * @interface UsersApiGetUserV1UsersUserIdGetRequest
 */
export interface UsersApiGetUserV1UsersUserIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiGetUserV1UsersUserIdGet
     */
    readonly userId: string;
    /**
     *
     * @type {boolean}
     * @memberof UsersApiGetUserV1UsersUserIdGet
     */
    readonly includeAvatar?: boolean;
}
/**
 * Request parameters for getUsersV1UsersGet operation in UsersApi.
 * @export
 * @interface UsersApiGetUsersV1UsersGetRequest
 */
export interface UsersApiGetUsersV1UsersGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiGetUsersV1UsersGet
     */
    readonly teamId?: string;
    /**
     * Email address
     * @type {string}
     * @memberof UsersApiGetUsersV1UsersGet
     */
    readonly email?: string;
    /**
     * Include avatar
     * @type {boolean}
     * @memberof UsersApiGetUsersV1UsersGet
     */
    readonly includeAvatar?: boolean;
}
/**
 * Request parameters for listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet operation in UsersApi.
 * @export
 * @interface UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest
 */
export interface UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly studyId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserConceptsV1UserConceptsGet operation in UsersApi.
 * @export
 * @interface UsersApiListAuthenticatedUserConceptsV1UserConceptsGetRequest
 */
export interface UsersApiListAuthenticatedUserConceptsV1UserConceptsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ConceptSortEnum}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly orderBy?: ConceptSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly sortBy?: string;
    /**
     * Is Concept in the Concept Graph?
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly inConceptGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserConceptsV1UserConceptsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserDatasetsV1UserDatasetsGet operation in UsersApi.
 * @export
 * @interface UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest
 */
export interface UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DatasetSortEnum}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly orderBy?: DatasetSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly sortBy?: string;
    /**
     * Filter datasets with variable tag
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly variableTag?: string;
    /**
     * Filter datasets with concept tag
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserFeaturesV1UserFeaturesGet operation in UsersApi.
 * @export
 * @interface UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest
 */
export interface UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserModelsV1UserModelsGet operation in UsersApi.
 * @export
 * @interface UsersApiListAuthenticatedUserModelsV1UserModelsGetRequest
 */
export interface UsersApiListAuthenticatedUserModelsV1UserModelsGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly containsVariableId?: string;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserModelsV1UserModelsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserStudiesV1UserStudiesGet operation in UsersApi.
 * @export
 * @interface UsersApiListAuthenticatedUserStudiesV1UserStudiesGetRequest
 */
export interface UsersApiListAuthenticatedUserStudiesV1UserStudiesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {StudySortEnum}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly orderBy?: StudySortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly sortBy?: string;
    /**
     * Filter studies with variable tag
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly variableTag?: string;
    /**
     * Filter studies with concept tag
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserStudiesV1UserStudiesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAuthenticatedUserVariablesV1UserVariablesGet operation in UsersApi.
 * @export
 * @interface UsersApiListAuthenticatedUserVariablesV1UserVariablesGetRequest
 */
export interface UsersApiListAuthenticatedUserVariablesV1UserVariablesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {VariableSortEnum}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly orderBy?: VariableSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly sortBy?: string;
    /**
     * Is Variable in the Variable Graph?
     * @type {boolean}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly inVariableGraph?: boolean;
    /**
     * Custom metric tags
     * @type {Array<string>}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UsersApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserConceptsV1UsersUserIdConceptsGet operation in UsersApi.
 * @export
 * @interface UsersApiListUserConceptsV1UsersUserIdConceptsGetRequest
 */
export interface UsersApiListUserConceptsV1UsersUserIdConceptsGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ConceptSortEnum}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly orderBy?: ConceptSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly sortBy?: string;
    /**
     * Is Concept in the Concept Graph?
     * @type {boolean}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly inConceptGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserConceptsV1UsersUserIdConceptsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserDatasetsV1UsersUserIdDatasetsGet operation in UsersApi.
 * @export
 * @interface UsersApiListUserDatasetsV1UsersUserIdDatasetsGetRequest
 */
export interface UsersApiListUserDatasetsV1UsersUserIdDatasetsGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DatasetSortEnum}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly orderBy?: DatasetSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly sortBy?: string;
    /**
     * Filter datasets with variable tag
     * @type {string}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly variableTag?: string;
    /**
     * Filter datasets with concept tag
     * @type {string}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserDatasetsV1UsersUserIdDatasetsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserFeaturesV1UsersUserIdFeaturesGet operation in UsersApi.
 * @export
 * @interface UsersApiListUserFeaturesV1UsersUserIdFeaturesGetRequest
 */
export interface UsersApiListUserFeaturesV1UsersUserIdFeaturesGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {FeatureSortEnum}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly orderBy?: FeatureSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly sortBy?: string;
    /**
     * Is Feature in the Feature Graph?
     * @type {boolean}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly inFeatureGraph?: boolean;
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserFeaturesV1UsersUserIdFeaturesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserModelsV1UsersUserIdModelsGet operation in UsersApi.
 * @export
 * @interface UsersApiListUserModelsV1UsersUserIdModelsGetRequest
 */
export interface UsersApiListUserModelsV1UsersUserIdModelsGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {ModelSortEnum}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly orderBy?: ModelSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly sortBy?: string;
    /**
     * Filter models containing a variable via an association
     * @type {string}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly containsVariableId?: string;
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserModelsV1UsersUserIdModelsGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserStudiesV1UsersUserIdStudiesGet operation in UsersApi.
 * @export
 * @interface UsersApiListUserStudiesV1UsersUserIdStudiesGetRequest
 */
export interface UsersApiListUserStudiesV1UsersUserIdStudiesGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {StudySortEnum}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly orderBy?: StudySortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly sortBy?: string;
    /**
     * Filter studies with variable tag
     * @type {string}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly variableTag?: string;
    /**
     * Filter studies with concept tag
     * @type {string}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly conceptTag?: string;
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserStudiesV1UsersUserIdStudiesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listUserVariablesV1UsersUserIdVariablesGet operation in UsersApi.
 * @export
 * @interface UsersApiListUserVariablesV1UsersUserIdVariablesGetRequest
 */
export interface UsersApiListUserVariablesV1UsersUserIdVariablesGetRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {VariableSortEnum}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly orderBy?: VariableSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly sortBy?: string;
    /**
     * Is Variable in the Variable Graph?
     * @type {boolean}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly inVariableGraph?: boolean;
    /**
     * Custom metric tags
     * @type {Array<string>}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof UsersApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for updateAUserByIdV1UsersUserIdPatch operation in UsersApi.
 * @export
 * @interface UsersApiUpdateAUserByIdV1UsersUserIdPatchRequest
 */
export interface UsersApiUpdateAUserByIdV1UsersUserIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof UsersApiUpdateAUserByIdV1UsersUserIdPatch
     */
    readonly userId: string;
    /**
     *
     * @type {UpdateProfileIn}
     * @memberof UsersApiUpdateAUserByIdV1UsersUserIdPatch
     */
    readonly updateProfileIn: UpdateProfileIn;
}
/**
 * Request parameters for updateAuthenticatedUserProfileV1UserPut operation in UsersApi.
 * @export
 * @interface UsersApiUpdateAuthenticatedUserProfileV1UserPutRequest
 */
export interface UsersApiUpdateAuthenticatedUserProfileV1UserPutRequest {
    /**
     *
     * @type {UserProfileIn}
     * @memberof UsersApiUpdateAuthenticatedUserProfileV1UserPut
     */
    readonly userProfileIn: UserProfileIn;
}
/**
 * UsersApi - object-oriented interface
 * @export
 * @class UsersApi
 * @extends {BaseAPI}
 */
export declare class UsersApi extends BaseAPI {
    /**
     * Create a new user.
     * @summary Create A User By Cognito Id.
     * @param {UsersApiCreateAUserByCognitoIdV1UsersPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    createAUserByCognitoIdV1UsersPost(requestParameters: UsersApiCreateAUserByCognitoIdV1UsersPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPrivateProfileOut>>;
    /**
     * Create a new user.
     * @summary Create A User From Credentials.
     * @param {UsersApiCreateAUserFromCredentialsV1UserPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    createAUserFromCredentialsV1UserPost(requestParameters: UsersApiCreateAUserFromCredentialsV1UserPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPrivateProfileOut>>;
    /**
     * Fetch the authenticated user\'s profile.
     * @summary Get Authenticated User
     * @param {UsersApiGetAuthenticatedUserV1UserGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getAuthenticatedUserV1UserGet(requestParameters?: UsersApiGetAuthenticatedUserV1UserGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPrivateProfileOut>>;
    /**
     * Fetch a single user\'s public profile.
     * @summary Get User
     * @param {UsersApiGetUserV1UsersUserIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getUserV1UsersUserIdGet(requestParameters: UsersApiGetUserV1UsersUserIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPublicProfileOut>>;
    /**
     * List public profiles.
     * @summary Get Users
     * @param {UsersApiGetUsersV1UsersGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    getUsersV1UsersGet(requestParameters?: UsersApiGetUsersV1UsersGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPublicProfileOut[]>>;
    /**
     * List association in study by authenticated user.
     * @summary List Associations In The Authenticated User\'S Study.
     * @param {UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGet(requestParameters: UsersApiListAssociationsInTheAuthenticatedUserSStudyV1UserStudiesStudyIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s concepts.
     * @summary List Authenticated User Concepts
     * @param {UsersApiListAuthenticatedUserConceptsV1UserConceptsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAuthenticatedUserConceptsV1UserConceptsGet(requestParameters?: UsersApiListAuthenticatedUserConceptsV1UserConceptsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptPaginationOut>>;
    /**
     * List authenticated user\'s datasets.
     * @summary List Authenticated User Datasets
     * @param {UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAuthenticatedUserDatasetsV1UserDatasetsGet(requestParameters?: UsersApiListAuthenticatedUserDatasetsV1UserDatasetsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetPaginationOut>>;
    /**
     * List authenticated user\'s features.
     * @summary List Authenticated User Features
     * @param {UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAuthenticatedUserFeaturesV1UserFeaturesGet(requestParameters?: UsersApiListAuthenticatedUserFeaturesV1UserFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List authenticated user\'s models.
     * @summary List Authenticated User Models
     * @param {UsersApiListAuthenticatedUserModelsV1UserModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAuthenticatedUserModelsV1UserModelsGet(requestParameters?: UsersApiListAuthenticatedUserModelsV1UserModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * List authenticated user\'s studies.
     * @summary List Authenticated User Studies
     * @param {UsersApiListAuthenticatedUserStudiesV1UserStudiesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAuthenticatedUserStudiesV1UserStudiesGet(requestParameters?: UsersApiListAuthenticatedUserStudiesV1UserStudiesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyPaginationOut>>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {UsersApiListAuthenticatedUserVariablesV1UserVariablesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listAuthenticatedUserVariablesV1UserVariablesGet(requestParameters?: UsersApiListAuthenticatedUserVariablesV1UserVariablesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariablePaginationOut>>;
    /**
     * List a user\'s concepts.
     * @summary List User Concepts
     * @param {UsersApiListUserConceptsV1UsersUserIdConceptsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUserConceptsV1UsersUserIdConceptsGet(requestParameters: UsersApiListUserConceptsV1UsersUserIdConceptsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ConceptPaginationOut>>;
    /**
     * List a user\'s datasets.
     * @summary List User Datasets
     * @param {UsersApiListUserDatasetsV1UsersUserIdDatasetsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUserDatasetsV1UsersUserIdDatasetsGet(requestParameters: UsersApiListUserDatasetsV1UsersUserIdDatasetsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DatasetPaginationOut>>;
    /**
     * List a user\'s features.
     * @summary List User Features
     * @param {UsersApiListUserFeaturesV1UsersUserIdFeaturesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUserFeaturesV1UsersUserIdFeaturesGet(requestParameters: UsersApiListUserFeaturesV1UsersUserIdFeaturesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<FeaturePaginationOut>>;
    /**
     * List a user\'s models.
     * @summary List User Models
     * @param {UsersApiListUserModelsV1UsersUserIdModelsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUserModelsV1UsersUserIdModelsGet(requestParameters: UsersApiListUserModelsV1UsersUserIdModelsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<ModelPaginationOut>>;
    /**
     * List a user\'s studies.
     * @summary List User Studies
     * @param {UsersApiListUserStudiesV1UsersUserIdStudiesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUserStudiesV1UsersUserIdStudiesGet(requestParameters: UsersApiListUserStudiesV1UsersUserIdStudiesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<StudyPaginationOut>>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {UsersApiListUserVariablesV1UsersUserIdVariablesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    listUserVariablesV1UsersUserIdVariablesGet(requestParameters: UsersApiListUserVariablesV1UsersUserIdVariablesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariablePaginationOut>>;
    /**
     * Create a new user.
     * @summary Update A User By Id.
     * @param {UsersApiUpdateAUserByIdV1UsersUserIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    updateAUserByIdV1UsersUserIdPatch(requestParameters: UsersApiUpdateAUserByIdV1UsersUserIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPrivateProfileOut>>;
    /**
     * Update the authenticated user\'s profile.
     * @summary Update Authenticated User Profile
     * @param {UsersApiUpdateAuthenticatedUserProfileV1UserPutRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof UsersApi
     */
    updateAuthenticatedUserProfileV1UserPut(requestParameters: UsersApiUpdateAuthenticatedUserProfileV1UserPutRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<UserPrivateProfileOut>>;
}
/**
 * VariablesApi - axios parameter creator
 * @export
 */
export declare const VariablesApiAxiosParamCreator: (configuration?: Configuration) => {
    /**
     * Create a Variable.
     * @summary Create A Variable.
     * @param {VariableIn} variableIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAVariableV1VariablesPost: (variableIn: VariableIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Create mulitple Variables.
     * @summary Create Multiple Variables.
     * @param {Array<VariableIn> | VariableIn} arrayVariableInVariableIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMultipleVariablesV1VariablesBulkPost: (arrayVariableInVariableIn: Array<VariableIn> | VariableIn, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Delete a Variable.  Deletion will fail if this Variable is attached to any existing Feature.
     * @summary Delete Variable
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteVariableV1VariablesVariableIdDelete: (variableId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get Variable.
     * @summary Get Variable
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVariableV1VariablesVariableIdGet: (variableId: string, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1VariablesVariableIdAssociationsGet: (variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserVariablesV1UserVariablesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1VariablesVariableIdDashboardsGet: (variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserVariablesV1UsersUserIdVariablesGet: (userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * List Variables.
     * @summary List Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listVariablesV1VariablesGet: (query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Merge a variable with other ids.
     * @summary Merge Variable Post
     * @param {string} variableId
     * @param {BodyMergeVariablePostV1VariablesVariableIdMergePost} bodyMergeVariablePostV1VariablesVariableIdMergePost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeVariablePostV1VariablesVariableIdMergePost: (variableId: string, bodyMergeVariablePostV1VariablesVariableIdMergePost: BodyMergeVariablePostV1VariablesVariableIdMergePost, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Variable
     * @param {string} variableId
     * @param {PatchVariableOp | Array<PatchVariableOp>} patchVariableOpArrayPatchVariableOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchVariableV1VariablesVariableIdPatch: (variableId: string, patchVariableOpArrayPatchVariableOp: PatchVariableOp | Array<PatchVariableOp>, teamId?: string, options?: AxiosRequestConfig) => Promise<RequestArgs>;
};
/**
 * VariablesApi - functional programming interface
 * @export
 */
export declare const VariablesApiFp: (configuration?: Configuration) => {
    /**
     * Create a Variable.
     * @summary Create A Variable.
     * @param {VariableIn} variableIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAVariableV1VariablesPost(variableIn: VariableIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOut>>;
    /**
     * Create mulitple Variables.
     * @summary Create Multiple Variables.
     * @param {Array<VariableIn> | VariableIn} arrayVariableInVariableIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMultipleVariablesV1VariablesBulkPost(arrayVariableInVariableIn: Array<VariableIn> | VariableIn, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<VariableOut>>>;
    /**
     * Delete a Variable.  Deletion will fail if this Variable is attached to any existing Feature.
     * @summary Delete Variable
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteVariableV1VariablesVariableIdDelete(variableId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
    /**
     * Get Variable.
     * @summary Get Variable
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVariableV1VariablesVariableIdGet(variableId: string, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariableOut>>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1VariablesVariableIdAssociationsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserVariablesV1UserVariablesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariablePaginationOut>>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1VariablesVariableIdDashboardsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DashboardPaginationOut>>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserVariablesV1UsersUserIdVariablesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariablePaginationOut>>;
    /**
     * List Variables.
     * @summary List Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listVariablesV1VariablesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<VariablePaginationOut>>;
    /**
     * Merge a variable with other ids.
     * @summary Merge Variable Post
     * @param {string} variableId
     * @param {BodyMergeVariablePostV1VariablesVariableIdMergePost} bodyMergeVariablePostV1VariablesVariableIdMergePost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeVariablePostV1VariablesVariableIdMergePost(variableId: string, bodyMergeVariablePostV1VariablesVariableIdMergePost: BodyMergeVariablePostV1VariablesVariableIdMergePost, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<any>>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Variable
     * @param {string} variableId
     * @param {PatchVariableOp | Array<PatchVariableOp>} patchVariableOpArrayPatchVariableOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchVariableV1VariablesVariableIdPatch(variableId: string, patchVariableOpArrayPatchVariableOp: PatchVariableOp | Array<PatchVariableOp>, teamId?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<void>>;
};
/**
 * VariablesApi - factory interface
 * @export
 */
export declare const VariablesApiFactory: (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) => {
    /**
     * Create a Variable.
     * @summary Create A Variable.
     * @param {VariableIn} variableIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createAVariableV1VariablesPost(variableIn: VariableIn, teamId?: string, options?: any): AxiosPromise<VariableOut>;
    /**
     * Create mulitple Variables.
     * @summary Create Multiple Variables.
     * @param {Array<VariableIn> | VariableIn} arrayVariableInVariableIn
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    createMultipleVariablesV1VariablesBulkPost(arrayVariableInVariableIn: Array<VariableIn> | VariableIn, teamId?: string, options?: any): AxiosPromise<Array<VariableOut>>;
    /**
     * Delete a Variable.  Deletion will fail if this Variable is attached to any existing Feature.
     * @summary Delete Variable
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    deleteVariableV1VariablesVariableIdDelete(variableId: string, teamId?: string, options?: any): AxiosPromise<void>;
    /**
     * Get Variable.
     * @summary Get Variable
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    getVariableV1VariablesVariableIdGet(variableId: string, teamId?: string, options?: any): AxiosPromise<VariableOut>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {AssociationSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [isInteraction] Is association from interaction model?
     * @param {boolean} [isVariableAssociation] Include only variable-variable associations.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAssociationsV1VariablesVariableIdAssociationsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: AssociationSortEnum, ordering?: Ordering, sortBy?: string, isInteraction?: boolean, isVariableAssociation?: boolean, options?: any): AxiosPromise<AssociationPaginationOut>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listAuthenticatedUserVariablesV1UserVariablesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: any): AxiosPromise<VariablePaginationOut>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {string} variableId
     * @param {string} [teamId]
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {DashboardSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listDashboardsV1VariablesVariableIdDashboardsGet(variableId: string, teamId?: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: DashboardSortEnum, ordering?: Ordering, sortBy?: string, options?: any): AxiosPromise<DashboardPaginationOut>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {string} userId
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listUserVariablesV1UsersUserIdVariablesGet(userId: string, query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: any): AxiosPromise<VariablePaginationOut>;
    /**
     * List Variables.
     * @summary List Variables
     * @param {string} [query] Search query.
     * @param {boolean} [includeHidden] Include hidden objects in results.
     * @param {Array<string>} [id] Filter results by id.
     * @param {number} [page]
     * @param {number} [pageSize]
     * @param {boolean} [total] Include total count in response. Only use if you need it as a separate database call is required.
     * @param {boolean} [idsOnly] Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @param {VariableSortEnum} [orderBy] Order by this field.
     * @param {Ordering} [ordering] Order ascending or descending.
     * @param {string} [sortBy] Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @param {boolean} [inVariableGraph] Is Variable in the Variable Graph?
     * @param {Array<string>} [tags] Custom metric tags
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    listVariablesV1VariablesGet(query?: string, includeHidden?: boolean, id?: Array<string>, page?: number, pageSize?: number, total?: boolean, idsOnly?: boolean, orderBy?: VariableSortEnum, ordering?: Ordering, sortBy?: string, inVariableGraph?: boolean, tags?: Array<string>, teamId?: string, options?: any): AxiosPromise<VariablePaginationOut>;
    /**
     * Merge a variable with other ids.
     * @summary Merge Variable Post
     * @param {string} variableId
     * @param {BodyMergeVariablePostV1VariablesVariableIdMergePost} bodyMergeVariablePostV1VariablesVariableIdMergePost
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    mergeVariablePostV1VariablesVariableIdMergePost(variableId: string, bodyMergeVariablePostV1VariablesVariableIdMergePost: BodyMergeVariablePostV1VariablesVariableIdMergePost, teamId?: string, options?: any): AxiosPromise<any>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Variable
     * @param {string} variableId
     * @param {PatchVariableOp | Array<PatchVariableOp>} patchVariableOpArrayPatchVariableOp
     * @param {string} [teamId]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     */
    patchVariableV1VariablesVariableIdPatch(variableId: string, patchVariableOpArrayPatchVariableOp: PatchVariableOp | Array<PatchVariableOp>, teamId?: string, options?: any): AxiosPromise<void>;
};
/**
 * Request parameters for createAVariableV1VariablesPost operation in VariablesApi.
 * @export
 * @interface VariablesApiCreateAVariableV1VariablesPostRequest
 */
export interface VariablesApiCreateAVariableV1VariablesPostRequest {
    /**
     *
     * @type {VariableIn}
     * @memberof VariablesApiCreateAVariableV1VariablesPost
     */
    readonly variableIn: VariableIn;
    /**
     *
     * @type {string}
     * @memberof VariablesApiCreateAVariableV1VariablesPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for createMultipleVariablesV1VariablesBulkPost operation in VariablesApi.
 * @export
 * @interface VariablesApiCreateMultipleVariablesV1VariablesBulkPostRequest
 */
export interface VariablesApiCreateMultipleVariablesV1VariablesBulkPostRequest {
    /**
     *
     * @type {Array<VariableIn> | VariableIn}
     * @memberof VariablesApiCreateMultipleVariablesV1VariablesBulkPost
     */
    readonly arrayVariableInVariableIn: Array<VariableIn> | VariableIn;
    /**
     *
     * @type {string}
     * @memberof VariablesApiCreateMultipleVariablesV1VariablesBulkPost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for deleteVariableV1VariablesVariableIdDelete operation in VariablesApi.
 * @export
 * @interface VariablesApiDeleteVariableV1VariablesVariableIdDeleteRequest
 */
export interface VariablesApiDeleteVariableV1VariablesVariableIdDeleteRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiDeleteVariableV1VariablesVariableIdDelete
     */
    readonly variableId: string;
    /**
     *
     * @type {string}
     * @memberof VariablesApiDeleteVariableV1VariablesVariableIdDelete
     */
    readonly teamId?: string;
}
/**
 * Request parameters for getVariableV1VariablesVariableIdGet operation in VariablesApi.
 * @export
 * @interface VariablesApiGetVariableV1VariablesVariableIdGetRequest
 */
export interface VariablesApiGetVariableV1VariablesVariableIdGetRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiGetVariableV1VariablesVariableIdGet
     */
    readonly variableId: string;
    /**
     *
     * @type {string}
     * @memberof VariablesApiGetVariableV1VariablesVariableIdGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listAssociationsV1VariablesVariableIdAssociationsGet operation in VariablesApi.
 * @export
 * @interface VariablesApiListAssociationsV1VariablesVariableIdAssociationsGetRequest
 */
export interface VariablesApiListAssociationsV1VariablesVariableIdAssociationsGetRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly variableId: string;
    /**
     *
     * @type {string}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {AssociationSortEnum}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly orderBy?: AssociationSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly sortBy?: string;
    /**
     * Is association from interaction model?
     * @type {boolean}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly isInteraction?: boolean;
    /**
     * Include only variable-variable associations.
     * @type {boolean}
     * @memberof VariablesApiListAssociationsV1VariablesVariableIdAssociationsGet
     */
    readonly isVariableAssociation?: boolean;
}
/**
 * Request parameters for listAuthenticatedUserVariablesV1UserVariablesGet operation in VariablesApi.
 * @export
 * @interface VariablesApiListAuthenticatedUserVariablesV1UserVariablesGetRequest
 */
export interface VariablesApiListAuthenticatedUserVariablesV1UserVariablesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {VariableSortEnum}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly orderBy?: VariableSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly sortBy?: string;
    /**
     * Is Variable in the Variable Graph?
     * @type {boolean}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly inVariableGraph?: boolean;
    /**
     * Custom metric tags
     * @type {Array<string>}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof VariablesApiListAuthenticatedUserVariablesV1UserVariablesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listDashboardsV1VariablesVariableIdDashboardsGet operation in VariablesApi.
 * @export
 * @interface VariablesApiListDashboardsV1VariablesVariableIdDashboardsGetRequest
 */
export interface VariablesApiListDashboardsV1VariablesVariableIdDashboardsGetRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly variableId: string;
    /**
     *
     * @type {string}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly teamId?: string;
    /**
     * Search query.
     * @type {string}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {DashboardSortEnum}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly orderBy?: DashboardSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof VariablesApiListDashboardsV1VariablesVariableIdDashboardsGet
     */
    readonly sortBy?: string;
}
/**
 * Request parameters for listUserVariablesV1UsersUserIdVariablesGet operation in VariablesApi.
 * @export
 * @interface VariablesApiListUserVariablesV1UsersUserIdVariablesGetRequest
 */
export interface VariablesApiListUserVariablesV1UsersUserIdVariablesGetRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly userId: string;
    /**
     * Search query.
     * @type {string}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {VariableSortEnum}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly orderBy?: VariableSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly sortBy?: string;
    /**
     * Is Variable in the Variable Graph?
     * @type {boolean}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly inVariableGraph?: boolean;
    /**
     * Custom metric tags
     * @type {Array<string>}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof VariablesApiListUserVariablesV1UsersUserIdVariablesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for listVariablesV1VariablesGet operation in VariablesApi.
 * @export
 * @interface VariablesApiListVariablesV1VariablesGetRequest
 */
export interface VariablesApiListVariablesV1VariablesGetRequest {
    /**
     * Search query.
     * @type {string}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly query?: string;
    /**
     * Include hidden objects in results.
     * @type {boolean}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly includeHidden?: boolean;
    /**
     * Filter results by id.
     * @type {Array<string>}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly id?: Array<string>;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly page?: number;
    /**
     *
     * @type {number}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly pageSize?: number;
    /**
     * Include total count in response. Only use if you need it as a separate database call is required.
     * @type {boolean}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly total?: boolean;
    /**
     * Only return ids. Will return an empty list for &#x60;items&#x60;.Will speed up the call to this endpoint if possible.
     * @type {boolean}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly idsOnly?: boolean;
    /**
     * Order by this field.
     * @type {VariableSortEnum}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly orderBy?: VariableSortEnum;
    /**
     * Order ascending or descending.
     * @type {Ordering}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly ordering?: Ordering;
    /**
     * Multi sorting parameter consisting of csv list of form \&#39;field1|asc,field2|desc,field3\&#39;. If sorting direction is not specified by &#x60;|asc&#x60; or &#x60;|desc&#x60; then descending is assumed.
     * @type {string}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly sortBy?: string;
    /**
     * Is Variable in the Variable Graph?
     * @type {boolean}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly inVariableGraph?: boolean;
    /**
     * Custom metric tags
     * @type {Array<string>}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly tags?: Array<string>;
    /**
     *
     * @type {string}
     * @memberof VariablesApiListVariablesV1VariablesGet
     */
    readonly teamId?: string;
}
/**
 * Request parameters for mergeVariablePostV1VariablesVariableIdMergePost operation in VariablesApi.
 * @export
 * @interface VariablesApiMergeVariablePostV1VariablesVariableIdMergePostRequest
 */
export interface VariablesApiMergeVariablePostV1VariablesVariableIdMergePostRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiMergeVariablePostV1VariablesVariableIdMergePost
     */
    readonly variableId: string;
    /**
     *
     * @type {BodyMergeVariablePostV1VariablesVariableIdMergePost}
     * @memberof VariablesApiMergeVariablePostV1VariablesVariableIdMergePost
     */
    readonly bodyMergeVariablePostV1VariablesVariableIdMergePost: BodyMergeVariablePostV1VariablesVariableIdMergePost;
    /**
     *
     * @type {string}
     * @memberof VariablesApiMergeVariablePostV1VariablesVariableIdMergePost
     */
    readonly teamId?: string;
}
/**
 * Request parameters for patchVariableV1VariablesVariableIdPatch operation in VariablesApi.
 * @export
 * @interface VariablesApiPatchVariableV1VariablesVariableIdPatchRequest
 */
export interface VariablesApiPatchVariableV1VariablesVariableIdPatchRequest {
    /**
     *
     * @type {string}
     * @memberof VariablesApiPatchVariableV1VariablesVariableIdPatch
     */
    readonly variableId: string;
    /**
     *
     * @type {PatchVariableOp | Array<PatchVariableOp>}
     * @memberof VariablesApiPatchVariableV1VariablesVariableIdPatch
     */
    readonly patchVariableOpArrayPatchVariableOp: PatchVariableOp | Array<PatchVariableOp>;
    /**
     *
     * @type {string}
     * @memberof VariablesApiPatchVariableV1VariablesVariableIdPatch
     */
    readonly teamId?: string;
}
/**
 * VariablesApi - object-oriented interface
 * @export
 * @class VariablesApi
 * @extends {BaseAPI}
 */
export declare class VariablesApi extends BaseAPI {
    /**
     * Create a Variable.
     * @summary Create A Variable.
     * @param {VariablesApiCreateAVariableV1VariablesPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    createAVariableV1VariablesPost(requestParameters: VariablesApiCreateAVariableV1VariablesPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariableOut>>;
    /**
     * Create mulitple Variables.
     * @summary Create Multiple Variables.
     * @param {VariablesApiCreateMultipleVariablesV1VariablesBulkPostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    createMultipleVariablesV1VariablesBulkPost(requestParameters: VariablesApiCreateMultipleVariablesV1VariablesBulkPostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariableOut[]>>;
    /**
     * Delete a Variable.  Deletion will fail if this Variable is attached to any existing Feature.
     * @summary Delete Variable
     * @param {VariablesApiDeleteVariableV1VariablesVariableIdDeleteRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    deleteVariableV1VariablesVariableIdDelete(requestParameters: VariablesApiDeleteVariableV1VariablesVariableIdDeleteRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
    /**
     * Get Variable.
     * @summary Get Variable
     * @param {VariablesApiGetVariableV1VariablesVariableIdGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    getVariableV1VariablesVariableIdGet(requestParameters: VariablesApiGetVariableV1VariablesVariableIdGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariableOut>>;
    /**
     * Get associations using the Variable.
     * @summary List Associations
     * @param {VariablesApiListAssociationsV1VariablesVariableIdAssociationsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    listAssociationsV1VariablesVariableIdAssociationsGet(requestParameters: VariablesApiListAssociationsV1VariablesVariableIdAssociationsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<AssociationPaginationOut>>;
    /**
     * List authenticated user\'s variables.
     * @summary List Authenticated User Variables
     * @param {VariablesApiListAuthenticatedUserVariablesV1UserVariablesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    listAuthenticatedUserVariablesV1UserVariablesGet(requestParameters?: VariablesApiListAuthenticatedUserVariablesV1UserVariablesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariablePaginationOut>>;
    /**
     * Get dashboards connected to the Variable.
     * @summary List Dashboards
     * @param {VariablesApiListDashboardsV1VariablesVariableIdDashboardsGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    listDashboardsV1VariablesVariableIdDashboardsGet(requestParameters: VariablesApiListDashboardsV1VariablesVariableIdDashboardsGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<DashboardPaginationOut>>;
    /**
     * List a user\'s variables.
     * @summary List User Variables
     * @param {VariablesApiListUserVariablesV1UsersUserIdVariablesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    listUserVariablesV1UsersUserIdVariablesGet(requestParameters: VariablesApiListUserVariablesV1UsersUserIdVariablesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariablePaginationOut>>;
    /**
     * List Variables.
     * @summary List Variables
     * @param {VariablesApiListVariablesV1VariablesGetRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    listVariablesV1VariablesGet(requestParameters?: VariablesApiListVariablesV1VariablesGetRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<VariablePaginationOut>>;
    /**
     * Merge a variable with other ids.
     * @summary Merge Variable Post
     * @param {VariablesApiMergeVariablePostV1VariablesVariableIdMergePostRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    mergeVariablePostV1VariablesVariableIdMergePost(requestParameters: VariablesApiMergeVariablePostV1VariablesVariableIdMergePostRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<any>>;
    /**
     * Modify Variable resource with partial update.
     * @summary Patch Variable
     * @param {VariablesApiPatchVariableV1VariablesVariableIdPatchRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof VariablesApi
     */
    patchVariableV1VariablesVariableIdPatch(requestParameters: VariablesApiPatchVariableV1VariablesVariableIdPatchRequest, options?: AxiosRequestConfig): Promise<import("axios").AxiosResponse<void>>;
}
